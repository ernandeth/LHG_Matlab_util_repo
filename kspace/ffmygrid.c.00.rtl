
;; Function strtod

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 7 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(note 7 6 13 NOTE_INSN_FUNCTION_BEG 0)

(insn 13 7 15 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 15 13 17 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 17 15 19 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 43)) -1 (nil)
    (nil))

(insn 19 17 20 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(call_insn 20 19 22 (set (reg:DF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("__strtod_internal")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 22 20 24 (set (reg:DF 44)
        (reg:DF 8 st(0))) -1 (nil)
    (nil))

(insn 24 22 26 (set (reg/i:DF 8 st(0))
        (reg:DF 44)) -1 (nil)
    (nil))

(insn 26 24 27 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 27 26 28 (set (pc)
        (label_ref 33)) -1 (nil)
    (nil))

(barrier 28 27 30)

(note 30 28 32 NOTE_INSN_FUNCTION_END 0)

(insn 32 30 33 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 33 32 34 2 "" "" [0 uses])

(insn 34 33 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function strtol

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 8 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(insn 8 6 9 (set (reg/v:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)
        (nil)))

(note 9 8 15 NOTE_INSN_FUNCTION_BEG 0)

(insn 15 9 17 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 17 15 19 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 44)) -1 (nil)
    (nil))

(insn 19 17 21 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 43)) -1 (nil)
    (nil))

(insn 21 19 22 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(call_insn 22 21 24 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__strtol_internal")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 24 22 26 (set (reg:SI 45)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 26 24 28 (set (reg/i:SI 0 eax)
        (reg:SI 45)) -1 (nil)
    (nil))

(insn 28 26 29 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 29 28 30 (set (pc)
        (label_ref 35)) -1 (nil)
    (nil))

(barrier 30 29 32)

(note 32 30 34 NOTE_INSN_FUNCTION_END 0)

(insn 34 32 35 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 35 34 36 3 "" "" [0 uses])

(insn 36 35 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function strtoul

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 8 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(insn 8 6 9 (set (reg/v:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)
        (nil)))

(note 9 8 15 NOTE_INSN_FUNCTION_BEG 0)

(insn 15 9 17 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 17 15 19 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 44)) -1 (nil)
    (nil))

(insn 19 17 21 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 43)) -1 (nil)
    (nil))

(insn 21 19 22 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(call_insn 22 21 24 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__strtoul_internal")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 24 22 26 (set (reg:SI 45)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 26 24 28 (set (reg/i:SI 0 eax)
        (reg:SI 45)) -1 (nil)
    (nil))

(insn 28 26 29 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 29 28 30 (set (pc)
        (label_ref 35)) -1 (nil)
    (nil))

(barrier 30 29 32)

(note 32 30 34 NOTE_INSN_FUNCTION_END 0)

(insn 34 32 35 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 35 34 36 4 "" "" [0 uses])

(insn 36 35 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function strtoq

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 8 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(insn 8 6 9 (set (reg/v:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)
        (nil)))

(note 9 8 15 NOTE_INSN_FUNCTION_BEG 0)

(insn 15 9 17 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 17 15 19 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 44)) -1 (nil)
    (nil))

(insn 19 17 21 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 43)) -1 (nil)
    (nil))

(insn 21 19 22 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(call_insn 22 21 24 (set (reg:DI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__strtoll_internal")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 24 22 26 (set (reg:DI 45)
        (reg:DI 0 eax)) -1 (nil)
    (nil))

(insn 26 24 28 (set (reg/i:DI 0 eax)
        (reg:DI 45)) -1 (nil)
    (nil))

(insn 28 26 29 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 29 28 30 (set (pc)
        (label_ref 35)) -1 (nil)
    (nil))

(barrier 30 29 32)

(note 32 30 34 NOTE_INSN_FUNCTION_END 0)

(insn 34 32 35 (clobber (reg/i:DI 0 eax)) -1 (nil)
    (nil))

(code_label 35 34 36 5 "" "" [0 uses])

(insn 36 35 0 (use (reg/i:DI 0 eax)) -1 (nil)
    (nil))

;; Function strtouq

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 8 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(insn 8 6 9 (set (reg/v:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)
        (nil)))

(note 9 8 15 NOTE_INSN_FUNCTION_BEG 0)

(insn 15 9 17 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 17 15 19 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 44)) -1 (nil)
    (nil))

(insn 19 17 21 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 43)) -1 (nil)
    (nil))

(insn 21 19 22 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(call_insn 22 21 24 (set (reg:DI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__strtoull_internal")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 24 22 26 (set (reg:DI 45)
        (reg:DI 0 eax)) -1 (nil)
    (nil))

(insn 26 24 28 (set (reg/i:DI 0 eax)
        (reg:DI 45)) -1 (nil)
    (nil))

(insn 28 26 29 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 29 28 30 (set (pc)
        (label_ref 35)) -1 (nil)
    (nil))

(barrier 30 29 32)

(note 32 30 34 NOTE_INSN_FUNCTION_END 0)

(insn 34 32 35 (clobber (reg/i:DI 0 eax)) -1 (nil)
    (nil))

(code_label 35 34 36 6 "" "" [0 uses])

(insn 36 35 0 (use (reg/i:DI 0 eax)) -1 (nil)
    (nil))

;; Function strtoll

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 8 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(insn 8 6 9 (set (reg/v:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)
        (nil)))

(note 9 8 15 NOTE_INSN_FUNCTION_BEG 0)

(insn 15 9 17 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 17 15 19 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 44)) -1 (nil)
    (nil))

(insn 19 17 21 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 43)) -1 (nil)
    (nil))

(insn 21 19 22 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(call_insn 22 21 24 (set (reg:DI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__strtoll_internal")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 24 22 26 (set (reg:DI 45)
        (reg:DI 0 eax)) -1 (nil)
    (nil))

(insn 26 24 28 (set (reg/i:DI 0 eax)
        (reg:DI 45)) -1 (nil)
    (nil))

(insn 28 26 29 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 29 28 30 (set (pc)
        (label_ref 35)) -1 (nil)
    (nil))

(barrier 30 29 32)

(note 32 30 34 NOTE_INSN_FUNCTION_END 0)

(insn 34 32 35 (clobber (reg/i:DI 0 eax)) -1 (nil)
    (nil))

(code_label 35 34 36 7 "" "" [0 uses])

(insn 36 35 0 (use (reg/i:DI 0 eax)) -1 (nil)
    (nil))

;; Function strtoull

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 8 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(insn 8 6 9 (set (reg/v:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)
        (nil)))

(note 9 8 15 NOTE_INSN_FUNCTION_BEG 0)

(insn 15 9 17 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 17 15 19 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 44)) -1 (nil)
    (nil))

(insn 19 17 21 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 43)) -1 (nil)
    (nil))

(insn 21 19 22 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(call_insn 22 21 24 (set (reg:DI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__strtoull_internal")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 24 22 26 (set (reg:DI 45)
        (reg:DI 0 eax)) -1 (nil)
    (nil))

(insn 26 24 28 (set (reg/i:DI 0 eax)
        (reg:DI 45)) -1 (nil)
    (nil))

(insn 28 26 29 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 29 28 30 (set (pc)
        (label_ref 35)) -1 (nil)
    (nil))

(barrier 30 29 32)

(note 32 30 34 NOTE_INSN_FUNCTION_END 0)

(insn 34 32 35 (clobber (reg/i:DI 0 eax)) -1 (nil)
    (nil))

(code_label 35 34 36 8 "" "" [0 uses])

(insn 36 35 0 (use (reg/i:DI 0 eax)) -1 (nil)
    (nil))

;; Function atof

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 11 0x40193b40 NOTE_INSN_BLOCK_BEG 0)

(insn 11 8 12 (set (reg/v:SI 44)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(note 12 11 14 0x40193960 NOTE_INSN_BLOCK_BEG 0)

(insn/i 14 12 15 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 15 14 16 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn/i 16 15 17 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) 27 {pushsi2} (nil)
    (nil))

(insn/i 17 16 18 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(call_insn/i 18 17 19 (set (reg:DF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("__strtod_internal")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn/i 19 18 20 (set (reg:DF 45)
        (reg:DF 8 st(0))) -1 (nil)
    (nil))

(insn/i 20 19 21 (set (reg:DF 43)
        (reg:DF 45)) -1 (nil)
    (nil))

(insn/i 21 20 22 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 22 21 23 (set (pc)
        (label_ref 25)) -1 (nil)
    (nil))

(barrier/i 23 22 24)

(insn/i 24 23 25 (clobber (reg:DF 43)) -1 (nil)
    (nil))

(code_label/i 25 24 26 10 "" "" [0 uses])

(note 26 25 28 0x40193960 NOTE_INSN_BLOCK_END 0)

(insn 28 26 29 (set (reg/i:DF 8 st(0))
        (reg:DF 43)) -1 (nil)
    (nil))

(jump_insn 29 28 30 (set (pc)
        (label_ref 36)) -1 (nil)
    (nil))

(barrier 30 29 32)

(note 32 30 33 0x40193b40 NOTE_INSN_BLOCK_END 0)

(note 33 32 35 NOTE_INSN_FUNCTION_END 0)

(insn 35 33 36 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 36 35 37 9 "" "" [0 uses])

(insn 37 36 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function atoi

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 11 0x401956e0 NOTE_INSN_BLOCK_BEG 0)

(insn 11 8 13 (set (reg/v:SI 44)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg/v:SI 45)
        (const_int 10 [0xa])) -1 (nil)
    (nil))

(note 14 13 16 0x40195500 NOTE_INSN_BLOCK_BEG 0)

(insn/i 16 14 17 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn/i 17 16 18 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 10 [0xa])) 27 {pushsi2} (nil)
    (nil))

(insn/i 18 17 19 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) 27 {pushsi2} (nil)
    (nil))

(insn/i 19 18 20 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(call_insn/i 20 19 21 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__strtol_internal")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn/i 21 20 22 (set (reg:SI 46)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn/i 22 21 23 (set (reg:SI 43)
        (reg:SI 46)) -1 (nil)
    (nil))

(insn/i 23 22 24 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 24 23 25 (set (pc)
        (label_ref 27)) -1 (nil)
    (nil))

(barrier/i 25 24 26)

(insn/i 26 25 27 (clobber (reg:SI 43)) -1 (nil)
    (nil))

(code_label/i 27 26 28 12 "" "" [0 uses])

(note 28 27 30 0x40195500 NOTE_INSN_BLOCK_END 0)

(insn 30 28 31 (set (reg/i:SI 0 eax)
        (reg:SI 43)) -1 (nil)
    (nil))

(jump_insn 31 30 32 (set (pc)
        (label_ref 38)) -1 (nil)
    (nil))

(barrier 32 31 34)

(note 34 32 35 0x401956e0 NOTE_INSN_BLOCK_END 0)

(note 35 34 37 NOTE_INSN_FUNCTION_END 0)

(insn 37 35 38 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 38 37 39 11 "" "" [0 uses])

(insn 39 38 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function atol

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 11 0x40197240 NOTE_INSN_BLOCK_BEG 0)

(insn 11 8 13 (set (reg/v:SI 44)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg/v:SI 45)
        (const_int 10 [0xa])) -1 (nil)
    (nil))

(note 14 13 16 0x40197060 NOTE_INSN_BLOCK_BEG 0)

(insn/i 16 14 17 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn/i 17 16 18 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 10 [0xa])) 27 {pushsi2} (nil)
    (nil))

(insn/i 18 17 19 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) 27 {pushsi2} (nil)
    (nil))

(insn/i 19 18 20 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(call_insn/i 20 19 21 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__strtol_internal")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn/i 21 20 22 (set (reg:SI 46)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn/i 22 21 23 (set (reg:SI 43)
        (reg:SI 46)) -1 (nil)
    (nil))

(insn/i 23 22 24 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 24 23 25 (set (pc)
        (label_ref 27)) -1 (nil)
    (nil))

(barrier/i 25 24 26)

(insn/i 26 25 27 (clobber (reg:SI 43)) -1 (nil)
    (nil))

(code_label/i 27 26 28 14 "" "" [0 uses])

(note 28 27 30 0x40197060 NOTE_INSN_BLOCK_END 0)

(insn 30 28 31 (set (reg/i:SI 0 eax)
        (reg:SI 43)) -1 (nil)
    (nil))

(jump_insn 31 30 32 (set (pc)
        (label_ref 38)) -1 (nil)
    (nil))

(barrier 32 31 34)

(note 34 32 35 0x40197240 NOTE_INSN_BLOCK_END 0)

(note 35 34 37 NOTE_INSN_FUNCTION_END 0)

(insn 37 35 38 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 38 37 39 13 "" "" [0 uses])

(insn 39 38 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function atoll

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 11 0x40197de0 NOTE_INSN_BLOCK_BEG 0)

(insn 11 8 13 (set (reg/v:SI 44)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg/v:SI 45)
        (const_int 10 [0xa])) -1 (nil)
    (nil))

(note 14 13 16 0x40197c00 NOTE_INSN_BLOCK_BEG 0)

(insn/i 16 14 17 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn/i 17 16 18 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 10 [0xa])) 27 {pushsi2} (nil)
    (nil))

(insn/i 18 17 19 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) 27 {pushsi2} (nil)
    (nil))

(insn/i 19 18 20 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(call_insn/i 20 19 21 (set (reg:DI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__strtoll_internal")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn/i 21 20 22 (set (reg:DI 46)
        (reg:DI 0 eax)) -1 (nil)
    (nil))

(insn/i 22 21 23 (set (reg:DI 43)
        (reg:DI 46)) -1 (nil)
    (nil))

(insn/i 23 22 24 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 24 23 25 (set (pc)
        (label_ref 27)) -1 (nil)
    (nil))

(barrier/i 25 24 26)

(insn/i 26 25 27 (clobber (reg:DI 43)) -1 (nil)
    (nil))

(code_label/i 27 26 28 16 "" "" [0 uses])

(note 28 27 30 0x40197c00 NOTE_INSN_BLOCK_END 0)

(insn 30 28 31 (set (reg/i:DI 0 eax)
        (reg:DI 43)) -1 (nil)
    (nil))

(jump_insn 31 30 32 (set (pc)
        (label_ref 38)) -1 (nil)
    (nil))

(barrier 32 31 34)

(note 34 32 35 0x40197de0 NOTE_INSN_BLOCK_END 0)

(note 35 34 37 NOTE_INSN_FUNCTION_END 0)

(insn 37 35 38 (clobber (reg/i:DI 0 eax)) -1 (nil)
    (nil))

(code_label 38 37 39 15 "" "" [0 uses])

(insn 39 38 0 (use (reg/i:DI 0 eax)) -1 (nil)
    (nil))

;; Function vprintf

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 7 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(note 7 6 13 NOTE_INSN_FUNCTION_BEG 0)

(insn 13 7 15 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 15 13 17 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 43)) -1 (nil)
    (nil))

(insn 17 15 19 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(insn 19 17 20 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem/f:SI (symbol_ref:SI ("stdout")) 0)) -1 (nil)
    (nil))

(call_insn 20 19 22 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("vfprintf")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 22 20 24 (set (reg:SI 44)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 24 22 26 (set (reg/i:SI 0 eax)
        (reg:SI 44)) -1 (nil)
    (nil))

(insn 26 24 27 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 27 26 28 (set (pc)
        (label_ref 33)) -1 (nil)
    (nil))

(barrier 28 27 30)

(note 30 28 32 NOTE_INSN_FUNCTION_END 0)

(insn 32 30 33 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 33 32 34 17 "" "" [0 uses])

(insn 34 33 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function getchar

(note 2 0 3 NOTE_INSN_DELETED 0)

(note 3 2 9 NOTE_INSN_FUNCTION_BEG 0)

(insn 9 3 11 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 11 9 12 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem/f:SI (symbol_ref:SI ("stdin")) 0)) -1 (nil)
    (nil))

(call_insn 12 11 14 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("_IO_getc")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 14 12 16 (set (reg:SI 42)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 16 14 18 (set (reg/i:SI 0 eax)
        (reg:SI 42)) -1 (nil)
    (nil))

(insn 18 16 19 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 19 18 20 (set (pc)
        (label_ref 25)) -1 (nil)
    (nil))

(barrier 20 19 22)

(note 22 20 24 NOTE_INSN_FUNCTION_END 0)

(insn 24 22 25 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 25 24 26 18 "" "" [0 uses])

(insn 26 25 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function getc_unlocked

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 12 NOTE_INSN_FUNCTION_BEG 0)

(insn 12 5 13 (set (reg:SI 43)
        (mem/s:SI (plus:SI (reg/v:SI 42)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 13 12 14 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 43)
            (mem/s:SI (plus:SI (reg/v:SI 42)
                    (const_int 8 [0x8])) 0))) -1 (nil)
    (nil))

(jump_insn 14 13 16 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) -1 (nil)
    (nil))

(insn 16 14 18 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 18 16 19 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(call_insn 19 18 21 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__uflow")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 21 19 23 (set (reg:SI 44)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 23 21 25 (set (reg/i:SI 0 eax)
        (reg:SI 44)) -1 (nil)
    (nil))

(insn 25 23 26 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 26 25 27 (set (pc)
        (label_ref 45)) -1 (nil)
    (nil))

(barrier 27 26 28)

(code_label 28 27 35 20 "" "" [0 uses])

(insn 35 28 36 (set (reg:SI 48)
        (mem/s:SI (plus:SI (reg/v:SI 42)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 36 35 30 (parallel[ 
            (set (reg:SI 45)
                (zero_extend:SI (mem:QI (reg:SI 48) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 30 36 31 (set (reg:SI 47)
        (mem/s:SI (plus:SI (reg/v:SI 42)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 31 30 33 (parallel[ 
            (set (reg:SI 46)
                (plus:SI (reg:SI 47)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 33 31 38 (set (mem/s:SI (plus:SI (reg/v:SI 42)
                (const_int 4 [0x4])) 0)
        (reg:SI 46)) -1 (nil)
    (nil))

(insn 38 33 39 (set (reg/i:SI 0 eax)
        (reg:SI 45)) -1 (nil)
    (nil))

(jump_insn 39 38 40 (set (pc)
        (label_ref 45)) -1 (nil)
    (nil))

(barrier 40 39 42)

(note 42 40 44 NOTE_INSN_FUNCTION_END 0)

(insn 44 42 45 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 45 44 46 19 "" "" [0 uses])

(insn 46 45 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function getchar_unlocked

(note 2 0 3 NOTE_INSN_DELETED 0)

(note 3 2 9 NOTE_INSN_FUNCTION_BEG 0)

(insn 9 3 11 (set (reg:SI 42)
        (mem/f:SI (symbol_ref:SI ("stdin")) 0)) -1 (nil)
    (nil))

(insn 11 9 14 (set (reg:SI 43)
        (mem/f:SI (symbol_ref:SI ("stdin")) 0)) -1 (nil)
    (nil))

(insn 14 11 15 (set (reg:SI 44)
        (mem/s:SI (plus:SI (reg:SI 42)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 15 14 16 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 44)
            (mem/s:SI (plus:SI (reg:SI 43)
                    (const_int 8 [0x8])) 0))) -1 (nil)
    (nil))

(jump_insn 16 15 18 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) -1 (nil)
    (nil))

(insn 18 16 20 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 20 18 21 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem/f:SI (symbol_ref:SI ("stdin")) 0)) -1 (nil)
    (nil))

(call_insn 21 20 23 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__uflow")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 23 21 25 (set (reg:SI 45)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 25 23 27 (set (reg/i:SI 0 eax)
        (reg:SI 45)) -1 (nil)
    (nil))

(insn 27 25 28 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 28 27 29 (set (pc)
        (label_ref 49)) -1 (nil)
    (nil))

(barrier 29 28 30)

(code_label 30 29 32 22 "" "" [0 uses])

(insn 32 30 39 (set (reg:SI 47)
        (mem/f:SI (symbol_ref:SI ("stdin")) 0)) -1 (nil)
    (nil))

(insn 39 32 40 (set (reg:SI 50)
        (mem/s:SI (plus:SI (reg:SI 47)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 40 39 34 (parallel[ 
            (set (reg:SI 46)
                (zero_extend:SI (mem:QI (reg:SI 50) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 34 40 35 (set (reg:SI 49)
        (mem/s:SI (plus:SI (reg:SI 47)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 35 34 37 (parallel[ 
            (set (reg:SI 48)
                (plus:SI (reg:SI 49)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 37 35 42 (set (mem/s:SI (plus:SI (reg:SI 47)
                (const_int 4 [0x4])) 0)
        (reg:SI 48)) -1 (nil)
    (nil))

(insn 42 37 43 (set (reg/i:SI 0 eax)
        (reg:SI 46)) -1 (nil)
    (nil))

(jump_insn 43 42 44 (set (pc)
        (label_ref 49)) -1 (nil)
    (nil))

(barrier 44 43 46)

(note 46 44 48 NOTE_INSN_FUNCTION_END 0)

(insn 48 46 49 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 49 48 50 21 "" "" [0 uses])

(insn 50 49 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function putchar

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 11 NOTE_INSN_FUNCTION_BEG 0)

(insn 11 5 13 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 13 11 15 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem/f:SI (symbol_ref:SI ("stdout")) 0)) -1 (nil)
    (nil))

(insn 15 13 16 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(call_insn 16 15 18 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("_IO_putc")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 18 16 20 (set (reg:SI 43)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 20 18 22 (set (reg/i:SI 0 eax)
        (reg:SI 43)) -1 (nil)
    (nil))

(insn 22 20 23 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 23 22 24 (set (pc)
        (label_ref 29)) -1 (nil)
    (nil))

(barrier 24 23 26)

(note 26 24 28 NOTE_INSN_FUNCTION_END 0)

(insn 28 26 29 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 29 28 30 23 "" "" [0 uses])

(insn 30 29 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function fputc_unlocked

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 7 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(note 7 6 14 NOTE_INSN_FUNCTION_BEG 0)

(insn 14 7 15 (set (reg:SI 44)
        (mem/s:SI (plus:SI (reg/v:SI 43)
                (const_int 20 [0x14])) 0)) -1 (nil)
    (nil))

(insn 15 14 16 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 44)
            (mem/s:SI (plus:SI (reg/v:SI 43)
                    (const_int 24 [0x18])) 0))) -1 (nil)
    (nil))

(jump_insn 16 15 18 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) -1 (nil)
    (nil))

(insn 18 16 19 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 19 18 21 (parallel[ 
            (set (reg:SI 46)
                (zero_extend:SI (subreg:QI (reg/v:SI 42) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 21 19 23 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:SI 46)) -1 (nil)
    (nil))

(insn 23 21 24 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 43)) -1 (nil)
    (nil))

(call_insn 24 23 26 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__overflow")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 26 24 28 (set (reg:SI 45)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 28 26 30 (set (reg/i:SI 0 eax)
        (reg:SI 45)) -1 (nil)
    (nil))

(insn 30 28 31 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 31 30 32 (set (pc)
        (label_ref 54)) -1 (nil)
    (nil))

(barrier 32 31 33)

(code_label 33 32 40 25 "" "" [0 uses])

(insn 40 33 42 (set (reg:SI 50)
        (mem/s:SI (plus:SI (reg/v:SI 43)
                (const_int 20 [0x14])) 0)) -1 (nil)
    (nil))

(insn 42 40 44 (set (reg:QI 51)
        (subreg:QI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 44 42 45 (set (mem:QI (reg:SI 50) 0)
        (reg:QI 51)) -1 (nil)
    (nil))

(insn 45 44 35 (parallel[ 
            (set (reg:SI 47)
                (zero_extend:SI (reg:QI 51)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 35 45 36 (set (reg:SI 49)
        (mem/s:SI (plus:SI (reg/v:SI 43)
                (const_int 20 [0x14])) 0)) -1 (nil)
    (nil))

(insn 36 35 38 (parallel[ 
            (set (reg:SI 48)
                (plus:SI (reg:SI 49)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 38 36 47 (set (mem/s:SI (plus:SI (reg/v:SI 43)
                (const_int 20 [0x14])) 0)
        (reg:SI 48)) -1 (nil)
    (nil))

(insn 47 38 48 (set (reg/i:SI 0 eax)
        (reg:SI 47)) -1 (nil)
    (nil))

(jump_insn 48 47 49 (set (pc)
        (label_ref 54)) -1 (nil)
    (nil))

(barrier 49 48 51)

(note 51 49 53 NOTE_INSN_FUNCTION_END 0)

(insn 53 51 54 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 54 53 55 24 "" "" [0 uses])

(insn 55 54 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function putc_unlocked

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 7 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(note 7 6 14 NOTE_INSN_FUNCTION_BEG 0)

(insn 14 7 15 (set (reg:SI 44)
        (mem/s:SI (plus:SI (reg/v:SI 43)
                (const_int 20 [0x14])) 0)) -1 (nil)
    (nil))

(insn 15 14 16 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 44)
            (mem/s:SI (plus:SI (reg/v:SI 43)
                    (const_int 24 [0x18])) 0))) -1 (nil)
    (nil))

(jump_insn 16 15 18 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) -1 (nil)
    (nil))

(insn 18 16 19 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 19 18 21 (parallel[ 
            (set (reg:SI 46)
                (zero_extend:SI (subreg:QI (reg/v:SI 42) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 21 19 23 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:SI 46)) -1 (nil)
    (nil))

(insn 23 21 24 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 43)) -1 (nil)
    (nil))

(call_insn 24 23 26 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__overflow")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 26 24 28 (set (reg:SI 45)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 28 26 30 (set (reg/i:SI 0 eax)
        (reg:SI 45)) -1 (nil)
    (nil))

(insn 30 28 31 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 31 30 32 (set (pc)
        (label_ref 54)) -1 (nil)
    (nil))

(barrier 32 31 33)

(code_label 33 32 40 27 "" "" [0 uses])

(insn 40 33 42 (set (reg:SI 50)
        (mem/s:SI (plus:SI (reg/v:SI 43)
                (const_int 20 [0x14])) 0)) -1 (nil)
    (nil))

(insn 42 40 44 (set (reg:QI 51)
        (subreg:QI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 44 42 45 (set (mem:QI (reg:SI 50) 0)
        (reg:QI 51)) -1 (nil)
    (nil))

(insn 45 44 35 (parallel[ 
            (set (reg:SI 47)
                (zero_extend:SI (reg:QI 51)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 35 45 36 (set (reg:SI 49)
        (mem/s:SI (plus:SI (reg/v:SI 43)
                (const_int 20 [0x14])) 0)) -1 (nil)
    (nil))

(insn 36 35 38 (parallel[ 
            (set (reg:SI 48)
                (plus:SI (reg:SI 49)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 38 36 47 (set (mem/s:SI (plus:SI (reg/v:SI 43)
                (const_int 20 [0x14])) 0)
        (reg:SI 48)) -1 (nil)
    (nil))

(insn 47 38 48 (set (reg/i:SI 0 eax)
        (reg:SI 47)) -1 (nil)
    (nil))

(jump_insn 48 47 49 (set (pc)
        (label_ref 54)) -1 (nil)
    (nil))

(barrier 49 48 51)

(note 51 49 53 NOTE_INSN_FUNCTION_END 0)

(insn 53 51 54 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 54 53 55 26 "" "" [0 uses])

(insn 55 54 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function putchar_unlocked

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 11 NOTE_INSN_FUNCTION_BEG 0)

(insn 11 5 13 (set (reg:SI 43)
        (mem/f:SI (symbol_ref:SI ("stdout")) 0)) -1 (nil)
    (nil))

(insn 13 11 16 (set (reg:SI 44)
        (mem/f:SI (symbol_ref:SI ("stdout")) 0)) -1 (nil)
    (nil))

(insn 16 13 17 (set (reg:SI 45)
        (mem/s:SI (plus:SI (reg:SI 43)
                (const_int 20 [0x14])) 0)) -1 (nil)
    (nil))

(insn 17 16 18 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 45)
            (mem/s:SI (plus:SI (reg:SI 44)
                    (const_int 24 [0x18])) 0))) -1 (nil)
    (nil))

(jump_insn 18 17 20 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) -1 (nil)
    (nil))

(insn 20 18 21 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 21 20 23 (parallel[ 
            (set (reg:SI 47)
                (zero_extend:SI (subreg:QI (reg/v:SI 42) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 23 21 25 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:SI 47)) -1 (nil)
    (nil))

(insn 25 23 26 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem/f:SI (symbol_ref:SI ("stdout")) 0)) -1 (nil)
    (nil))

(call_insn 26 25 28 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__overflow")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 28 26 30 (set (reg:SI 46)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 30 28 32 (set (reg/i:SI 0 eax)
        (reg:SI 46)) -1 (nil)
    (nil))

(insn 32 30 33 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 33 32 34 (set (pc)
        (label_ref 58)) -1 (nil)
    (nil))

(barrier 34 33 35)

(code_label 35 34 37 29 "" "" [0 uses])

(insn 37 35 44 (set (reg:SI 49)
        (mem/f:SI (symbol_ref:SI ("stdout")) 0)) -1 (nil)
    (nil))

(insn 44 37 46 (set (reg:SI 52)
        (mem/s:SI (plus:SI (reg:SI 49)
                (const_int 20 [0x14])) 0)) -1 (nil)
    (nil))

(insn 46 44 48 (set (reg:QI 53)
        (subreg:QI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 48 46 49 (set (mem:QI (reg:SI 52) 0)
        (reg:QI 53)) -1 (nil)
    (nil))

(insn 49 48 39 (parallel[ 
            (set (reg:SI 48)
                (zero_extend:SI (reg:QI 53)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 39 49 40 (set (reg:SI 51)
        (mem/s:SI (plus:SI (reg:SI 49)
                (const_int 20 [0x14])) 0)) -1 (nil)
    (nil))

(insn 40 39 42 (parallel[ 
            (set (reg:SI 50)
                (plus:SI (reg:SI 51)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 42 40 51 (set (mem/s:SI (plus:SI (reg:SI 49)
                (const_int 20 [0x14])) 0)
        (reg:SI 50)) -1 (nil)
    (nil))

(insn 51 42 52 (set (reg/i:SI 0 eax)
        (reg:SI 48)) -1 (nil)
    (nil))

(jump_insn 52 51 53 (set (pc)
        (label_ref 58)) -1 (nil)
    (nil))

(barrier 53 52 55)

(note 55 53 57 NOTE_INSN_FUNCTION_END 0)

(insn 57 55 58 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 58 57 59 28 "" "" [0 uses])

(insn 59 58 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function feof_unlocked

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 11 NOTE_INSN_FUNCTION_BEG 0)

(insn 11 5 12 (set (reg:SI 44)
        (mem/s:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 12 11 14 (parallel[ 
            (set (reg:SI 43)
                (lshiftrt:SI (reg:SI 44)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (expr_list:REG_EQUAL (lshiftrt:SI (mem/s:SI (reg/v:SI 42) 0)
            (const_int 4 [0x4]))
        (nil)))

(insn 14 12 16 (parallel[ 
            (set (reg:SI 43)
                (and:SI (reg:SI 43)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 16 14 17 (set (reg/i:SI 0 eax)
        (reg:SI 43)) -1 (nil)
    (nil))

(jump_insn 17 16 18 (set (pc)
        (label_ref 23)) -1 (nil)
    (nil))

(barrier 18 17 20)

(note 20 18 22 NOTE_INSN_FUNCTION_END 0)

(insn 22 20 23 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 23 22 24 30 "" "" [0 uses])

(insn 24 23 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function ferror_unlocked

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 11 NOTE_INSN_FUNCTION_BEG 0)

(insn 11 5 12 (set (reg:SI 44)
        (mem/s:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 12 11 14 (parallel[ 
            (set (reg:SI 43)
                (lshiftrt:SI (reg:SI 44)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (expr_list:REG_EQUAL (lshiftrt:SI (mem/s:SI (reg/v:SI 42) 0)
            (const_int 5 [0x5]))
        (nil)))

(insn 14 12 16 (parallel[ 
            (set (reg:SI 43)
                (and:SI (reg:SI 43)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 16 14 17 (set (reg/i:SI 0 eax)
        (reg:SI 43)) -1 (nil)
    (nil))

(jump_insn 17 16 18 (set (pc)
        (label_ref 23)) -1 (nil)
    (nil))

(barrier 18 17 20)

(note 20 18 22 NOTE_INSN_FUNCTION_END 0)

(insn 22 20 23 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 23 22 24 31 "" "" [0 uses])

(insn 24 23 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function __sgn

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(note 5 4 11 NOTE_INSN_FUNCTION_BEG 0)

(insn 11 5 12 (set (reg:DF 44)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC0")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:DF (mem/u/f:DF (symbol_ref/u:SI ("*.LC0")) 0) 0 [0x0] 0 [0x0] 0 [0x0])
        (nil)))

(jump_insn 12 11 13 (parallel[ 
            (set (pc)
                (if_then_else (ne:CCFPU (reg/v:DF 42)
                        (reg:DF 44))
                    (label_ref 15)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn 13 12 14 (set (pc)
        (label_ref 32)) -1 (nil)
    (nil))

(barrier 14 13 15)

(code_label 15 14 17 35 "" "" [0 uses])

(insn 17 15 18 (set (reg:DF 45)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC0")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:DF (mem/u/f:DF (symbol_ref/u:SI ("*.LC0")) 0) 0 [0x0] 0 [0x0] 0 [0x0])
        (nil)))

(jump_insn 18 17 19 (parallel[ 
            (set (pc)
                (if_then_else (gt:CCFPU (reg/v:DF 42)
                        (reg:DF 45))
                    (label_ref 21)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn 19 18 20 (set (pc)
        (label_ref 26)) -1 (nil)
    (nil))

(barrier 20 19 21)

(code_label 21 20 23 38 "" "" [0 uses])

(insn 23 21 24 (set (reg:DF 43)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC1")) 0)) -1 (nil)
    (nil))

(jump_insn 24 23 25 (set (pc)
        (label_ref 29)) -1 (nil)
    (nil))

(barrier 25 24 26)

(code_label 26 25 28 36 "" "" [0 uses])

(insn 28 26 29 (set (reg:DF 43)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC2")) 0)) -1 (nil)
    (nil))

(code_label 29 28 30 37 "" "" [0 uses])

(jump_insn 30 29 31 (set (pc)
        (label_ref 35)) -1 (nil)
    (nil))

(barrier 31 30 32)

(code_label 32 31 34 33 "" "" [0 uses])

(insn 34 32 35 (set (reg:DF 43)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC0")) 0)) -1 (nil)
    (nil))

(code_label 35 34 37 34 "" "" [0 uses])

(insn 37 35 38 (set (reg/i:DF 8 st(0))
        (reg:DF 43)) -1 (nil)
    (nil))

(jump_insn 38 37 39 (set (pc)
        (label_ref 43)) -1 (nil)
    (nil))

(barrier 39 38 40)

(note 40 39 42 NOTE_INSN_FUNCTION_END 0)

(insn 42 40 43 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 43 42 44 32 "" "" [0 uses])

(insn 44 43 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function __sgnf

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SF 42)
        (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 11 NOTE_INSN_FUNCTION_BEG 0)

(insn 11 5 13 (set (reg:DF 44)
        (float_extend:DF (reg/v:SF 42))) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg:DF 45)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC3")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:DF (mem/u/f:DF (symbol_ref/u:SI ("*.LC3")) 0) 0 [0x0] 0 [0x0] 0 [0x0])
        (nil)))

(jump_insn 14 13 15 (parallel[ 
            (set (pc)
                (if_then_else (ne:CCFPU (reg:DF 44)
                        (reg:DF 45))
                    (label_ref 17)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn 15 14 16 (set (pc)
        (label_ref 36)) -1 (nil)
    (nil))

(barrier 16 15 17)

(code_label 17 16 19 42 "" "" [0 uses])

(insn 19 17 21 (set (reg:DF 46)
        (float_extend:DF (reg/v:SF 42))) -1 (nil)
    (nil))

(insn 21 19 22 (set (reg:DF 47)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC3")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:DF (mem/u/f:DF (symbol_ref/u:SI ("*.LC3")) 0) 0 [0x0] 0 [0x0] 0 [0x0])
        (nil)))

(jump_insn 22 21 23 (parallel[ 
            (set (pc)
                (if_then_else (gt:CCFPU (reg:DF 46)
                        (reg:DF 47))
                    (label_ref 25)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn 23 22 24 (set (pc)
        (label_ref 30)) -1 (nil)
    (nil))

(barrier 24 23 25)

(code_label 25 24 27 45 "" "" [0 uses])

(insn 27 25 28 (set (reg:SF 43)
        (mem/u/f:SF (symbol_ref/u:SI ("*.LC4")) 0)) -1 (nil)
    (nil))

(jump_insn 28 27 29 (set (pc)
        (label_ref 33)) -1 (nil)
    (nil))

(barrier 29 28 30)

(code_label 30 29 32 43 "" "" [0 uses])

(insn 32 30 33 (set (reg:SF 43)
        (mem/u/f:SF (symbol_ref/u:SI ("*.LC5")) 0)) -1 (nil)
    (nil))

(code_label 33 32 34 44 "" "" [0 uses])

(jump_insn 34 33 35 (set (pc)
        (label_ref 39)) -1 (nil)
    (nil))

(barrier 35 34 36)

(code_label 36 35 38 40 "" "" [0 uses])

(insn 38 36 39 (set (reg:SF 43)
        (mem/u/f:SF (symbol_ref/u:SI ("*.LC6")) 0)) -1 (nil)
    (nil))

(code_label 39 38 41 41 "" "" [0 uses])

(insn 41 39 42 (set (reg/i:SF 8 st(0))
        (reg:SF 43)) -1 (nil)
    (nil))

(jump_insn 42 41 43 (set (pc)
        (label_ref 47)) -1 (nil)
    (nil))

(barrier 43 42 44)

(note 44 43 46 NOTE_INSN_FUNCTION_END 0)

(insn 46 44 47 (clobber (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

(code_label 47 46 48 39 "" "" [0 uses])

(insn 48 47 0 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Function __sgnl

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 11 NOTE_INSN_FUNCTION_BEG 0)

(insn 11 5 12 (set (reg:XF 44)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC7")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:XF (mem/u/f:XF (symbol_ref/u:SI ("*.LC7")) 0) 0 [0x0] 0 [0x0] 0 [0x0])
        (nil)))

(jump_insn 12 11 13 (parallel[ 
            (set (pc)
                (if_then_else (ne:CCFPU (reg/v:XF 42)
                        (reg:XF 44))
                    (label_ref 15)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn 13 12 14 (set (pc)
        (label_ref 32)) -1 (nil)
    (nil))

(barrier 14 13 15)

(code_label 15 14 17 49 "" "" [0 uses])

(insn 17 15 18 (set (reg:XF 45)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC7")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:XF (mem/u/f:XF (symbol_ref/u:SI ("*.LC7")) 0) 0 [0x0] 0 [0x0] 0 [0x0])
        (nil)))

(jump_insn 18 17 19 (parallel[ 
            (set (pc)
                (if_then_else (gt:CCFPU (reg/v:XF 42)
                        (reg:XF 45))
                    (label_ref 21)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn 19 18 20 (set (pc)
        (label_ref 26)) -1 (nil)
    (nil))

(barrier 20 19 21)

(code_label 21 20 23 52 "" "" [0 uses])

(insn 23 21 24 (set (reg:XF 43)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC8")) 0)) -1 (nil)
    (nil))

(jump_insn 24 23 25 (set (pc)
        (label_ref 29)) -1 (nil)
    (nil))

(barrier 25 24 26)

(code_label 26 25 28 50 "" "" [0 uses])

(insn 28 26 29 (set (reg:XF 43)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC9")) 0)) -1 (nil)
    (nil))

(code_label 29 28 30 51 "" "" [0 uses])

(jump_insn 30 29 31 (set (pc)
        (label_ref 35)) -1 (nil)
    (nil))

(barrier 31 30 32)

(code_label 32 31 34 47 "" "" [0 uses])

(insn 34 32 35 (set (reg:XF 43)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC7")) 0)) -1 (nil)
    (nil))

(code_label 35 34 37 48 "" "" [0 uses])

(insn 37 35 38 (set (reg/i:XF 8 st(0))
        (reg:XF 43)) -1 (nil)
    (nil))

(jump_insn 38 37 39 (set (pc)
        (label_ref 43)) -1 (nil)
    (nil))

(barrier 39 38 40)

(note 40 39 42 NOTE_INSN_FUNCTION_END 0)

(insn 42 40 43 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 43 42 44 46 "" "" [0 uses])

(insn 44 43 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function atan2

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(insn 6 4 7 (set (reg/v:DF 43)
        (mem/f:DF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 12 0x40284960 NOTE_INSN_BLOCK_BEG 0)

(insn 12 10 14 (parallel[ 
            (set (reg/v:XF 44)
                (asm_operands/v ("fpatan") ("=t") 0[ 
                        (reg/v:DF 43)
                        (reg/v:DF 42)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                        (asm_input:DF ("u"))
                    ]  ("/usr/include/bits/mathinline.h") 426))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(insn 14 12 16 (parallel[ 
            (set (reg:DF 45)
                (float_truncate:DF (reg/v:XF 44)))
            (clobber (mem:DF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -8 [0xfffffff8])) 0))
        ] ) -1 (nil)
    (nil))

(insn 16 14 17 (set (reg/i:DF 8 st(0))
        (reg:DF 45)) -1 (nil)
    (nil))

(jump_insn 17 16 18 (set (pc)
        (label_ref 23)) -1 (nil)
    (nil))

(barrier 18 17 19)

(note 19 18 20 0x40284960 NOTE_INSN_BLOCK_END 0)

(note 20 19 22 NOTE_INSN_FUNCTION_END 0)

(insn 22 20 23 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 23 22 24 53 "" "" [0 uses])

(insn 24 23 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function atan2f

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SF 42)
        (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 7 (set (reg/v:SF 43)
        (mem/f:SF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 12 0x40286660 NOTE_INSN_BLOCK_BEG 0)

(insn 12 10 14 (parallel[ 
            (set (reg/v:XF 44)
                (asm_operands/v ("fpatan") ("=t") 0[ 
                        (reg/v:SF 43)
                        (reg/v:SF 42)
                    ] 
                    [ 
                        (asm_input:SF ("0"))
                        (asm_input:SF ("u"))
                    ]  ("/usr/include/bits/mathinline.h") 426))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(insn 14 12 16 (parallel[ 
            (set (reg:SF 45)
                (float_truncate:SF (reg/v:XF 44)))
            (clobber (mem:SF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -4 [0xfffffffc])) 0))
        ] ) -1 (nil)
    (nil))

(insn 16 14 17 (set (reg/i:SF 8 st(0))
        (reg:SF 45)) -1 (nil)
    (nil))

(jump_insn 17 16 18 (set (pc)
        (label_ref 23)) -1 (nil)
    (nil))

(barrier 18 17 19)

(note 19 18 20 0x40286660 NOTE_INSN_BLOCK_END 0)

(note 20 19 22 NOTE_INSN_FUNCTION_END 0)

(insn 22 20 23 (clobber (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

(code_label 23 22 24 54 "" "" [0 uses])

(insn 24 23 0 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Function atan2l

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 7 (set (reg/v:XF 43)
        (mem/f:XF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)
        (nil)))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 12 0x40288360 NOTE_INSN_BLOCK_BEG 0)

(insn 12 10 14 (parallel[ 
            (set (reg/v:XF 44)
                (asm_operands/v ("fpatan") ("=t") 0[ 
                        (reg/v:XF 43)
                        (reg/v:XF 42)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                        (asm_input:XF ("u"))
                    ]  ("/usr/include/bits/mathinline.h") 426))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(insn 14 12 15 (set (reg/i:XF 8 st(0))
        (reg/v:XF 44)) -1 (nil)
    (nil))

(jump_insn 15 14 16 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))

(barrier 16 15 17)

(note 17 16 18 0x40288360 NOTE_INSN_BLOCK_END 0)

(note 18 17 20 NOTE_INSN_FUNCTION_END 0)

(insn 20 18 21 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 21 20 22 55 "" "" [0 uses])

(insn 22 21 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function __atan2l

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 7 (set (reg/v:XF 43)
        (mem/f:XF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)
        (nil)))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 12 0x4028a060 NOTE_INSN_BLOCK_BEG 0)

(insn 12 10 14 (parallel[ 
            (set (reg/v:XF 44)
                (asm_operands/v ("fpatan") ("=t") 0[ 
                        (reg/v:XF 43)
                        (reg/v:XF 42)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                        (asm_input:XF ("u"))
                    ]  ("/usr/include/bits/mathinline.h") 427))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(insn 14 12 15 (set (reg/i:XF 8 st(0))
        (reg/v:XF 44)) -1 (nil)
    (nil))

(jump_insn 15 14 16 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))

(barrier 16 15 17)

(note 17 16 18 0x4028a060 NOTE_INSN_BLOCK_END 0)

(note 18 17 20 NOTE_INSN_FUNCTION_END 0)

(insn 20 18 21 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 21 20 22 56 "" "" [0 uses])

(insn 22 21 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function fmod

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(insn 6 4 7 (set (reg/v:DF 43)
        (mem/f:DF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 12 0x4028af60 NOTE_INSN_BLOCK_BEG 0)

(insn 12 10 14 (parallel[ 
            (set (reg/v:XF 44)
                (asm_operands/v ("1:	fprem
	fnstsw	%%ax
	sahf
	jp	1b") ("=t") 0[ 
                        (reg/v:DF 42)
                        (reg/v:DF 43)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                        (asm_input:DF ("u"))
                    ]  ("/usr/include/bits/mathinline.h") 430))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 0 al))
        ] ) -1 (nil)
    (nil))

(insn 14 12 16 (parallel[ 
            (set (reg:DF 45)
                (float_truncate:DF (reg/v:XF 44)))
            (clobber (mem:DF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -8 [0xfffffff8])) 0))
        ] ) -1 (nil)
    (nil))

(insn 16 14 17 (set (reg/i:DF 8 st(0))
        (reg:DF 45)) -1 (nil)
    (nil))

(jump_insn 17 16 18 (set (pc)
        (label_ref 23)) -1 (nil)
    (nil))

(barrier 18 17 19)

(note 19 18 20 0x4028af60 NOTE_INSN_BLOCK_END 0)

(note 20 19 22 NOTE_INSN_FUNCTION_END 0)

(insn 22 20 23 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 23 22 24 57 "" "" [0 uses])

(insn 24 23 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function fmodf

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SF 42)
        (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 7 (set (reg/v:SF 43)
        (mem/f:SF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 12 0x4028cde0 NOTE_INSN_BLOCK_BEG 0)

(insn 12 10 14 (parallel[ 
            (set (reg/v:XF 44)
                (asm_operands/v ("1:	fprem
	fnstsw	%%ax
	sahf
	jp	1b") ("=t") 0[ 
                        (reg/v:SF 42)
                        (reg/v:SF 43)
                    ] 
                    [ 
                        (asm_input:SF ("0"))
                        (asm_input:SF ("u"))
                    ]  ("/usr/include/bits/mathinline.h") 430))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 0 al))
        ] ) -1 (nil)
    (nil))

(insn 14 12 16 (parallel[ 
            (set (reg:SF 45)
                (float_truncate:SF (reg/v:XF 44)))
            (clobber (mem:SF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -4 [0xfffffffc])) 0))
        ] ) -1 (nil)
    (nil))

(insn 16 14 17 (set (reg/i:SF 8 st(0))
        (reg:SF 45)) -1 (nil)
    (nil))

(jump_insn 17 16 18 (set (pc)
        (label_ref 23)) -1 (nil)
    (nil))

(barrier 18 17 19)

(note 19 18 20 0x4028cde0 NOTE_INSN_BLOCK_END 0)

(note 20 19 22 NOTE_INSN_FUNCTION_END 0)

(insn 22 20 23 (clobber (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

(code_label 23 22 24 58 "" "" [0 uses])

(insn 24 23 0 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Function fmodl

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 7 (set (reg/v:XF 43)
        (mem/f:XF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)
        (nil)))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 12 0x4028dc60 NOTE_INSN_BLOCK_BEG 0)

(insn 12 10 14 (parallel[ 
            (set (reg/v:XF 44)
                (asm_operands/v ("1:	fprem
	fnstsw	%%ax
	sahf
	jp	1b") ("=t") 0[ 
                        (reg/v:XF 42)
                        (reg/v:XF 43)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                        (asm_input:XF ("u"))
                    ]  ("/usr/include/bits/mathinline.h") 430))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 0 al))
        ] ) -1 (nil)
    (nil))

(insn 14 12 15 (set (reg/i:XF 8 st(0))
        (reg/v:XF 44)) -1 (nil)
    (nil))

(jump_insn 15 14 16 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))

(barrier 16 15 17)

(note 17 16 18 0x4028dc60 NOTE_INSN_BLOCK_END 0)

(note 18 17 20 NOTE_INSN_FUNCTION_END 0)

(insn 20 18 21 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 21 20 22 59 "" "" [0 uses])

(insn 22 21 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function sqrt

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x4028f6e0 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (reg/v:DF 43)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:DF 42)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 441))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 12 10 13 (set (reg/i:DF 8 st(0))
        (reg/v:DF 43)) -1 (nil)
    (nil))

(jump_insn 13 12 14 (set (pc)
        (label_ref 19)) -1 (nil)
    (nil))

(barrier 14 13 15)

(note 15 14 16 0x4028f6e0 NOTE_INSN_BLOCK_END 0)

(note 16 15 18 NOTE_INSN_FUNCTION_END 0)

(insn 18 16 19 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 19 18 20 60 "" "" [0 uses])

(insn 20 19 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function sqrtf

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SF 42)
        (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x402910e0 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (reg/v:SF 43)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:SF 42)
                    ] 
                    [ 
                        (asm_input:SF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 441))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 12 10 13 (set (reg/i:SF 8 st(0))
        (reg/v:SF 43)) -1 (nil)
    (nil))

(jump_insn 13 12 14 (set (pc)
        (label_ref 19)) -1 (nil)
    (nil))

(barrier 14 13 15)

(note 15 14 16 0x402910e0 NOTE_INSN_BLOCK_END 0)

(note 16 15 18 NOTE_INSN_FUNCTION_END 0)

(insn 18 16 19 (clobber (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

(code_label 19 18 20 61 "" "" [0 uses])

(insn 20 19 0 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Function sqrtl

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x40291b40 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (reg/v:XF 43)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:XF 42)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 441))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 12 10 13 (set (reg/i:XF 8 st(0))
        (reg/v:XF 43)) -1 (nil)
    (nil))

(jump_insn 13 12 14 (set (pc)
        (label_ref 19)) -1 (nil)
    (nil))

(barrier 14 13 15)

(note 15 14 16 0x40291b40 NOTE_INSN_BLOCK_END 0)

(note 16 15 18 NOTE_INSN_FUNCTION_END 0)

(insn 18 16 19 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 19 18 20 62 "" "" [0 uses])

(insn 20 19 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function __sqrtl

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x402935a0 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (reg/v:XF 43)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:XF 42)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 442))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 12 10 13 (set (reg/i:XF 8 st(0))
        (reg/v:XF 43)) -1 (nil)
    (nil))

(jump_insn 13 12 14 (set (pc)
        (label_ref 19)) -1 (nil)
    (nil))

(barrier 14 13 15)

(note 15 14 16 0x402935a0 NOTE_INSN_BLOCK_END 0)

(note 16 15 18 NOTE_INSN_FUNCTION_END 0)

(insn 18 16 19 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 19 18 20 63 "" "" [0 uses])

(insn 20 19 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function fabs

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(note 5 4 11 NOTE_INSN_FUNCTION_BEG 0)

(insn 11 5 13 (parallel[ 
            (set (reg:DF 43)
                (abs:DF (reg/v:DF 42)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg/i:DF 8 st(0))
        (reg:DF 43)) -1 (nil)
    (nil))

(jump_insn 14 13 15 (set (pc)
        (label_ref 19)) -1 (nil)
    (nil))

(barrier 15 14 16)

(note 16 15 18 NOTE_INSN_FUNCTION_END 0)

(insn 18 16 19 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 19 18 20 64 "" "" [0 uses])

(insn 20 19 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function fabsf

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SF 42)
        (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 11 NOTE_INSN_FUNCTION_BEG 0)

(insn 11 5 13 (parallel[ 
            (set (reg:SF 43)
                (abs:SF (reg/v:SF 42)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg/i:SF 8 st(0))
        (reg:SF 43)) -1 (nil)
    (nil))

(jump_insn 14 13 15 (set (pc)
        (label_ref 19)) -1 (nil)
    (nil))

(barrier 15 14 16)

(note 16 15 18 NOTE_INSN_FUNCTION_END 0)

(insn 18 16 19 (clobber (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

(code_label 19 18 20 65 "" "" [0 uses])

(insn 20 19 0 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Function fabsl

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 11 NOTE_INSN_FUNCTION_BEG 0)

(insn 11 5 13 (parallel[ 
            (set (reg:XF 43)
                (abs:XF (reg/v:XF 42)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg/i:XF 8 st(0))
        (reg:XF 43)) -1 (nil)
    (nil))

(jump_insn 14 13 15 (set (pc)
        (label_ref 19)) -1 (nil)
    (nil))

(barrier 15 14 16)

(note 16 15 18 NOTE_INSN_FUNCTION_END 0)

(insn 18 16 19 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 19 18 20 66 "" "" [0 uses])

(insn 20 19 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function __fabsl

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 11 NOTE_INSN_FUNCTION_BEG 0)

(insn 11 5 13 (parallel[ 
            (set (reg:XF 43)
                (abs:XF (reg/v:XF 42)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg/i:XF 8 st(0))
        (reg:XF 43)) -1 (nil)
    (nil))

(jump_insn 14 13 15 (set (pc)
        (label_ref 19)) -1 (nil)
    (nil))

(barrier 15 14 16)

(note 16 15 18 NOTE_INSN_FUNCTION_END 0)

(insn 18 16 19 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 19 18 20 67 "" "" [0 uses])

(insn 20 19 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function atan

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x40298e80 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (reg/v:DF 43)
                (asm_operands/v ("fld1; fpatan") ("=t") 0[ 
                        (reg/v:DF 42)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 467))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(insn 12 10 13 (set (reg/i:DF 8 st(0))
        (reg/v:DF 43)) -1 (nil)
    (nil))

(jump_insn 13 12 14 (set (pc)
        (label_ref 19)) -1 (nil)
    (nil))

(barrier 14 13 15)

(note 15 14 16 0x40298e80 NOTE_INSN_BLOCK_END 0)

(note 16 15 18 NOTE_INSN_FUNCTION_END 0)

(insn 18 16 19 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 19 18 20 68 "" "" [0 uses])

(insn 20 19 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function atanf

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SF 42)
        (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x40299980 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (reg/v:SF 43)
                (asm_operands/v ("fld1; fpatan") ("=t") 0[ 
                        (reg/v:SF 42)
                    ] 
                    [ 
                        (asm_input:SF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 467))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(insn 12 10 13 (set (reg/i:SF 8 st(0))
        (reg/v:SF 43)) -1 (nil)
    (nil))

(jump_insn 13 12 14 (set (pc)
        (label_ref 19)) -1 (nil)
    (nil))

(barrier 14 13 15)

(note 15 14 16 0x40299980 NOTE_INSN_BLOCK_END 0)

(note 16 15 18 NOTE_INSN_FUNCTION_END 0)

(insn 18 16 19 (clobber (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

(code_label 19 18 20 69 "" "" [0 uses])

(insn 20 19 0 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Function atanl

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x4029b4e0 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (reg/v:XF 43)
                (asm_operands/v ("fld1; fpatan") ("=t") 0[ 
                        (reg/v:XF 42)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 467))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(insn 12 10 13 (set (reg/i:XF 8 st(0))
        (reg/v:XF 43)) -1 (nil)
    (nil))

(jump_insn 13 12 14 (set (pc)
        (label_ref 19)) -1 (nil)
    (nil))

(barrier 14 13 15)

(note 15 14 16 0x4029b4e0 NOTE_INSN_BLOCK_END 0)

(note 16 15 18 NOTE_INSN_FUNCTION_END 0)

(insn 18 16 19 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 19 18 20 70 "" "" [0 uses])

(insn 20 19 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function __sgn1l

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x4029dac0 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (clobber (mem/s:BLK (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)) -1 (nil)
    (nil))

(insn 12 10 14 (set (mem/s:XF (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)
        (reg/v:XF 42)) -1 (nil)
    (nil))

(insn 14 12 15 (set (reg:SI 44)
        (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) 0)) -1 (nil)
    (nil))

(insn 15 14 17 (parallel[ 
            (set (reg:SI 43)
                (and:SI (reg:SI 44)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (expr_list:REG_EQUAL (and:SI (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                    (const_int -8 [0xfffffff8])) 0)
            (const_int 32768 [0x8000]))
        (nil)))

(insn 17 15 19 (parallel[ 
            (set (reg:SI 45)
                (ior:SI (reg:SI 43)
                    (const_int 16383 [0x3fff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 19 17 21 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) 0)
        (reg:SI 45)) -1 (nil)
    (nil))

(insn 21 19 23 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -12 [0xfffffff4])) 0)
        (const_int -2147483648 [0x80000000])) -1 (nil)
    (nil))

(insn 23 21 25 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 25 23 27 (set (reg:XF 47)
        (mem/s:XF (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)) -1 (nil)
    (nil))

(insn 27 25 28 (set (reg/i:XF 8 st(0))
        (reg:XF 47)) -1 (nil)
    (nil))

(jump_insn 28 27 29 (set (pc)
        (label_ref 34)) -1 (nil)
    (nil))

(barrier 29 28 30)

(note 30 29 31 0x4029dac0 NOTE_INSN_BLOCK_END 0)

(note 31 30 33 NOTE_INSN_FUNCTION_END 0)

(insn 33 31 34 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 34 33 35 71 "" "" [0 uses])

(insn 35 34 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function floor

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x402a2160 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -2 [0xfffffffe])) 0)
                (asm_operands/v ("fnstcw %0") ("=m") 0[ ] 
                    [ ]  ("/usr/include/bits/mathinline.h") 493))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 12 10 14 (set (reg:HI 45)
        (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -2 [0xfffffffe])) 0)) -1 (nil)
    (nil))

(insn 14 12 16 (parallel[ 
            (set (reg:HI 44)
                (and:HI (reg:HI 45)
                    (const_int 62463 [0xf3ff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 16 14 18 (parallel[ 
            (set (reg:HI 46)
                (ior:HI (reg:HI 44)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 18 16 19 (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) 0)
        (reg:HI 46)) -1 (nil)
    (nil))

(insn 19 18 20 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -4 [0xfffffffc])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 493)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 20 19 21 (parallel[ 
            (set (reg/v:XF 43)
                (asm_operands/v ("frndint") ("=t") 0[ 
                        (reg/v:DF 42)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 493))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 21 20 23 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -2 [0xfffffffe])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 493)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 23 21 25 (parallel[ 
            (set (reg:DF 47)
                (float_truncate:DF (reg/v:XF 43)))
            (clobber (mem:DF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -16 [0xfffffff0])) 0))
        ] ) -1 (nil)
    (nil))

(insn 25 23 26 (set (reg/i:DF 8 st(0))
        (reg:DF 47)) -1 (nil)
    (nil))

(jump_insn 26 25 27 (set (pc)
        (label_ref 32)) -1 (nil)
    (nil))

(barrier 27 26 28)

(note 28 27 29 0x402a2160 NOTE_INSN_BLOCK_END 0)

(note 29 28 31 NOTE_INSN_FUNCTION_END 0)

(insn 31 29 32 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 32 31 33 72 "" "" [0 uses])

(insn 33 32 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function floorf

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SF 42)
        (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x402a4780 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -2 [0xfffffffe])) 0)
                (asm_operands/v ("fnstcw %0") ("=m") 0[ ] 
                    [ ]  ("/usr/include/bits/mathinline.h") 493))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 12 10 14 (set (reg:HI 45)
        (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -2 [0xfffffffe])) 0)) -1 (nil)
    (nil))

(insn 14 12 16 (parallel[ 
            (set (reg:HI 44)
                (and:HI (reg:HI 45)
                    (const_int 62463 [0xf3ff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 16 14 18 (parallel[ 
            (set (reg:HI 46)
                (ior:HI (reg:HI 44)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 18 16 19 (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) 0)
        (reg:HI 46)) -1 (nil)
    (nil))

(insn 19 18 20 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -4 [0xfffffffc])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 493)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 20 19 21 (parallel[ 
            (set (reg/v:XF 43)
                (asm_operands/v ("frndint") ("=t") 0[ 
                        (reg/v:SF 42)
                    ] 
                    [ 
                        (asm_input:SF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 493))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 21 20 23 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -2 [0xfffffffe])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 493)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 23 21 25 (parallel[ 
            (set (reg:SF 47)
                (float_truncate:SF (reg/v:XF 43)))
            (clobber (mem:SF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -8 [0xfffffff8])) 0))
        ] ) -1 (nil)
    (nil))

(insn 25 23 26 (set (reg/i:SF 8 st(0))
        (reg:SF 47)) -1 (nil)
    (nil))

(jump_insn 26 25 27 (set (pc)
        (label_ref 32)) -1 (nil)
    (nil))

(barrier 27 26 28)

(note 28 27 29 0x402a4780 NOTE_INSN_BLOCK_END 0)

(note 29 28 31 NOTE_INSN_FUNCTION_END 0)

(insn 31 29 32 (clobber (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

(code_label 32 31 33 73 "" "" [0 uses])

(insn 33 32 0 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Function floorl

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x402a5d80 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -2 [0xfffffffe])) 0)
                (asm_operands/v ("fnstcw %0") ("=m") 0[ ] 
                    [ ]  ("/usr/include/bits/mathinline.h") 493))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 12 10 14 (set (reg:HI 45)
        (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -2 [0xfffffffe])) 0)) -1 (nil)
    (nil))

(insn 14 12 16 (parallel[ 
            (set (reg:HI 44)
                (and:HI (reg:HI 45)
                    (const_int 62463 [0xf3ff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 16 14 18 (parallel[ 
            (set (reg:HI 46)
                (ior:HI (reg:HI 44)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 18 16 19 (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) 0)
        (reg:HI 46)) -1 (nil)
    (nil))

(insn 19 18 20 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -4 [0xfffffffc])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 493)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 20 19 21 (parallel[ 
            (set (reg/v:XF 43)
                (asm_operands/v ("frndint") ("=t") 0[ 
                        (reg/v:XF 42)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 493))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 21 20 23 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -2 [0xfffffffe])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 493)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 23 21 24 (set (reg/i:XF 8 st(0))
        (reg/v:XF 43)) -1 (nil)
    (nil))

(jump_insn 24 23 25 (set (pc)
        (label_ref 30)) -1 (nil)
    (nil))

(barrier 25 24 26)

(note 26 25 27 0x402a5d80 NOTE_INSN_BLOCK_END 0)

(note 27 26 29 NOTE_INSN_FUNCTION_END 0)

(insn 29 27 30 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 30 29 31 74 "" "" [0 uses])

(insn 31 30 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function ceil

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x402a9420 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -2 [0xfffffffe])) 0)
                (asm_operands/v ("fnstcw %0") ("=m") 0[ ] 
                    [ ]  ("/usr/include/bits/mathinline.h") 504))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 12 10 14 (set (reg:HI 45)
        (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -2 [0xfffffffe])) 0)) -1 (nil)
    (nil))

(insn 14 12 16 (parallel[ 
            (set (reg:HI 44)
                (and:HI (reg:HI 45)
                    (const_int 62463 [0xf3ff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 16 14 18 (parallel[ 
            (set (reg:HI 46)
                (ior:HI (reg:HI 44)
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 18 16 19 (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) 0)
        (reg:HI 46)) -1 (nil)
    (nil))

(insn 19 18 20 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -4 [0xfffffffc])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 504)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 20 19 21 (parallel[ 
            (set (reg/v:XF 43)
                (asm_operands/v ("frndint") ("=t") 0[ 
                        (reg/v:DF 42)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 504))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 21 20 23 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -2 [0xfffffffe])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 504)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 23 21 25 (parallel[ 
            (set (reg:DF 47)
                (float_truncate:DF (reg/v:XF 43)))
            (clobber (mem:DF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -16 [0xfffffff0])) 0))
        ] ) -1 (nil)
    (nil))

(insn 25 23 26 (set (reg/i:DF 8 st(0))
        (reg:DF 47)) -1 (nil)
    (nil))

(jump_insn 26 25 27 (set (pc)
        (label_ref 32)) -1 (nil)
    (nil))

(barrier 27 26 28)

(note 28 27 29 0x402a9420 NOTE_INSN_BLOCK_END 0)

(note 29 28 31 NOTE_INSN_FUNCTION_END 0)

(insn 31 29 32 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 32 31 33 75 "" "" [0 uses])

(insn 33 32 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function ceilf

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SF 42)
        (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x402aba40 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -2 [0xfffffffe])) 0)
                (asm_operands/v ("fnstcw %0") ("=m") 0[ ] 
                    [ ]  ("/usr/include/bits/mathinline.h") 504))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 12 10 14 (set (reg:HI 45)
        (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -2 [0xfffffffe])) 0)) -1 (nil)
    (nil))

(insn 14 12 16 (parallel[ 
            (set (reg:HI 44)
                (and:HI (reg:HI 45)
                    (const_int 62463 [0xf3ff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 16 14 18 (parallel[ 
            (set (reg:HI 46)
                (ior:HI (reg:HI 44)
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 18 16 19 (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) 0)
        (reg:HI 46)) -1 (nil)
    (nil))

(insn 19 18 20 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -4 [0xfffffffc])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 504)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 20 19 21 (parallel[ 
            (set (reg/v:XF 43)
                (asm_operands/v ("frndint") ("=t") 0[ 
                        (reg/v:SF 42)
                    ] 
                    [ 
                        (asm_input:SF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 504))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 21 20 23 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -2 [0xfffffffe])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 504)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 23 21 25 (parallel[ 
            (set (reg:SF 47)
                (float_truncate:SF (reg/v:XF 43)))
            (clobber (mem:SF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -8 [0xfffffff8])) 0))
        ] ) -1 (nil)
    (nil))

(insn 25 23 26 (set (reg/i:SF 8 st(0))
        (reg:SF 47)) -1 (nil)
    (nil))

(jump_insn 26 25 27 (set (pc)
        (label_ref 32)) -1 (nil)
    (nil))

(barrier 27 26 28)

(note 28 27 29 0x402aba40 NOTE_INSN_BLOCK_END 0)

(note 29 28 31 NOTE_INSN_FUNCTION_END 0)

(insn 31 29 32 (clobber (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

(code_label 32 31 33 76 "" "" [0 uses])

(insn 33 32 0 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Function ceill

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x402af040 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -2 [0xfffffffe])) 0)
                (asm_operands/v ("fnstcw %0") ("=m") 0[ ] 
                    [ ]  ("/usr/include/bits/mathinline.h") 504))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 12 10 14 (set (reg:HI 45)
        (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -2 [0xfffffffe])) 0)) -1 (nil)
    (nil))

(insn 14 12 16 (parallel[ 
            (set (reg:HI 44)
                (and:HI (reg:HI 45)
                    (const_int 62463 [0xf3ff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 16 14 18 (parallel[ 
            (set (reg:HI 46)
                (ior:HI (reg:HI 44)
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 18 16 19 (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) 0)
        (reg:HI 46)) -1 (nil)
    (nil))

(insn 19 18 20 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -4 [0xfffffffc])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 504)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 20 19 21 (parallel[ 
            (set (reg/v:XF 43)
                (asm_operands/v ("frndint") ("=t") 0[ 
                        (reg/v:XF 42)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 504))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 21 20 23 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -2 [0xfffffffe])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 504)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 23 21 24 (set (reg/i:XF 8 st(0))
        (reg/v:XF 43)) -1 (nil)
    (nil))

(jump_insn 24 23 25 (set (pc)
        (label_ref 30)) -1 (nil)
    (nil))

(barrier 25 24 26)

(note 26 25 27 0x402af040 NOTE_INSN_BLOCK_END 0)

(note 27 26 29 NOTE_INSN_FUNCTION_END 0)

(insn 29 27 30 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 30 29 31 77 "" "" [0 uses])

(insn 31 30 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function ldexp

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(insn 6 4 7 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)
        (nil)))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 12 0x402afd60 NOTE_INSN_BLOCK_BEG 0)

(insn 12 10 13 (set (reg:XF 45)
        (float:XF (reg/v:SI 43))) -1 (nil)
    (nil))

(insn 13 12 15 (parallel[ 
            (set (reg/v:XF 44)
                (asm_operands/v ("fscale") ("=t") 0[ 
                        (reg/v:DF 42)
                        (reg:XF 45)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                        (asm_input:XF ("u"))
                    ]  ("/usr/include/bits/mathinline.h") 525))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 15 13 17 (parallel[ 
            (set (reg:DF 46)
                (float_truncate:DF (reg/v:XF 44)))
            (clobber (mem:DF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -8 [0xfffffff8])) 0))
        ] ) -1 (nil)
    (nil))

(insn 17 15 18 (set (reg/i:DF 8 st(0))
        (reg:DF 46)) -1 (nil)
    (nil))

(jump_insn 18 17 19 (set (pc)
        (label_ref 25)) -1 (nil)
    (nil))

(barrier 19 18 21)

(note 21 19 22 0x402afd60 NOTE_INSN_BLOCK_END 0)

(note 22 21 24 NOTE_INSN_FUNCTION_END 0)

(insn 24 22 25 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 25 24 26 78 "" "" [0 uses])

(insn 26 25 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function log1p

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 11 0x402b21a0 NOTE_INSN_BLOCK_BEG 0)

(insn 11 8 13 (set (reg:XF 44)
        (float_extend:XF (reg/v:DF 42))) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg/v:XF 45)
        (reg:XF 44)) -1 (nil)
    (nil))

(note 14 13 16 0x402b0740 NOTE_INSN_BLOCK_BEG 0)

(insn/i 16 14 17 (parallel[ 
            (set (reg:XF 47)
                (abs:XF (reg/v:XF 45)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 17 16 18 (set (reg:XF 46)
        (reg:XF 47)) -1 (nil)
    (nil))

(jump_insn/i 18 17 19 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))

(barrier/i 19 18 20)

(insn/i 20 19 21 (clobber (reg:XF 46)) -1 (nil)
    (nil))

(code_label/i 21 20 22 81 "" "" [0 uses])

(note 22 21 24 0x402b0740 NOTE_INSN_BLOCK_END 0)

(insn 24 22 25 (set (reg:XF 48)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC10")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:XF (mem/u/f:XF (symbol_ref/u:SI ("*.LC10")) 0) 922222592 [0x36f80000] 429395011 [0x19980c43] 1073583606 [0x3ffd95f6])
        (nil)))

(jump_insn 25 24 26 (parallel[ 
            (set (pc)
                (if_then_else (ge:CCFPU (reg:XF 46)
                        (reg:XF 48))
                    (label_ref 28)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn 26 25 27 (set (pc)
        (label_ref 45)) -1 (nil)
    (nil))

(barrier 27 26 28)

(code_label 28 27 30 82 "" "" [0 uses])

(insn 30 28 32 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 32 30 33 (set (reg:DF 50)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC11")) 0)) -1 (nil)
    (nil))

(insn 33 32 35 (set (reg:DF 49)
        (plus:DF (reg/v:DF 42)
            (reg:DF 50))) -1 (nil)
    (nil))

(insn 35 33 37 (set (reg:XF 51)
        (float_extend:XF (reg:DF 49))) -1 (nil)
    (nil))

(insn 37 35 38 (set (mem/f:XF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:XF 51)) -1 (nil)
    (nil))

(call_insn 38 37 40 (set (reg:XF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("logl")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 40 38 42 (set (reg/v:XF 43)
        (reg:XF 8 st(0))) -1 (nil)
    (nil))

(insn 42 40 43 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 43 42 44 (set (pc)
        (label_ref 47)) -1 (nil)
    (nil))

(barrier 44 43 45)

(code_label 45 44 46 80 "" "" [0 uses])

(insn 46 45 47 (parallel[ 
            (set (reg/v:XF 43)
                (asm_operands/v ("fldln2
	fxch
	fyl2xp1") ("=t") 0[ 
                        (reg/v:DF 42)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 540))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(code_label 47 46 49 83 "" "" [0 uses])

(insn 49 47 51 (parallel[ 
            (set (reg:DF 52)
                (float_truncate:DF (reg/v:XF 43)))
            (clobber (mem:DF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -8 [0xfffffff8])) 0))
        ] ) -1 (nil)
    (nil))

(insn 51 49 52 (set (reg/i:DF 8 st(0))
        (reg:DF 52)) -1 (nil)
    (nil))

(jump_insn 52 51 53 (set (pc)
        (label_ref 58)) -1 (nil)
    (nil))

(barrier 53 52 54)

(note 54 53 55 0x402b21a0 NOTE_INSN_BLOCK_END 0)

(note 55 54 57 NOTE_INSN_FUNCTION_END 0)

(insn 57 55 58 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 58 57 59 79 "" "" [0 uses])

(insn 59 58 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function log1pf

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SF 42)
        (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 11 0x402b3560 NOTE_INSN_BLOCK_BEG 0)

(insn 11 8 13 (set (reg:XF 44)
        (float_extend:XF (reg/v:SF 42))) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg/v:XF 45)
        (reg:XF 44)) -1 (nil)
    (nil))

(note 14 13 16 0x402b2b00 NOTE_INSN_BLOCK_BEG 0)

(insn/i 16 14 17 (parallel[ 
            (set (reg:XF 47)
                (abs:XF (reg/v:XF 45)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 17 16 18 (set (reg:XF 46)
        (reg:XF 47)) -1 (nil)
    (nil))

(jump_insn/i 18 17 19 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))

(barrier/i 19 18 20)

(insn/i 20 19 21 (clobber (reg:XF 46)) -1 (nil)
    (nil))

(code_label/i 21 20 22 86 "" "" [0 uses])

(note 22 21 24 0x402b2b00 NOTE_INSN_BLOCK_END 0)

(insn 24 22 25 (set (reg:XF 48)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC12")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:XF (mem/u/f:XF (symbol_ref/u:SI ("*.LC12")) 0) 922222592 [0x36f80000] 429395011 [0x19980c43] 1073583606 [0x3ffd95f6])
        (nil)))

(jump_insn 25 24 26 (parallel[ 
            (set (pc)
                (if_then_else (ge:CCFPU (reg:XF 46)
                        (reg:XF 48))
                    (label_ref 28)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn 26 25 27 (set (pc)
        (label_ref 47)) -1 (nil)
    (nil))

(barrier 27 26 28)

(code_label 28 27 30 87 "" "" [0 uses])

(insn 30 28 32 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 32 30 34 (set (reg:DF 49)
        (float_extend:DF (reg/v:SF 42))) -1 (nil)
    (nil))

(insn 34 32 35 (set (reg:DF 51)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC13")) 0)) -1 (nil)
    (nil))

(insn 35 34 37 (set (reg:DF 50)
        (plus:DF (reg:DF 49)
            (reg:DF 51))) -1 (nil)
    (nil))

(insn 37 35 39 (set (reg:XF 52)
        (float_extend:XF (reg:DF 50))) -1 (nil)
    (nil))

(insn 39 37 40 (set (mem/f:XF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:XF 52)) -1 (nil)
    (nil))

(call_insn 40 39 42 (set (reg:XF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("logl")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 42 40 44 (set (reg/v:XF 43)
        (reg:XF 8 st(0))) -1 (nil)
    (nil))

(insn 44 42 45 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 45 44 46 (set (pc)
        (label_ref 49)) -1 (nil)
    (nil))

(barrier 46 45 47)

(code_label 47 46 48 85 "" "" [0 uses])

(insn 48 47 49 (parallel[ 
            (set (reg/v:XF 43)
                (asm_operands/v ("fldln2
	fxch
	fyl2xp1") ("=t") 0[ 
                        (reg/v:SF 42)
                    ] 
                    [ 
                        (asm_input:SF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 540))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(code_label 49 48 51 88 "" "" [0 uses])

(insn 51 49 53 (parallel[ 
            (set (reg:SF 53)
                (float_truncate:SF (reg/v:XF 43)))
            (clobber (mem:SF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -4 [0xfffffffc])) 0))
        ] ) -1 (nil)
    (nil))

(insn 53 51 54 (set (reg/i:SF 8 st(0))
        (reg:SF 53)) -1 (nil)
    (nil))

(jump_insn 54 53 55 (set (pc)
        (label_ref 60)) -1 (nil)
    (nil))

(barrier 55 54 56)

(note 56 55 57 0x402b3560 NOTE_INSN_BLOCK_END 0)

(note 57 56 59 NOTE_INSN_FUNCTION_END 0)

(insn 59 57 60 (clobber (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

(code_label 60 59 61 84 "" "" [0 uses])

(insn 61 60 0 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Function log1pl

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x402b67e0 NOTE_INSN_BLOCK_BEG 0)

(note 10 8 12 0x402b3e60 NOTE_INSN_BLOCK_BEG 0)

(insn/i 12 10 13 (parallel[ 
            (set (reg:XF 45)
                (abs:XF (reg/v:XF 42)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 13 12 14 (set (reg:XF 44)
        (reg:XF 45)) -1 (nil)
    (nil))

(jump_insn/i 14 13 15 (set (pc)
        (label_ref 17)) -1 (nil)
    (nil))

(barrier/i 15 14 16)

(insn/i 16 15 17 (clobber (reg:XF 44)) -1 (nil)
    (nil))

(code_label/i 17 16 18 91 "" "" [0 uses])

(note 18 17 20 0x402b3e60 NOTE_INSN_BLOCK_END 0)

(insn 20 18 21 (set (reg:XF 46)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC14")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:XF (mem/u/f:XF (symbol_ref/u:SI ("*.LC14")) 0) 922222592 [0x36f80000] 429395011 [0x19980c43] 1073583606 [0x3ffd95f6])
        (nil)))

(jump_insn 21 20 22 (parallel[ 
            (set (pc)
                (if_then_else (ge:CCFPU (reg:XF 44)
                        (reg:XF 46))
                    (label_ref 24)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn 22 21 23 (set (pc)
        (label_ref 39)) -1 (nil)
    (nil))

(barrier 23 22 24)

(code_label 24 23 26 92 "" "" [0 uses])

(insn 26 24 28 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 28 26 29 (set (reg:XF 48)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC15")) 0)) -1 (nil)
    (nil))

(insn 29 28 31 (set (reg:XF 47)
        (plus:XF (reg/v:XF 42)
            (reg:XF 48))) -1 (nil)
    (nil))

(insn 31 29 32 (set (mem/f:XF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:XF 47)) -1 (nil)
    (nil))

(call_insn 32 31 34 (set (reg:XF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("logl")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 34 32 36 (set (reg/v:XF 43)
        (reg:XF 8 st(0))) -1 (nil)
    (nil))

(insn 36 34 37 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 37 36 38 (set (pc)
        (label_ref 41)) -1 (nil)
    (nil))

(barrier 38 37 39)

(code_label 39 38 40 90 "" "" [0 uses])

(insn 40 39 41 (parallel[ 
            (set (reg/v:XF 43)
                (asm_operands/v ("fldln2
	fxch
	fyl2xp1") ("=t") 0[ 
                        (reg/v:XF 42)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 540))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(code_label 41 40 43 93 "" "" [0 uses])

(insn 43 41 44 (set (reg/i:XF 8 st(0))
        (reg/v:XF 43)) -1 (nil)
    (nil))

(jump_insn 44 43 45 (set (pc)
        (label_ref 50)) -1 (nil)
    (nil))

(barrier 45 44 46)

(note 46 45 47 0x402b67e0 NOTE_INSN_BLOCK_END 0)

(note 47 46 49 NOTE_INSN_FUNCTION_END 0)

(insn 49 47 50 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 50 49 51 89 "" "" [0 uses])

(insn 51 50 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function asinh

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 11 0x402b8f20 NOTE_INSN_BLOCK_BEG 0)

(insn 11 8 13 (set (reg:XF 44)
        (float_extend:XF (reg/v:DF 42))) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg/v:XF 45)
        (reg:XF 44)) -1 (nil)
    (nil))

(note 14 13 16 0x402b6fe0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 16 14 17 (parallel[ 
            (set (reg:XF 46)
                (abs:XF (reg/v:XF 45)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 17 16 18 (set (reg/v:XF 43)
        (reg:XF 46)) -1 (nil)
    (nil))

(jump_insn/i 18 17 19 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))

(barrier/i 19 18 20)

(insn/i 20 19 21 (clobber (reg/v:XF 43)) -1 (nil)
    (nil))

(code_label/i 21 20 22 95 "" "" [0 uses])

(note 22 21 23 0x402b6fe0 NOTE_INSN_BLOCK_END 0)

(insn 23 22 25 (set (reg:XF 48)
        (mult:XF (reg/v:XF 43)
            (reg/v:XF 43))) -1 (nil)
    (nil))

(insn 25 23 26 (set (reg:XF 50)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC16")) 0)) -1 (nil)
    (nil))

(insn 26 25 28 (set (reg:XF 49)
        (plus:XF (reg:XF 48)
            (reg:XF 50))) -1 (nil)
    (nil))

(insn 28 26 29 (set (reg/v:XF 51)
        (reg:XF 49)) -1 (nil)
    (nil))

(note 29 28 31 0x402b85a0 NOTE_INSN_BLOCK_BEG 0)

(note/i 31 29 32 0x402b85c0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 32 31 33 (parallel[ 
            (set (reg/v:XF 53)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:XF 51)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 442))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 33 32 34 (set (reg:XF 52)
        (reg/v:XF 53)) -1 (nil)
    (nil))

(jump_insn/i 34 33 35 (set (pc)
        (label_ref 38)) -1 (nil)
    (nil))

(barrier/i 35 34 36)

(note/i 36 35 37 0x402b85c0 NOTE_INSN_BLOCK_END 0)

(insn/i 37 36 38 (clobber (reg:XF 52)) -1 (nil)
    (nil))

(code_label/i 38 37 39 96 "" "" [0 uses])

(note 39 38 40 0x402b85a0 NOTE_INSN_BLOCK_END 0)

(insn 40 39 42 (set (reg:XF 54)
        (mult:XF (reg/v:XF 43)
            (reg/v:XF 43))) -1 (nil)
    (nil))

(insn 42 40 43 (set (reg:XF 56)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC16")) 0)) -1 (nil)
    (nil))

(insn 43 42 44 (set (reg:XF 55)
        (plus:XF (reg:XF 52)
            (reg:XF 56))) -1 (nil)
    (nil))

(insn 44 43 45 (set (reg:XF 57)
        (div:XF (reg:XF 54)
            (reg:XF 55))) -1 (nil)
    (nil))

(insn 45 44 47 (set (reg:XF 58)
        (plus:XF (reg:XF 57)
            (reg/v:XF 43))) -1 (nil)
    (nil))

(insn 47 45 48 (set (reg/v:XF 59)
        (reg:XF 58)) -1 (nil)
    (nil))

(note 48 47 50 0x402b8820 NOTE_INSN_BLOCK_BEG 0)

(note/i 50 48 51 0x402b8840 NOTE_INSN_BLOCK_BEG 0)

(note/i 51 50 52 0x402b8860 NOTE_INSN_BLOCK_BEG 0)

(insn/i 52 51 53 (parallel[ 
            (set (reg:XF 62)
                (abs:XF (reg/v:XF 59)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 53 52 54 (set (reg:XF 63)
        (reg:XF 62)) -1 (nil)
    (nil))

(jump_insn/i 54 53 55 (set (pc)
        (label_ref 57)) -1 (nil)
    (nil))

(barrier/i 55 54 56)

(insn/i 56 55 57 (clobber (reg:XF 63)) -1 (nil)
    (nil))

(code_label/i 57 56 58 97 "" "" [0 uses])

(note/i 58 57 59 0x402b8860 NOTE_INSN_BLOCK_END 0)

(insn/i 59 58 60 (set (reg:XF 64)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC17")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:XF (mem/u/f:XF (symbol_ref/u:SI ("*.LC17")) 0) 922222592 [0x36f80000] 429395011 [0x19980c43] 1073583606 [0x3ffd95f6])
        (nil)))

(jump_insn/i 60 59 61 (parallel[ 
            (set (pc)
                (if_then_else (ge:CCFPU (reg:XF 63)
                        (reg:XF 64))
                    (label_ref 63)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 61 60 62 (set (pc)
        (label_ref 73)) -1 (nil)
    (nil))

(barrier/i 62 61 63)

(code_label/i 63 62 64 98 "" "" [0 uses])

(insn/i 64 63 65 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 65 64 66 (set (reg:XF 65)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC16")) 0)) -1 (nil)
    (nil))

(insn/i 66 65 67 (set (reg:XF 66)
        (plus:XF (reg/v:XF 59)
            (reg:XF 65))) -1 (nil)
    (nil))

(insn/i 67 66 68 (set (mem/f:XF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:XF 66)) -1 (nil)
    (nil))

(call_insn/i 68 67 69 (set (reg:XF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("logl")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn/i 69 68 70 (set (reg/v:XF 61)
        (reg:XF 8 st(0))) -1 (nil)
    (nil))

(insn/i 70 69 71 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 71 70 72 (set (pc)
        (label_ref 75)) -1 (nil)
    (nil))

(barrier/i 72 71 73)

(code_label/i 73 72 74 99 "" "" [0 uses])

(insn/i 74 73 75 (parallel[ 
            (set (reg/v:XF 61)
                (asm_operands/v ("fldln2
	fxch
	fyl2xp1") ("=t") 0[ 
                        (reg/v:XF 59)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 540))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(code_label/i 75 74 76 100 "" "" [0 uses])

(insn/i 76 75 77 (set (reg:XF 60)
        (reg/v:XF 61)) -1 (nil)
    (nil))

(jump_insn/i 77 76 78 (set (pc)
        (label_ref 81)) -1 (nil)
    (nil))

(barrier/i 78 77 79)

(note/i 79 78 80 0x402b8840 NOTE_INSN_BLOCK_END 0)

(insn/i 80 79 81 (clobber (reg:XF 60)) -1 (nil)
    (nil))

(code_label/i 81 80 82 101 "" "" [0 uses])

(note 82 81 84 0x402b8820 NOTE_INSN_BLOCK_END 0)

(insn 84 82 86 (set (reg:XF 67)
        (float_extend:XF (reg/v:DF 42))) -1 (nil)
    (nil))

(insn 86 84 87 (set (reg/v:XF 68)
        (reg:XF 67)) -1 (nil)
    (nil))

(note 87 86 89 0x402b8c20 NOTE_INSN_BLOCK_BEG 0)

(note/i 89 87 90 0x402b8c40 NOTE_INSN_BLOCK_BEG 0)

(insn/i 90 89 91 (clobber (mem/s:BLK (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)) -1 (nil)
    (nil))

(insn/i 91 90 92 (set (mem/s:XF (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)
        (reg/v:XF 68)) -1 (nil)
    (nil))

(insn/i 92 91 93 (set (reg:SI 70)
        (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) 0)) -1 (nil)
    (nil))

(insn/i 93 92 94 (parallel[ 
            (set (reg:SI 71)
                (and:SI (reg:SI 70)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (expr_list:REG_EQUAL (and:SI (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                    (const_int -8 [0xfffffff8])) 0)
            (const_int 32768 [0x8000]))
        (nil)))

(insn/i 94 93 95 (parallel[ 
            (set (reg:SI 72)
                (ior:SI (reg:SI 71)
                    (const_int 16383 [0x3fff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 95 94 96 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) 0)
        (reg:SI 72)) -1 (nil)
    (nil))

(insn/i 96 95 97 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -12 [0xfffffff4])) 0)
        (const_int -2147483648 [0x80000000])) -1 (nil)
    (nil))

(insn/i 97 96 98 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn/i 98 97 99 (set (reg:XF 73)
        (mem/s:XF (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)) -1 (nil)
    (nil))

(insn/i 99 98 100 (set (reg:XF 69)
        (reg:XF 73)) -1 (nil)
    (nil))

(jump_insn/i 100 99 101 (set (pc)
        (label_ref 104)) -1 (nil)
    (nil))

(barrier/i 101 100 102)

(note/i 102 101 103 0x402b8c40 NOTE_INSN_BLOCK_END 0)

(insn/i 103 102 104 (clobber (reg:XF 69)) -1 (nil)
    (nil))

(code_label/i 104 103 105 102 "" "" [0 uses])

(note 105 104 106 0x402b8c20 NOTE_INSN_BLOCK_END 0)

(insn 106 105 108 (set (reg:XF 74)
        (mult:XF (reg:XF 60)
            (reg:XF 69))) -1 (nil)
    (nil))

(insn 108 106 110 (parallel[ 
            (set (reg:DF 47)
                (float_truncate:DF (reg:XF 74)))
            (clobber (mem:DF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -24 [0xffffffe8])) 0))
        ] ) -1 (nil)
    (nil))

(insn 110 108 111 (set (reg/i:DF 8 st(0))
        (reg:DF 47)) -1 (nil)
    (nil))

(jump_insn 111 110 112 (set (pc)
        (label_ref 117)) -1 (nil)
    (nil))

(barrier 112 111 113)

(note 113 112 114 0x402b8f20 NOTE_INSN_BLOCK_END 0)

(note 114 113 116 NOTE_INSN_FUNCTION_END 0)

(insn 116 114 117 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 117 116 118 94 "" "" [0 uses])

(insn 118 117 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function asinhf

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SF 42)
        (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 11 0x402bd5e0 NOTE_INSN_BLOCK_BEG 0)

(insn 11 8 13 (set (reg:XF 44)
        (float_extend:XF (reg/v:SF 42))) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg/v:XF 45)
        (reg:XF 44)) -1 (nil)
    (nil))

(note 14 13 16 0x402bb6a0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 16 14 17 (parallel[ 
            (set (reg:XF 46)
                (abs:XF (reg/v:XF 45)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 17 16 18 (set (reg/v:XF 43)
        (reg:XF 46)) -1 (nil)
    (nil))

(jump_insn/i 18 17 19 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))

(barrier/i 19 18 20)

(insn/i 20 19 21 (clobber (reg/v:XF 43)) -1 (nil)
    (nil))

(code_label/i 21 20 22 104 "" "" [0 uses])

(note 22 21 23 0x402bb6a0 NOTE_INSN_BLOCK_END 0)

(insn 23 22 25 (set (reg:XF 48)
        (mult:XF (reg/v:XF 43)
            (reg/v:XF 43))) -1 (nil)
    (nil))

(insn 25 23 26 (set (reg:XF 50)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC18")) 0)) -1 (nil)
    (nil))

(insn 26 25 28 (set (reg:XF 49)
        (plus:XF (reg:XF 48)
            (reg:XF 50))) -1 (nil)
    (nil))

(insn 28 26 29 (set (reg/v:XF 51)
        (reg:XF 49)) -1 (nil)
    (nil))

(note 29 28 31 0x402bbc60 NOTE_INSN_BLOCK_BEG 0)

(note/i 31 29 32 0x402bbc80 NOTE_INSN_BLOCK_BEG 0)

(insn/i 32 31 33 (parallel[ 
            (set (reg/v:XF 53)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:XF 51)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 442))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 33 32 34 (set (reg:XF 52)
        (reg/v:XF 53)) -1 (nil)
    (nil))

(jump_insn/i 34 33 35 (set (pc)
        (label_ref 38)) -1 (nil)
    (nil))

(barrier/i 35 34 36)

(note/i 36 35 37 0x402bbc80 NOTE_INSN_BLOCK_END 0)

(insn/i 37 36 38 (clobber (reg:XF 52)) -1 (nil)
    (nil))

(code_label/i 38 37 39 105 "" "" [0 uses])

(note 39 38 40 0x402bbc60 NOTE_INSN_BLOCK_END 0)

(insn 40 39 42 (set (reg:XF 54)
        (mult:XF (reg/v:XF 43)
            (reg/v:XF 43))) -1 (nil)
    (nil))

(insn 42 40 43 (set (reg:XF 56)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC18")) 0)) -1 (nil)
    (nil))

(insn 43 42 44 (set (reg:XF 55)
        (plus:XF (reg:XF 52)
            (reg:XF 56))) -1 (nil)
    (nil))

(insn 44 43 45 (set (reg:XF 57)
        (div:XF (reg:XF 54)
            (reg:XF 55))) -1 (nil)
    (nil))

(insn 45 44 47 (set (reg:XF 58)
        (plus:XF (reg:XF 57)
            (reg/v:XF 43))) -1 (nil)
    (nil))

(insn 47 45 48 (set (reg/v:XF 59)
        (reg:XF 58)) -1 (nil)
    (nil))

(note 48 47 50 0x402bbee0 NOTE_INSN_BLOCK_BEG 0)

(note/i 50 48 51 0x402bbf00 NOTE_INSN_BLOCK_BEG 0)

(note/i 51 50 52 0x402bbf20 NOTE_INSN_BLOCK_BEG 0)

(insn/i 52 51 53 (parallel[ 
            (set (reg:XF 62)
                (abs:XF (reg/v:XF 59)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 53 52 54 (set (reg:XF 63)
        (reg:XF 62)) -1 (nil)
    (nil))

(jump_insn/i 54 53 55 (set (pc)
        (label_ref 57)) -1 (nil)
    (nil))

(barrier/i 55 54 56)

(insn/i 56 55 57 (clobber (reg:XF 63)) -1 (nil)
    (nil))

(code_label/i 57 56 58 106 "" "" [0 uses])

(note/i 58 57 59 0x402bbf20 NOTE_INSN_BLOCK_END 0)

(insn/i 59 58 60 (set (reg:XF 64)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC19")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:XF (mem/u/f:XF (symbol_ref/u:SI ("*.LC19")) 0) 922222592 [0x36f80000] 429395011 [0x19980c43] 1073583606 [0x3ffd95f6])
        (nil)))

(jump_insn/i 60 59 61 (parallel[ 
            (set (pc)
                (if_then_else (ge:CCFPU (reg:XF 63)
                        (reg:XF 64))
                    (label_ref 63)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 61 60 62 (set (pc)
        (label_ref 73)) -1 (nil)
    (nil))

(barrier/i 62 61 63)

(code_label/i 63 62 64 107 "" "" [0 uses])

(insn/i 64 63 65 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 65 64 66 (set (reg:XF 65)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC18")) 0)) -1 (nil)
    (nil))

(insn/i 66 65 67 (set (reg:XF 66)
        (plus:XF (reg/v:XF 59)
            (reg:XF 65))) -1 (nil)
    (nil))

(insn/i 67 66 68 (set (mem/f:XF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:XF 66)) -1 (nil)
    (nil))

(call_insn/i 68 67 69 (set (reg:XF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("logl")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn/i 69 68 70 (set (reg/v:XF 61)
        (reg:XF 8 st(0))) -1 (nil)
    (nil))

(insn/i 70 69 71 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 71 70 72 (set (pc)
        (label_ref 75)) -1 (nil)
    (nil))

(barrier/i 72 71 73)

(code_label/i 73 72 74 108 "" "" [0 uses])

(insn/i 74 73 75 (parallel[ 
            (set (reg/v:XF 61)
                (asm_operands/v ("fldln2
	fxch
	fyl2xp1") ("=t") 0[ 
                        (reg/v:XF 59)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 540))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(code_label/i 75 74 76 109 "" "" [0 uses])

(insn/i 76 75 77 (set (reg:XF 60)
        (reg/v:XF 61)) -1 (nil)
    (nil))

(jump_insn/i 77 76 78 (set (pc)
        (label_ref 81)) -1 (nil)
    (nil))

(barrier/i 78 77 79)

(note/i 79 78 80 0x402bbf00 NOTE_INSN_BLOCK_END 0)

(insn/i 80 79 81 (clobber (reg:XF 60)) -1 (nil)
    (nil))

(code_label/i 81 80 82 110 "" "" [0 uses])

(note 82 81 84 0x402bbee0 NOTE_INSN_BLOCK_END 0)

(insn 84 82 86 (set (reg:XF 67)
        (float_extend:XF (reg/v:SF 42))) -1 (nil)
    (nil))

(insn 86 84 87 (set (reg/v:XF 68)
        (reg:XF 67)) -1 (nil)
    (nil))

(note 87 86 89 0x402bd2e0 NOTE_INSN_BLOCK_BEG 0)

(note/i 89 87 90 0x402bd300 NOTE_INSN_BLOCK_BEG 0)

(insn/i 90 89 91 (clobber (mem/s:BLK (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)) -1 (nil)
    (nil))

(insn/i 91 90 92 (set (mem/s:XF (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)
        (reg/v:XF 68)) -1 (nil)
    (nil))

(insn/i 92 91 93 (set (reg:SI 70)
        (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) 0)) -1 (nil)
    (nil))

(insn/i 93 92 94 (parallel[ 
            (set (reg:SI 71)
                (and:SI (reg:SI 70)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (expr_list:REG_EQUAL (and:SI (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                    (const_int -8 [0xfffffff8])) 0)
            (const_int 32768 [0x8000]))
        (nil)))

(insn/i 94 93 95 (parallel[ 
            (set (reg:SI 72)
                (ior:SI (reg:SI 71)
                    (const_int 16383 [0x3fff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 95 94 96 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) 0)
        (reg:SI 72)) -1 (nil)
    (nil))

(insn/i 96 95 97 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -12 [0xfffffff4])) 0)
        (const_int -2147483648 [0x80000000])) -1 (nil)
    (nil))

(insn/i 97 96 98 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn/i 98 97 99 (set (reg:XF 73)
        (mem/s:XF (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)) -1 (nil)
    (nil))

(insn/i 99 98 100 (set (reg:XF 69)
        (reg:XF 73)) -1 (nil)
    (nil))

(jump_insn/i 100 99 101 (set (pc)
        (label_ref 104)) -1 (nil)
    (nil))

(barrier/i 101 100 102)

(note/i 102 101 103 0x402bd300 NOTE_INSN_BLOCK_END 0)

(insn/i 103 102 104 (clobber (reg:XF 69)) -1 (nil)
    (nil))

(code_label/i 104 103 105 111 "" "" [0 uses])

(note 105 104 106 0x402bd2e0 NOTE_INSN_BLOCK_END 0)

(insn 106 105 108 (set (reg:XF 74)
        (mult:XF (reg:XF 60)
            (reg:XF 69))) -1 (nil)
    (nil))

(insn 108 106 110 (parallel[ 
            (set (reg:SF 47)
                (float_truncate:SF (reg:XF 74)))
            (clobber (mem:SF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -20 [0xffffffec])) 0))
        ] ) -1 (nil)
    (nil))

(insn 110 108 111 (set (reg/i:SF 8 st(0))
        (reg:SF 47)) -1 (nil)
    (nil))

(jump_insn 111 110 112 (set (pc)
        (label_ref 117)) -1 (nil)
    (nil))

(barrier 112 111 113)

(note 113 112 114 0x402bd5e0 NOTE_INSN_BLOCK_END 0)

(note 114 113 116 NOTE_INSN_FUNCTION_END 0)

(insn 116 114 117 (clobber (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

(code_label 117 116 118 103 "" "" [0 uses])

(insn 118 117 0 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Function asinhl

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x402bfb40 NOTE_INSN_BLOCK_BEG 0)

(note 10 8 12 0x402bdd00 NOTE_INSN_BLOCK_BEG 0)

(insn/i 12 10 13 (parallel[ 
            (set (reg:XF 44)
                (abs:XF (reg/v:XF 42)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 13 12 14 (set (reg/v:XF 43)
        (reg:XF 44)) -1 (nil)
    (nil))

(jump_insn/i 14 13 15 (set (pc)
        (label_ref 17)) -1 (nil)
    (nil))

(barrier/i 15 14 16)

(insn/i 16 15 17 (clobber (reg/v:XF 43)) -1 (nil)
    (nil))

(code_label/i 17 16 18 113 "" "" [0 uses])

(note 18 17 19 0x402bdd00 NOTE_INSN_BLOCK_END 0)

(insn 19 18 21 (set (reg:XF 46)
        (mult:XF (reg/v:XF 43)
            (reg/v:XF 43))) -1 (nil)
    (nil))

(insn 21 19 22 (set (reg:XF 48)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC20")) 0)) -1 (nil)
    (nil))

(insn 22 21 24 (set (reg:XF 47)
        (plus:XF (reg:XF 46)
            (reg:XF 48))) -1 (nil)
    (nil))

(insn 24 22 25 (set (reg/v:XF 49)
        (reg:XF 47)) -1 (nil)
    (nil))

(note 25 24 27 0x402bf280 NOTE_INSN_BLOCK_BEG 0)

(note/i 27 25 28 0x402bf2a0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 28 27 29 (parallel[ 
            (set (reg/v:XF 51)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:XF 49)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 442))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 29 28 30 (set (reg:XF 50)
        (reg/v:XF 51)) -1 (nil)
    (nil))

(jump_insn/i 30 29 31 (set (pc)
        (label_ref 34)) -1 (nil)
    (nil))

(barrier/i 31 30 32)

(note/i 32 31 33 0x402bf2a0 NOTE_INSN_BLOCK_END 0)

(insn/i 33 32 34 (clobber (reg:XF 50)) -1 (nil)
    (nil))

(code_label/i 34 33 35 114 "" "" [0 uses])

(note 35 34 36 0x402bf280 NOTE_INSN_BLOCK_END 0)

(insn 36 35 38 (set (reg:XF 52)
        (mult:XF (reg/v:XF 43)
            (reg/v:XF 43))) -1 (nil)
    (nil))

(insn 38 36 39 (set (reg:XF 54)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC20")) 0)) -1 (nil)
    (nil))

(insn 39 38 40 (set (reg:XF 53)
        (plus:XF (reg:XF 50)
            (reg:XF 54))) -1 (nil)
    (nil))

(insn 40 39 41 (set (reg:XF 55)
        (div:XF (reg:XF 52)
            (reg:XF 53))) -1 (nil)
    (nil))

(insn 41 40 43 (set (reg:XF 56)
        (plus:XF (reg:XF 55)
            (reg/v:XF 43))) -1 (nil)
    (nil))

(insn 43 41 44 (set (reg/v:XF 57)
        (reg:XF 56)) -1 (nil)
    (nil))

(note 44 43 46 0x402bf500 NOTE_INSN_BLOCK_BEG 0)

(note/i 46 44 47 0x402bf520 NOTE_INSN_BLOCK_BEG 0)

(note/i 47 46 48 0x402bf540 NOTE_INSN_BLOCK_BEG 0)

(insn/i 48 47 49 (parallel[ 
            (set (reg:XF 60)
                (abs:XF (reg/v:XF 57)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 49 48 50 (set (reg:XF 61)
        (reg:XF 60)) -1 (nil)
    (nil))

(jump_insn/i 50 49 51 (set (pc)
        (label_ref 53)) -1 (nil)
    (nil))

(barrier/i 51 50 52)

(insn/i 52 51 53 (clobber (reg:XF 61)) -1 (nil)
    (nil))

(code_label/i 53 52 54 115 "" "" [0 uses])

(note/i 54 53 55 0x402bf540 NOTE_INSN_BLOCK_END 0)

(insn/i 55 54 56 (set (reg:XF 62)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC21")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:XF (mem/u/f:XF (symbol_ref/u:SI ("*.LC21")) 0) 922222592 [0x36f80000] 429395011 [0x19980c43] 1073583606 [0x3ffd95f6])
        (nil)))

(jump_insn/i 56 55 57 (parallel[ 
            (set (pc)
                (if_then_else (ge:CCFPU (reg:XF 61)
                        (reg:XF 62))
                    (label_ref 59)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 57 56 58 (set (pc)
        (label_ref 69)) -1 (nil)
    (nil))

(barrier/i 58 57 59)

(code_label/i 59 58 60 116 "" "" [0 uses])

(insn/i 60 59 61 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 61 60 62 (set (reg:XF 63)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC20")) 0)) -1 (nil)
    (nil))

(insn/i 62 61 63 (set (reg:XF 64)
        (plus:XF (reg/v:XF 57)
            (reg:XF 63))) -1 (nil)
    (nil))

(insn/i 63 62 64 (set (mem/f:XF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:XF 64)) -1 (nil)
    (nil))

(call_insn/i 64 63 65 (set (reg:XF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("logl")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn/i 65 64 66 (set (reg/v:XF 59)
        (reg:XF 8 st(0))) -1 (nil)
    (nil))

(insn/i 66 65 67 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 67 66 68 (set (pc)
        (label_ref 71)) -1 (nil)
    (nil))

(barrier/i 68 67 69)

(code_label/i 69 68 70 117 "" "" [0 uses])

(insn/i 70 69 71 (parallel[ 
            (set (reg/v:XF 59)
                (asm_operands/v ("fldln2
	fxch
	fyl2xp1") ("=t") 0[ 
                        (reg/v:XF 57)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 540))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(code_label/i 71 70 72 118 "" "" [0 uses])

(insn/i 72 71 73 (set (reg:XF 58)
        (reg/v:XF 59)) -1 (nil)
    (nil))

(jump_insn/i 73 72 74 (set (pc)
        (label_ref 77)) -1 (nil)
    (nil))

(barrier/i 74 73 75)

(note/i 75 74 76 0x402bf520 NOTE_INSN_BLOCK_END 0)

(insn/i 76 75 77 (clobber (reg:XF 58)) -1 (nil)
    (nil))

(code_label/i 77 76 78 119 "" "" [0 uses])

(note 78 77 79 0x402bf500 NOTE_INSN_BLOCK_END 0)

(note 79 78 81 0x402bf880 NOTE_INSN_BLOCK_BEG 0)

(note/i 81 79 82 0x402bf8a0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 82 81 83 (clobber (mem/s:BLK (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)) -1 (nil)
    (nil))

(insn/i 83 82 84 (set (mem/s:XF (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)
        (reg/v:XF 42)) -1 (nil)
    (nil))

(insn/i 84 83 85 (set (reg:SI 66)
        (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) 0)) -1 (nil)
    (nil))

(insn/i 85 84 86 (parallel[ 
            (set (reg:SI 67)
                (and:SI (reg:SI 66)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (expr_list:REG_EQUAL (and:SI (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                    (const_int -8 [0xfffffff8])) 0)
            (const_int 32768 [0x8000]))
        (nil)))

(insn/i 86 85 87 (parallel[ 
            (set (reg:SI 68)
                (ior:SI (reg:SI 67)
                    (const_int 16383 [0x3fff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 87 86 88 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) 0)
        (reg:SI 68)) -1 (nil)
    (nil))

(insn/i 88 87 89 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -12 [0xfffffff4])) 0)
        (const_int -2147483648 [0x80000000])) -1 (nil)
    (nil))

(insn/i 89 88 90 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn/i 90 89 91 (set (reg:XF 69)
        (mem/s:XF (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)) -1 (nil)
    (nil))

(insn/i 91 90 92 (set (reg:XF 65)
        (reg:XF 69)) -1 (nil)
    (nil))

(jump_insn/i 92 91 93 (set (pc)
        (label_ref 96)) -1 (nil)
    (nil))

(barrier/i 93 92 94)

(note/i 94 93 95 0x402bf8a0 NOTE_INSN_BLOCK_END 0)

(insn/i 95 94 96 (clobber (reg:XF 65)) -1 (nil)
    (nil))

(code_label/i 96 95 97 120 "" "" [0 uses])

(note 97 96 98 0x402bf880 NOTE_INSN_BLOCK_END 0)

(insn 98 97 100 (set (reg:XF 45)
        (mult:XF (reg:XF 58)
            (reg:XF 65))) -1 (nil)
    (nil))

(insn 100 98 101 (set (reg/i:XF 8 st(0))
        (reg:XF 45)) -1 (nil)
    (nil))

(jump_insn 101 100 102 (set (pc)
        (label_ref 107)) -1 (nil)
    (nil))

(barrier 102 101 103)

(note 103 102 104 0x402bfb40 NOTE_INSN_BLOCK_END 0)

(note 104 103 106 NOTE_INSN_FUNCTION_END 0)

(insn 106 104 107 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 107 106 108 112 "" "" [0 uses])

(insn 108 107 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function acosh

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 11 0x402c2b40 NOTE_INSN_BLOCK_BEG 0)

(insn 11 8 13 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg:DF 45)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC22")) 0)) -1 (nil)
    (nil))

(insn 14 13 16 (set (reg:DF 44)
        (minus:DF (reg/v:DF 42)
            (reg:DF 45))) -1 (nil)
    (nil))

(insn 16 14 18 (set (reg:XF 46)
        (float_extend:XF (reg:DF 44))) -1 (nil)
    (nil))

(insn 18 16 19 (set (reg/v:XF 47)
        (reg:XF 46)) -1 (nil)
    (nil))

(note 19 18 21 0x402c2580 NOTE_INSN_BLOCK_BEG 0)

(note/i 21 19 22 0x402c25a0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 22 21 23 (parallel[ 
            (set (reg/v:XF 49)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:XF 47)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 442))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 23 22 24 (set (reg:XF 48)
        (reg/v:XF 49)) -1 (nil)
    (nil))

(jump_insn/i 24 23 25 (set (pc)
        (label_ref 28)) -1 (nil)
    (nil))

(barrier/i 25 24 26)

(note/i 26 25 27 0x402c25a0 NOTE_INSN_BLOCK_END 0)

(insn/i 27 26 28 (clobber (reg:XF 48)) -1 (nil)
    (nil))

(code_label/i 28 27 29 122 "" "" [0 uses])

(note 29 28 31 0x402c2580 NOTE_INSN_BLOCK_END 0)

(insn 31 29 32 (set (reg:DF 51)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC22")) 0)) -1 (nil)
    (nil))

(insn 32 31 34 (set (reg:DF 50)
        (plus:DF (reg/v:DF 42)
            (reg:DF 51))) -1 (nil)
    (nil))

(insn 34 32 36 (set (reg:XF 52)
        (float_extend:XF (reg:DF 50))) -1 (nil)
    (nil))

(insn 36 34 37 (set (reg/v:XF 53)
        (reg:XF 52)) -1 (nil)
    (nil))

(note 37 36 39 0x402c27e0 NOTE_INSN_BLOCK_BEG 0)

(note/i 39 37 40 0x402c2800 NOTE_INSN_BLOCK_BEG 0)

(insn/i 40 39 41 (parallel[ 
            (set (reg/v:XF 55)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:XF 53)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 442))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 41 40 42 (set (reg:XF 54)
        (reg/v:XF 55)) -1 (nil)
    (nil))

(jump_insn/i 42 41 43 (set (pc)
        (label_ref 46)) -1 (nil)
    (nil))

(barrier/i 43 42 44)

(note/i 44 43 45 0x402c2800 NOTE_INSN_BLOCK_END 0)

(insn/i 45 44 46 (clobber (reg:XF 54)) -1 (nil)
    (nil))

(code_label/i 46 45 47 123 "" "" [0 uses])

(note 47 46 49 0x402c27e0 NOTE_INSN_BLOCK_END 0)

(insn 49 47 50 (set (reg:XF 56)
        (float_extend:XF (reg/v:DF 42))) -1 (nil)
    (nil))

(insn 50 49 51 (set (reg:XF 57)
        (mult:XF (reg:XF 48)
            (reg:XF 54))) -1 (nil)
    (nil))

(insn 51 50 53 (set (reg:XF 58)
        (plus:XF (reg:XF 56)
            (reg:XF 57))) -1 (nil)
    (nil))

(insn 53 51 54 (set (mem/f:XF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:XF 58)) -1 (nil)
    (nil))

(call_insn 54 53 56 (set (reg:XF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("logl")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 56 54 58 (set (reg:XF 59)
        (reg:XF 8 st(0))) -1 (nil)
    (nil))

(insn 58 56 60 (parallel[ 
            (set (reg:DF 43)
                (float_truncate:DF (reg:XF 59)))
            (clobber (mem:DF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -8 [0xfffffff8])) 0))
        ] ) -1 (nil)
    (nil))

(insn 60 58 62 (set (reg/i:DF 8 st(0))
        (reg:DF 43)) -1 (nil)
    (nil))

(insn 62 60 63 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 63 62 64 (set (pc)
        (label_ref 69)) -1 (nil)
    (nil))

(barrier 64 63 65)

(note 65 64 66 0x402c2b40 NOTE_INSN_BLOCK_END 0)

(note 66 65 68 NOTE_INSN_FUNCTION_END 0)

(insn 68 66 69 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 69 68 70 121 "" "" [0 uses])

(insn 70 69 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function acoshf

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SF 42)
        (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 11 0x402c3c00 NOTE_INSN_BLOCK_BEG 0)

(insn 11 8 13 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 13 11 15 (set (reg:DF 44)
        (float_extend:DF (reg/v:SF 42))) -1 (nil)
    (nil))

(insn 15 13 16 (set (reg:DF 46)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC23")) 0)) -1 (nil)
    (nil))

(insn 16 15 18 (set (reg:DF 45)
        (minus:DF (reg:DF 44)
            (reg:DF 46))) -1 (nil)
    (nil))

(insn 18 16 20 (set (reg:XF 47)
        (float_extend:XF (reg:DF 45))) -1 (nil)
    (nil))

(insn 20 18 21 (set (reg/v:XF 48)
        (reg:XF 47)) -1 (nil)
    (nil))

(note 21 20 23 0x402c3600 NOTE_INSN_BLOCK_BEG 0)

(note/i 23 21 24 0x402c3620 NOTE_INSN_BLOCK_BEG 0)

(insn/i 24 23 25 (parallel[ 
            (set (reg/v:XF 50)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:XF 48)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 442))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 25 24 26 (set (reg:XF 49)
        (reg/v:XF 50)) -1 (nil)
    (nil))

(jump_insn/i 26 25 27 (set (pc)
        (label_ref 30)) -1 (nil)
    (nil))

(barrier/i 27 26 28)

(note/i 28 27 29 0x402c3620 NOTE_INSN_BLOCK_END 0)

(insn/i 29 28 30 (clobber (reg:XF 49)) -1 (nil)
    (nil))

(code_label/i 30 29 31 125 "" "" [0 uses])

(note 31 30 33 0x402c3600 NOTE_INSN_BLOCK_END 0)

(insn 33 31 35 (set (reg:DF 51)
        (float_extend:DF (reg/v:SF 42))) -1 (nil)
    (nil))

(insn 35 33 36 (set (reg:DF 53)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC23")) 0)) -1 (nil)
    (nil))

(insn 36 35 38 (set (reg:DF 52)
        (plus:DF (reg:DF 51)
            (reg:DF 53))) -1 (nil)
    (nil))

(insn 38 36 40 (set (reg:XF 54)
        (float_extend:XF (reg:DF 52))) -1 (nil)
    (nil))

(insn 40 38 41 (set (reg/v:XF 55)
        (reg:XF 54)) -1 (nil)
    (nil))

(note 41 40 43 0x402c38a0 NOTE_INSN_BLOCK_BEG 0)

(note/i 43 41 44 0x402c38c0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 44 43 45 (parallel[ 
            (set (reg/v:XF 57)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:XF 55)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 442))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 45 44 46 (set (reg:XF 56)
        (reg/v:XF 57)) -1 (nil)
    (nil))

(jump_insn/i 46 45 47 (set (pc)
        (label_ref 50)) -1 (nil)
    (nil))

(barrier/i 47 46 48)

(note/i 48 47 49 0x402c38c0 NOTE_INSN_BLOCK_END 0)

(insn/i 49 48 50 (clobber (reg:XF 56)) -1 (nil)
    (nil))

(code_label/i 50 49 51 126 "" "" [0 uses])

(note 51 50 53 0x402c38a0 NOTE_INSN_BLOCK_END 0)

(insn 53 51 54 (set (reg:XF 58)
        (float_extend:XF (reg/v:SF 42))) -1 (nil)
    (nil))

(insn 54 53 55 (set (reg:XF 59)
        (mult:XF (reg:XF 49)
            (reg:XF 56))) -1 (nil)
    (nil))

(insn 55 54 57 (set (reg:XF 60)
        (plus:XF (reg:XF 58)
            (reg:XF 59))) -1 (nil)
    (nil))

(insn 57 55 58 (set (mem/f:XF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:XF 60)) -1 (nil)
    (nil))

(call_insn 58 57 60 (set (reg:XF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("logl")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 60 58 62 (set (reg:XF 61)
        (reg:XF 8 st(0))) -1 (nil)
    (nil))

(insn 62 60 64 (parallel[ 
            (set (reg:SF 43)
                (float_truncate:SF (reg:XF 61)))
            (clobber (mem:SF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -4 [0xfffffffc])) 0))
        ] ) -1 (nil)
    (nil))

(insn 64 62 66 (set (reg/i:SF 8 st(0))
        (reg:SF 43)) -1 (nil)
    (nil))

(insn 66 64 67 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 67 66 68 (set (pc)
        (label_ref 73)) -1 (nil)
    (nil))

(barrier 68 67 69)

(note 69 68 70 0x402c3c00 NOTE_INSN_BLOCK_END 0)

(note 70 69 72 NOTE_INSN_FUNCTION_END 0)

(insn 72 70 73 (clobber (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

(code_label 73 72 74 124 "" "" [0 uses])

(insn 74 73 0 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Function acoshl

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 11 0x402c6b40 NOTE_INSN_BLOCK_BEG 0)

(insn 11 8 13 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg:XF 45)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC24")) 0)) -1 (nil)
    (nil))

(insn 14 13 16 (set (reg:XF 44)
        (minus:XF (reg/v:XF 42)
            (reg:XF 45))) -1 (nil)
    (nil))

(insn 16 14 17 (set (reg/v:XF 46)
        (reg:XF 44)) -1 (nil)
    (nil))

(note 17 16 19 0x402c6640 NOTE_INSN_BLOCK_BEG 0)

(note/i 19 17 20 0x402c6660 NOTE_INSN_BLOCK_BEG 0)

(insn/i 20 19 21 (parallel[ 
            (set (reg/v:XF 48)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:XF 46)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 442))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 21 20 22 (set (reg:XF 47)
        (reg/v:XF 48)) -1 (nil)
    (nil))

(jump_insn/i 22 21 23 (set (pc)
        (label_ref 26)) -1 (nil)
    (nil))

(barrier/i 23 22 24)

(note/i 24 23 25 0x402c6660 NOTE_INSN_BLOCK_END 0)

(insn/i 25 24 26 (clobber (reg:XF 47)) -1 (nil)
    (nil))

(code_label/i 26 25 27 128 "" "" [0 uses])

(note 27 26 29 0x402c6640 NOTE_INSN_BLOCK_END 0)

(insn 29 27 30 (set (reg:XF 50)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC24")) 0)) -1 (nil)
    (nil))

(insn 30 29 32 (set (reg:XF 49)
        (plus:XF (reg/v:XF 42)
            (reg:XF 50))) -1 (nil)
    (nil))

(insn 32 30 33 (set (reg/v:XF 51)
        (reg:XF 49)) -1 (nil)
    (nil))

(note 33 32 35 0x402c6860 NOTE_INSN_BLOCK_BEG 0)

(note/i 35 33 36 0x402c6880 NOTE_INSN_BLOCK_BEG 0)

(insn/i 36 35 37 (parallel[ 
            (set (reg/v:XF 53)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:XF 51)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 442))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 37 36 38 (set (reg:XF 52)
        (reg/v:XF 53)) -1 (nil)
    (nil))

(jump_insn/i 38 37 39 (set (pc)
        (label_ref 42)) -1 (nil)
    (nil))

(barrier/i 39 38 40)

(note/i 40 39 41 0x402c6880 NOTE_INSN_BLOCK_END 0)

(insn/i 41 40 42 (clobber (reg:XF 52)) -1 (nil)
    (nil))

(code_label/i 42 41 43 129 "" "" [0 uses])

(note 43 42 44 0x402c6860 NOTE_INSN_BLOCK_END 0)

(insn 44 43 45 (set (reg:XF 54)
        (mult:XF (reg:XF 47)
            (reg:XF 52))) -1 (nil)
    (nil))

(insn 45 44 47 (set (reg:XF 55)
        (plus:XF (reg/v:XF 42)
            (reg:XF 54))) -1 (nil)
    (nil))

(insn 47 45 48 (set (mem/f:XF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:XF 55)) -1 (nil)
    (nil))

(call_insn 48 47 50 (set (reg:XF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("logl")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 50 48 52 (set (reg:XF 43)
        (reg:XF 8 st(0))) -1 (nil)
    (nil))

(insn 52 50 54 (set (reg/i:XF 8 st(0))
        (reg:XF 43)) -1 (nil)
    (nil))

(insn 54 52 55 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn 55 54 56 (set (pc)
        (label_ref 61)) -1 (nil)
    (nil))

(barrier 56 55 57)

(note 57 56 58 0x402c6b40 NOTE_INSN_BLOCK_END 0)

(note 58 57 60 NOTE_INSN_FUNCTION_END 0)

(insn 60 58 61 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 61 60 62 127 "" "" [0 uses])

(insn 62 61 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function atanh

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 11 0x402ca020 NOTE_INSN_BLOCK_BEG 0)

(insn 11 8 13 (set (reg:XF 44)
        (float_extend:XF (reg/v:DF 42))) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg/v:XF 45)
        (reg:XF 44)) -1 (nil)
    (nil))

(note 14 13 16 0x402c72c0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 16 14 17 (parallel[ 
            (set (reg:XF 46)
                (abs:XF (reg/v:XF 45)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 17 16 18 (set (reg/v:XF 43)
        (reg:XF 46)) -1 (nil)
    (nil))

(jump_insn/i 18 17 19 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))

(barrier/i 19 18 20)

(insn/i 20 19 21 (clobber (reg/v:XF 43)) -1 (nil)
    (nil))

(code_label/i 21 20 22 131 "" "" [0 uses])

(note 22 21 23 0x402c72c0 NOTE_INSN_BLOCK_END 0)

(insn 23 22 25 (set (reg:XF 48)
        (plus:XF (reg/v:XF 43)
            (reg/v:XF 43))) -1 (nil)
    (nil))

(insn 25 23 27 (parallel[ 
            (set (reg:XF 49)
                (neg:XF (reg:XF 48)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 27 25 28 (set (reg:XF 51)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC25")) 0)) -1 (nil)
    (nil))

(insn 28 27 29 (set (reg:XF 50)
        (plus:XF (reg/v:XF 43)
            (reg:XF 51))) -1 (nil)
    (nil))

(insn 29 28 31 (set (reg:XF 52)
        (div:XF (reg:XF 49)
            (reg:XF 50))) -1 (nil)
    (nil))

(insn 31 29 32 (set (reg/v:XF 53)
        (reg:XF 52)) -1 (nil)
    (nil))

(note 32 31 34 0x402c7880 NOTE_INSN_BLOCK_BEG 0)

(note/i 34 32 35 0x402c78a0 NOTE_INSN_BLOCK_BEG 0)

(note/i 35 34 36 0x402c78c0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 36 35 37 (parallel[ 
            (set (reg:XF 56)
                (abs:XF (reg/v:XF 53)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 37 36 38 (set (reg:XF 57)
        (reg:XF 56)) -1 (nil)
    (nil))

(jump_insn/i 38 37 39 (set (pc)
        (label_ref 41)) -1 (nil)
    (nil))

(barrier/i 39 38 40)

(insn/i 40 39 41 (clobber (reg:XF 57)) -1 (nil)
    (nil))

(code_label/i 41 40 42 132 "" "" [0 uses])

(note/i 42 41 43 0x402c78c0 NOTE_INSN_BLOCK_END 0)

(insn/i 43 42 44 (set (reg:XF 58)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC26")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:XF (mem/u/f:XF (symbol_ref/u:SI ("*.LC26")) 0) 922222592 [0x36f80000] 429395011 [0x19980c43] 1073583606 [0x3ffd95f6])
        (nil)))

(jump_insn/i 44 43 45 (parallel[ 
            (set (pc)
                (if_then_else (ge:CCFPU (reg:XF 57)
                        (reg:XF 58))
                    (label_ref 47)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 45 44 46 (set (pc)
        (label_ref 57)) -1 (nil)
    (nil))

(barrier/i 46 45 47)

(code_label/i 47 46 48 133 "" "" [0 uses])

(insn/i 48 47 49 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 49 48 50 (set (reg:XF 59)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC25")) 0)) -1 (nil)
    (nil))

(insn/i 50 49 51 (set (reg:XF 60)
        (plus:XF (reg/v:XF 53)
            (reg:XF 59))) -1 (nil)
    (nil))

(insn/i 51 50 52 (set (mem/f:XF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:XF 60)) -1 (nil)
    (nil))

(call_insn/i 52 51 53 (set (reg:XF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("logl")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn/i 53 52 54 (set (reg/v:XF 55)
        (reg:XF 8 st(0))) -1 (nil)
    (nil))

(insn/i 54 53 55 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 55 54 56 (set (pc)
        (label_ref 59)) -1 (nil)
    (nil))

(barrier/i 56 55 57)

(code_label/i 57 56 58 134 "" "" [0 uses])

(insn/i 58 57 59 (parallel[ 
            (set (reg/v:XF 55)
                (asm_operands/v ("fldln2
	fxch
	fyl2xp1") ("=t") 0[ 
                        (reg/v:XF 53)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 540))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(code_label/i 59 58 60 135 "" "" [0 uses])

(insn/i 60 59 61 (set (reg:XF 54)
        (reg/v:XF 55)) -1 (nil)
    (nil))

(jump_insn/i 61 60 62 (set (pc)
        (label_ref 65)) -1 (nil)
    (nil))

(barrier/i 62 61 63)

(note/i 63 62 64 0x402c78a0 NOTE_INSN_BLOCK_END 0)

(insn/i 64 63 65 (clobber (reg:XF 54)) -1 (nil)
    (nil))

(code_label/i 65 64 66 136 "" "" [0 uses])

(note 66 65 68 0x402c7880 NOTE_INSN_BLOCK_END 0)

(insn 68 66 70 (set (reg:XF 61)
        (float_extend:XF (reg/v:DF 42))) -1 (nil)
    (nil))

(insn 70 68 71 (set (reg/v:XF 62)
        (reg:XF 61)) -1 (nil)
    (nil))

(note 71 70 73 0x402c7c80 NOTE_INSN_BLOCK_BEG 0)

(note/i 73 71 74 0x402c7ca0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 74 73 75 (clobber (mem/s:BLK (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)) -1 (nil)
    (nil))

(insn/i 75 74 76 (set (mem/s:XF (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)
        (reg/v:XF 62)) -1 (nil)
    (nil))

(insn/i 76 75 77 (set (reg:SI 64)
        (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) 0)) -1 (nil)
    (nil))

(insn/i 77 76 78 (parallel[ 
            (set (reg:SI 65)
                (and:SI (reg:SI 64)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (expr_list:REG_EQUAL (and:SI (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                    (const_int -8 [0xfffffff8])) 0)
            (const_int 32768 [0x8000]))
        (nil)))

(insn/i 78 77 79 (parallel[ 
            (set (reg:SI 66)
                (ior:SI (reg:SI 65)
                    (const_int 16383 [0x3fff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 79 78 80 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) 0)
        (reg:SI 66)) -1 (nil)
    (nil))

(insn/i 80 79 81 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -12 [0xfffffff4])) 0)
        (const_int -2147483648 [0x80000000])) -1 (nil)
    (nil))

(insn/i 81 80 82 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn/i 82 81 83 (set (reg:XF 67)
        (mem/s:XF (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)) -1 (nil)
    (nil))

(insn/i 83 82 84 (set (reg:XF 63)
        (reg:XF 67)) -1 (nil)
    (nil))

(jump_insn/i 84 83 85 (set (pc)
        (label_ref 88)) -1 (nil)
    (nil))

(barrier/i 85 84 86)

(note/i 86 85 87 0x402c7ca0 NOTE_INSN_BLOCK_END 0)

(insn/i 87 86 88 (clobber (reg:XF 63)) -1 (nil)
    (nil))

(code_label/i 88 87 89 137 "" "" [0 uses])

(note 89 88 91 0x402c7c80 NOTE_INSN_BLOCK_END 0)

(insn 91 89 92 (set (reg:XF 69)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC27")) 0)) -1 (nil)
    (nil))

(insn 92 91 93 (set (reg:XF 68)
        (mult:XF (reg:XF 54)
            (reg:XF 69))) -1 (nil)
    (nil))

(insn 93 92 95 (set (reg:XF 70)
        (mult:XF (reg:XF 68)
            (reg:XF 63))) -1 (nil)
    (nil))

(insn 95 93 97 (parallel[ 
            (set (reg:DF 47)
                (float_truncate:DF (reg:XF 70)))
            (clobber (mem:DF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -24 [0xffffffe8])) 0))
        ] ) -1 (nil)
    (nil))

(insn 97 95 98 (set (reg/i:DF 8 st(0))
        (reg:DF 47)) -1 (nil)
    (nil))

(jump_insn 98 97 99 (set (pc)
        (label_ref 104)) -1 (nil)
    (nil))

(barrier 99 98 100)

(note 100 99 101 0x402ca020 NOTE_INSN_BLOCK_END 0)

(note 101 100 103 NOTE_INSN_FUNCTION_END 0)

(insn 103 101 104 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 104 103 105 130 "" "" [0 uses])

(insn 105 104 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function atanhf

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SF 42)
        (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 11 0x402cc500 NOTE_INSN_BLOCK_BEG 0)

(insn 11 8 13 (set (reg:XF 44)
        (float_extend:XF (reg/v:SF 42))) -1 (nil)
    (nil))

(insn 13 11 14 (set (reg/v:XF 45)
        (reg:XF 44)) -1 (nil)
    (nil))

(note 14 13 16 0x402ca7a0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 16 14 17 (parallel[ 
            (set (reg:XF 46)
                (abs:XF (reg/v:XF 45)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 17 16 18 (set (reg/v:XF 43)
        (reg:XF 46)) -1 (nil)
    (nil))

(jump_insn/i 18 17 19 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))

(barrier/i 19 18 20)

(insn/i 20 19 21 (clobber (reg/v:XF 43)) -1 (nil)
    (nil))

(code_label/i 21 20 22 139 "" "" [0 uses])

(note 22 21 23 0x402ca7a0 NOTE_INSN_BLOCK_END 0)

(insn 23 22 25 (set (reg:XF 48)
        (plus:XF (reg/v:XF 43)
            (reg/v:XF 43))) -1 (nil)
    (nil))

(insn 25 23 27 (parallel[ 
            (set (reg:XF 49)
                (neg:XF (reg:XF 48)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 27 25 28 (set (reg:XF 51)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC28")) 0)) -1 (nil)
    (nil))

(insn 28 27 29 (set (reg:XF 50)
        (plus:XF (reg/v:XF 43)
            (reg:XF 51))) -1 (nil)
    (nil))

(insn 29 28 31 (set (reg:XF 52)
        (div:XF (reg:XF 49)
            (reg:XF 50))) -1 (nil)
    (nil))

(insn 31 29 32 (set (reg/v:XF 53)
        (reg:XF 52)) -1 (nil)
    (nil))

(note 32 31 34 0x402cad60 NOTE_INSN_BLOCK_BEG 0)

(note/i 34 32 35 0x402cad80 NOTE_INSN_BLOCK_BEG 0)

(note/i 35 34 36 0x402cada0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 36 35 37 (parallel[ 
            (set (reg:XF 56)
                (abs:XF (reg/v:XF 53)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 37 36 38 (set (reg:XF 57)
        (reg:XF 56)) -1 (nil)
    (nil))

(jump_insn/i 38 37 39 (set (pc)
        (label_ref 41)) -1 (nil)
    (nil))

(barrier/i 39 38 40)

(insn/i 40 39 41 (clobber (reg:XF 57)) -1 (nil)
    (nil))

(code_label/i 41 40 42 140 "" "" [0 uses])

(note/i 42 41 43 0x402cada0 NOTE_INSN_BLOCK_END 0)

(insn/i 43 42 44 (set (reg:XF 58)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC29")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:XF (mem/u/f:XF (symbol_ref/u:SI ("*.LC29")) 0) 922222592 [0x36f80000] 429395011 [0x19980c43] 1073583606 [0x3ffd95f6])
        (nil)))

(jump_insn/i 44 43 45 (parallel[ 
            (set (pc)
                (if_then_else (ge:CCFPU (reg:XF 57)
                        (reg:XF 58))
                    (label_ref 47)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 45 44 46 (set (pc)
        (label_ref 57)) -1 (nil)
    (nil))

(barrier/i 46 45 47)

(code_label/i 47 46 48 141 "" "" [0 uses])

(insn/i 48 47 49 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 49 48 50 (set (reg:XF 59)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC28")) 0)) -1 (nil)
    (nil))

(insn/i 50 49 51 (set (reg:XF 60)
        (plus:XF (reg/v:XF 53)
            (reg:XF 59))) -1 (nil)
    (nil))

(insn/i 51 50 52 (set (mem/f:XF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:XF 60)) -1 (nil)
    (nil))

(call_insn/i 52 51 53 (set (reg:XF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("logl")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn/i 53 52 54 (set (reg/v:XF 55)
        (reg:XF 8 st(0))) -1 (nil)
    (nil))

(insn/i 54 53 55 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 55 54 56 (set (pc)
        (label_ref 59)) -1 (nil)
    (nil))

(barrier/i 56 55 57)

(code_label/i 57 56 58 142 "" "" [0 uses])

(insn/i 58 57 59 (parallel[ 
            (set (reg/v:XF 55)
                (asm_operands/v ("fldln2
	fxch
	fyl2xp1") ("=t") 0[ 
                        (reg/v:XF 53)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 540))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(code_label/i 59 58 60 143 "" "" [0 uses])

(insn/i 60 59 61 (set (reg:XF 54)
        (reg/v:XF 55)) -1 (nil)
    (nil))

(jump_insn/i 61 60 62 (set (pc)
        (label_ref 65)) -1 (nil)
    (nil))

(barrier/i 62 61 63)

(note/i 63 62 64 0x402cad80 NOTE_INSN_BLOCK_END 0)

(insn/i 64 63 65 (clobber (reg:XF 54)) -1 (nil)
    (nil))

(code_label/i 65 64 66 144 "" "" [0 uses])

(note 66 65 68 0x402cad60 NOTE_INSN_BLOCK_END 0)

(insn 68 66 70 (set (reg:XF 61)
        (float_extend:XF (reg/v:SF 42))) -1 (nil)
    (nil))

(insn 70 68 71 (set (reg/v:XF 62)
        (reg:XF 61)) -1 (nil)
    (nil))

(note 71 70 73 0x402cc160 NOTE_INSN_BLOCK_BEG 0)

(note/i 73 71 74 0x402cc180 NOTE_INSN_BLOCK_BEG 0)

(insn/i 74 73 75 (clobber (mem/s:BLK (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)) -1 (nil)
    (nil))

(insn/i 75 74 76 (set (mem/s:XF (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)
        (reg/v:XF 62)) -1 (nil)
    (nil))

(insn/i 76 75 77 (set (reg:SI 64)
        (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) 0)) -1 (nil)
    (nil))

(insn/i 77 76 78 (parallel[ 
            (set (reg:SI 65)
                (and:SI (reg:SI 64)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (expr_list:REG_EQUAL (and:SI (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                    (const_int -8 [0xfffffff8])) 0)
            (const_int 32768 [0x8000]))
        (nil)))

(insn/i 78 77 79 (parallel[ 
            (set (reg:SI 66)
                (ior:SI (reg:SI 65)
                    (const_int 16383 [0x3fff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 79 78 80 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) 0)
        (reg:SI 66)) -1 (nil)
    (nil))

(insn/i 80 79 81 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -12 [0xfffffff4])) 0)
        (const_int -2147483648 [0x80000000])) -1 (nil)
    (nil))

(insn/i 81 80 82 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn/i 82 81 83 (set (reg:XF 67)
        (mem/s:XF (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)) -1 (nil)
    (nil))

(insn/i 83 82 84 (set (reg:XF 63)
        (reg:XF 67)) -1 (nil)
    (nil))

(jump_insn/i 84 83 85 (set (pc)
        (label_ref 88)) -1 (nil)
    (nil))

(barrier/i 85 84 86)

(note/i 86 85 87 0x402cc180 NOTE_INSN_BLOCK_END 0)

(insn/i 87 86 88 (clobber (reg:XF 63)) -1 (nil)
    (nil))

(code_label/i 88 87 89 145 "" "" [0 uses])

(note 89 88 91 0x402cc160 NOTE_INSN_BLOCK_END 0)

(insn 91 89 92 (set (reg:XF 69)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC30")) 0)) -1 (nil)
    (nil))

(insn 92 91 93 (set (reg:XF 68)
        (mult:XF (reg:XF 54)
            (reg:XF 69))) -1 (nil)
    (nil))

(insn 93 92 95 (set (reg:XF 70)
        (mult:XF (reg:XF 68)
            (reg:XF 63))) -1 (nil)
    (nil))

(insn 95 93 97 (parallel[ 
            (set (reg:SF 47)
                (float_truncate:SF (reg:XF 70)))
            (clobber (mem:SF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -20 [0xffffffec])) 0))
        ] ) -1 (nil)
    (nil))

(insn 97 95 98 (set (reg/i:SF 8 st(0))
        (reg:SF 47)) -1 (nil)
    (nil))

(jump_insn 98 97 99 (set (pc)
        (label_ref 104)) -1 (nil)
    (nil))

(barrier 99 98 100)

(note 100 99 101 0x402cc500 NOTE_INSN_BLOCK_END 0)

(note 101 100 103 NOTE_INSN_FUNCTION_END 0)

(insn 103 101 104 (clobber (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

(code_label 104 103 105 138 "" "" [0 uses])

(insn 105 104 0 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Function atanhl

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x402cd880 NOTE_INSN_BLOCK_BEG 0)

(note 10 8 12 0x402ccc20 NOTE_INSN_BLOCK_BEG 0)

(insn/i 12 10 13 (parallel[ 
            (set (reg:XF 44)
                (abs:XF (reg/v:XF 42)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 13 12 14 (set (reg/v:XF 43)
        (reg:XF 44)) -1 (nil)
    (nil))

(jump_insn/i 14 13 15 (set (pc)
        (label_ref 17)) -1 (nil)
    (nil))

(barrier/i 15 14 16)

(insn/i 16 15 17 (clobber (reg/v:XF 43)) -1 (nil)
    (nil))

(code_label/i 17 16 18 147 "" "" [0 uses])

(note 18 17 19 0x402ccc20 NOTE_INSN_BLOCK_END 0)

(insn 19 18 21 (set (reg:XF 46)
        (plus:XF (reg/v:XF 43)
            (reg/v:XF 43))) -1 (nil)
    (nil))

(insn 21 19 23 (parallel[ 
            (set (reg:XF 47)
                (neg:XF (reg:XF 46)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 23 21 24 (set (reg:XF 49)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC31")) 0)) -1 (nil)
    (nil))

(insn 24 23 25 (set (reg:XF 48)
        (plus:XF (reg/v:XF 43)
            (reg:XF 49))) -1 (nil)
    (nil))

(insn 25 24 27 (set (reg:XF 50)
        (div:XF (reg:XF 47)
            (reg:XF 48))) -1 (nil)
    (nil))

(insn 27 25 28 (set (reg/v:XF 51)
        (reg:XF 50)) -1 (nil)
    (nil))

(note 28 27 30 0x402cd1a0 NOTE_INSN_BLOCK_BEG 0)

(note/i 30 28 31 0x402cd1c0 NOTE_INSN_BLOCK_BEG 0)

(note/i 31 30 32 0x402cd1e0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 32 31 33 (parallel[ 
            (set (reg:XF 54)
                (abs:XF (reg/v:XF 51)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 33 32 34 (set (reg:XF 55)
        (reg:XF 54)) -1 (nil)
    (nil))

(jump_insn/i 34 33 35 (set (pc)
        (label_ref 37)) -1 (nil)
    (nil))

(barrier/i 35 34 36)

(insn/i 36 35 37 (clobber (reg:XF 55)) -1 (nil)
    (nil))

(code_label/i 37 36 38 148 "" "" [0 uses])

(note/i 38 37 39 0x402cd1e0 NOTE_INSN_BLOCK_END 0)

(insn/i 39 38 40 (set (reg:XF 56)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC32")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:XF (mem/u/f:XF (symbol_ref/u:SI ("*.LC32")) 0) 922222592 [0x36f80000] 429395011 [0x19980c43] 1073583606 [0x3ffd95f6])
        (nil)))

(jump_insn/i 40 39 41 (parallel[ 
            (set (pc)
                (if_then_else (ge:CCFPU (reg:XF 55)
                        (reg:XF 56))
                    (label_ref 43)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 41 40 42 (set (pc)
        (label_ref 53)) -1 (nil)
    (nil))

(barrier/i 42 41 43)

(code_label/i 43 42 44 149 "" "" [0 uses])

(insn/i 44 43 45 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 45 44 46 (set (reg:XF 57)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC31")) 0)) -1 (nil)
    (nil))

(insn/i 46 45 47 (set (reg:XF 58)
        (plus:XF (reg/v:XF 51)
            (reg:XF 57))) -1 (nil)
    (nil))

(insn/i 47 46 48 (set (mem/f:XF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:XF 58)) -1 (nil)
    (nil))

(call_insn/i 48 47 49 (set (reg:XF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("logl")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn/i 49 48 50 (set (reg/v:XF 53)
        (reg:XF 8 st(0))) -1 (nil)
    (nil))

(insn/i 50 49 51 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(jump_insn/i 51 50 52 (set (pc)
        (label_ref 55)) -1 (nil)
    (nil))

(barrier/i 52 51 53)

(code_label/i 53 52 54 150 "" "" [0 uses])

(insn/i 54 53 55 (parallel[ 
            (set (reg/v:XF 53)
                (asm_operands/v ("fldln2
	fxch
	fyl2xp1") ("=t") 0[ 
                        (reg/v:XF 51)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 540))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 9 st(1)))
        ] ) -1 (nil)
    (nil))

(code_label/i 55 54 56 151 "" "" [0 uses])

(insn/i 56 55 57 (set (reg:XF 52)
        (reg/v:XF 53)) -1 (nil)
    (nil))

(jump_insn/i 57 56 58 (set (pc)
        (label_ref 61)) -1 (nil)
    (nil))

(barrier/i 58 57 59)

(note/i 59 58 60 0x402cd1c0 NOTE_INSN_BLOCK_END 0)

(insn/i 60 59 61 (clobber (reg:XF 52)) -1 (nil)
    (nil))

(code_label/i 61 60 62 152 "" "" [0 uses])

(note 62 61 63 0x402cd1a0 NOTE_INSN_BLOCK_END 0)

(note 63 62 65 0x402cd520 NOTE_INSN_BLOCK_BEG 0)

(note/i 65 63 66 0x402cd540 NOTE_INSN_BLOCK_BEG 0)

(insn/i 66 65 67 (clobber (mem/s:BLK (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)) -1 (nil)
    (nil))

(insn/i 67 66 68 (set (mem/s:XF (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)
        (reg/v:XF 42)) -1 (nil)
    (nil))

(insn/i 68 67 69 (set (reg:SI 60)
        (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) 0)) -1 (nil)
    (nil))

(insn/i 69 68 70 (parallel[ 
            (set (reg:SI 61)
                (and:SI (reg:SI 60)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (expr_list:REG_EQUAL (and:SI (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                    (const_int -8 [0xfffffff8])) 0)
            (const_int 32768 [0x8000]))
        (nil)))

(insn/i 70 69 71 (parallel[ 
            (set (reg:SI 62)
                (ior:SI (reg:SI 61)
                    (const_int 16383 [0x3fff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 71 70 72 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -8 [0xfffffff8])) 0)
        (reg:SI 62)) -1 (nil)
    (nil))

(insn/i 72 71 73 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -12 [0xfffffff4])) 0)
        (const_int -2147483648 [0x80000000])) -1 (nil)
    (nil))

(insn/i 73 72 74 (set (mem/s:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn/i 74 73 75 (set (reg:XF 63)
        (mem/s:XF (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -16 [0xfffffff0])) 0)) -1 (nil)
    (nil))

(insn/i 75 74 76 (set (reg:XF 59)
        (reg:XF 63)) -1 (nil)
    (nil))

(jump_insn/i 76 75 77 (set (pc)
        (label_ref 80)) -1 (nil)
    (nil))

(barrier/i 77 76 78)

(note/i 78 77 79 0x402cd540 NOTE_INSN_BLOCK_END 0)

(insn/i 79 78 80 (clobber (reg:XF 59)) -1 (nil)
    (nil))

(code_label/i 80 79 81 153 "" "" [0 uses])

(note 81 80 83 0x402cd520 NOTE_INSN_BLOCK_END 0)

(insn 83 81 84 (set (reg:XF 64)
        (mem/u/f:XF (symbol_ref/u:SI ("*.LC33")) 0)) -1 (nil)
    (nil))

(insn 84 83 85 (set (reg:XF 45)
        (mult:XF (reg:XF 52)
            (reg:XF 64))) -1 (nil)
    (nil))

(insn 85 84 87 (set (reg:XF 45)
        (mult:XF (reg:XF 45)
            (reg:XF 59))) -1 (nil)
    (nil))

(insn 87 85 88 (set (reg/i:XF 8 st(0))
        (reg:XF 45)) -1 (nil)
    (nil))

(jump_insn 88 87 89 (set (pc)
        (label_ref 94)) -1 (nil)
    (nil))

(barrier 89 88 90)

(note 90 89 91 0x402cd880 NOTE_INSN_BLOCK_END 0)

(note 91 90 93 NOTE_INSN_FUNCTION_END 0)

(insn 93 91 94 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 94 93 95 146 "" "" [0 uses])

(insn 95 94 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function hypot

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(insn 6 4 7 (set (reg/v:DF 43)
        (mem/f:DF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 12 0x402d0400 NOTE_INSN_BLOCK_BEG 0)

(insn 12 10 13 (set (reg:DF 45)
        (mult:DF (reg/v:DF 42)
            (reg/v:DF 42))) -1 (nil)
    (nil))

(insn 13 12 14 (set (reg:DF 46)
        (mult:DF (reg/v:DF 43)
            (reg/v:DF 43))) -1 (nil)
    (nil))

(insn 14 13 16 (set (reg:DF 47)
        (plus:DF (reg:DF 45)
            (reg:DF 46))) -1 (nil)
    (nil))

(insn 16 14 18 (set (reg:XF 48)
        (float_extend:XF (reg:DF 47))) -1 (nil)
    (nil))

(insn 18 16 19 (set (reg/v:XF 49)
        (reg:XF 48)) -1 (nil)
    (nil))

(note 19 18 21 0x402d01e0 NOTE_INSN_BLOCK_BEG 0)

(note/i 21 19 22 0x402d0200 NOTE_INSN_BLOCK_BEG 0)

(insn/i 22 21 23 (parallel[ 
            (set (reg/v:XF 51)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:XF 49)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 442))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 23 22 24 (set (reg:XF 50)
        (reg/v:XF 51)) -1 (nil)
    (nil))

(jump_insn/i 24 23 25 (set (pc)
        (label_ref 28)) -1 (nil)
    (nil))

(barrier/i 25 24 26)

(note/i 26 25 27 0x402d0200 NOTE_INSN_BLOCK_END 0)

(insn/i 27 26 28 (clobber (reg:XF 50)) -1 (nil)
    (nil))

(code_label/i 28 27 29 155 "" "" [0 uses])

(note 29 28 31 0x402d01e0 NOTE_INSN_BLOCK_END 0)

(insn 31 29 33 (parallel[ 
            (set (reg:DF 44)
                (float_truncate:DF (reg:XF 50)))
            (clobber (mem:DF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -8 [0xfffffff8])) 0))
        ] ) -1 (nil)
    (nil))

(insn 33 31 34 (set (reg/i:DF 8 st(0))
        (reg:DF 44)) -1 (nil)
    (nil))

(jump_insn 34 33 35 (set (pc)
        (label_ref 40)) -1 (nil)
    (nil))

(barrier 35 34 36)

(note 36 35 37 0x402d0400 NOTE_INSN_BLOCK_END 0)

(note 37 36 39 NOTE_INSN_FUNCTION_END 0)

(insn 39 37 40 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 40 39 41 154 "" "" [0 uses])

(insn 41 40 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function hypotf

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SF 42)
        (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 7 (set (reg/v:SF 43)
        (mem/f:SF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 12 0x402d0f80 NOTE_INSN_BLOCK_BEG 0)

(insn 12 10 13 (set (reg:SF 45)
        (mult:SF (reg/v:SF 42)
            (reg/v:SF 42))) -1 (nil)
    (nil))

(insn 13 12 14 (set (reg:SF 46)
        (mult:SF (reg/v:SF 43)
            (reg/v:SF 43))) -1 (nil)
    (nil))

(insn 14 13 16 (set (reg:SF 47)
        (plus:SF (reg:SF 45)
            (reg:SF 46))) -1 (nil)
    (nil))

(insn 16 14 18 (set (reg:XF 48)
        (float_extend:XF (reg:SF 47))) -1 (nil)
    (nil))

(insn 18 16 19 (set (reg/v:XF 49)
        (reg:XF 48)) -1 (nil)
    (nil))

(note 19 18 21 0x402d0d60 NOTE_INSN_BLOCK_BEG 0)

(note/i 21 19 22 0x402d0d80 NOTE_INSN_BLOCK_BEG 0)

(insn/i 22 21 23 (parallel[ 
            (set (reg/v:XF 51)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:XF 49)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 442))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 23 22 24 (set (reg:XF 50)
        (reg/v:XF 51)) -1 (nil)
    (nil))

(jump_insn/i 24 23 25 (set (pc)
        (label_ref 28)) -1 (nil)
    (nil))

(barrier/i 25 24 26)

(note/i 26 25 27 0x402d0d80 NOTE_INSN_BLOCK_END 0)

(insn/i 27 26 28 (clobber (reg:XF 50)) -1 (nil)
    (nil))

(code_label/i 28 27 29 157 "" "" [0 uses])

(note 29 28 31 0x402d0d60 NOTE_INSN_BLOCK_END 0)

(insn 31 29 33 (parallel[ 
            (set (reg:SF 44)
                (float_truncate:SF (reg:XF 50)))
            (clobber (mem:SF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -4 [0xfffffffc])) 0))
        ] ) -1 (nil)
    (nil))

(insn 33 31 34 (set (reg/i:SF 8 st(0))
        (reg:SF 44)) -1 (nil)
    (nil))

(jump_insn 34 33 35 (set (pc)
        (label_ref 40)) -1 (nil)
    (nil))

(barrier 35 34 36)

(note 36 35 37 0x402d0f80 NOTE_INSN_BLOCK_END 0)

(note 37 36 39 NOTE_INSN_FUNCTION_END 0)

(insn 39 37 40 (clobber (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

(code_label 40 39 41 156 "" "" [0 uses])

(insn 41 40 0 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Function hypotl

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 7 (set (reg/v:XF 43)
        (mem/f:XF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)
        (nil)))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 12 0x402d2aa0 NOTE_INSN_BLOCK_BEG 0)

(insn 12 10 13 (set (reg:XF 45)
        (mult:XF (reg/v:XF 42)
            (reg/v:XF 42))) -1 (nil)
    (nil))

(insn 13 12 14 (set (reg:XF 46)
        (mult:XF (reg/v:XF 43)
            (reg/v:XF 43))) -1 (nil)
    (nil))

(insn 14 13 16 (set (reg:XF 47)
        (plus:XF (reg:XF 45)
            (reg:XF 46))) -1 (nil)
    (nil))

(insn 16 14 17 (set (reg/v:XF 48)
        (reg:XF 47)) -1 (nil)
    (nil))

(note 17 16 19 0x402d28c0 NOTE_INSN_BLOCK_BEG 0)

(note/i 19 17 20 0x402d28e0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 20 19 21 (parallel[ 
            (set (reg/v:XF 49)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:XF 48)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 442))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 21 20 22 (set (reg:XF 44)
        (reg/v:XF 49)) -1 (nil)
    (nil))

(jump_insn/i 22 21 23 (set (pc)
        (label_ref 26)) -1 (nil)
    (nil))

(barrier/i 23 22 24)

(note/i 24 23 25 0x402d28e0 NOTE_INSN_BLOCK_END 0)

(insn/i 25 24 26 (clobber (reg:XF 44)) -1 (nil)
    (nil))

(code_label/i 26 25 27 159 "" "" [0 uses])

(note 27 26 29 0x402d28c0 NOTE_INSN_BLOCK_END 0)

(insn 29 27 30 (set (reg/i:XF 8 st(0))
        (reg:XF 44)) -1 (nil)
    (nil))

(jump_insn 30 29 31 (set (pc)
        (label_ref 36)) -1 (nil)
    (nil))

(barrier 31 30 32)

(note 32 31 33 0x402d2aa0 NOTE_INSN_BLOCK_END 0)

(note 33 32 35 NOTE_INSN_FUNCTION_END 0)

(insn 35 33 36 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 36 35 37 158 "" "" [0 uses])

(insn 37 36 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function logb

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x402d4620 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (reg/v:XF 44)
                (asm_operands/v ("fxtract
	") ("=t") 0[ 
                        (reg/v:DF 42)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 569))
            (set (reg/v:XF 43)
                (asm_operands/v ("fxtract
	") ("=u") 1[ 
                        (reg/v:DF 42)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 569))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 12 10 14 (parallel[ 
            (set (reg:DF 45)
                (float_truncate:DF (reg/v:XF 43)))
            (clobber (mem:DF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -8 [0xfffffff8])) 0))
        ] ) -1 (nil)
    (nil))

(insn 14 12 15 (set (reg/i:DF 8 st(0))
        (reg:DF 45)) -1 (nil)
    (nil))

(jump_insn 15 14 16 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))

(barrier 16 15 17)

(note 17 16 18 0x402d4620 NOTE_INSN_BLOCK_END 0)

(note 18 17 20 NOTE_INSN_FUNCTION_END 0)

(insn 20 18 21 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 21 20 22 160 "" "" [0 uses])

(insn 22 21 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function logbf

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:SF 42)
        (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x402d61a0 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (reg/v:XF 44)
                (asm_operands/v ("fxtract
	") ("=t") 0[ 
                        (reg/v:SF 42)
                    ] 
                    [ 
                        (asm_input:SF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 569))
            (set (reg/v:XF 43)
                (asm_operands/v ("fxtract
	") ("=u") 1[ 
                        (reg/v:SF 42)
                    ] 
                    [ 
                        (asm_input:SF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 569))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 12 10 14 (parallel[ 
            (set (reg:SF 45)
                (float_truncate:SF (reg/v:XF 43)))
            (clobber (mem:SF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -4 [0xfffffffc])) 0))
        ] ) -1 (nil)
    (nil))

(insn 14 12 15 (set (reg/i:SF 8 st(0))
        (reg:SF 45)) -1 (nil)
    (nil))

(jump_insn 15 14 16 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))

(barrier 16 15 17)

(note 17 16 18 0x402d61a0 NOTE_INSN_BLOCK_END 0)

(note 18 17 20 NOTE_INSN_FUNCTION_END 0)

(insn 20 18 21 (clobber (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

(code_label 21 20 22 161 "" "" [0 uses])

(insn 22 21 0 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Function logbl

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 10 0x402d6d00 NOTE_INSN_BLOCK_BEG 0)

(insn 10 8 12 (parallel[ 
            (set (reg/v:XF 44)
                (asm_operands/v ("fxtract
	") ("=t") 0[ 
                        (reg/v:XF 42)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 569))
            (set (reg/v:XF 43)
                (asm_operands/v ("fxtract
	") ("=u") 1[ 
                        (reg/v:XF 42)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 569))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 12 10 13 (set (reg/i:XF 8 st(0))
        (reg/v:XF 43)) -1 (nil)
    (nil))

(jump_insn 13 12 14 (set (pc)
        (label_ref 19)) -1 (nil)
    (nil))

(barrier 14 13 15)

(note 15 14 16 0x402d6d00 NOTE_INSN_BLOCK_END 0)

(note 16 15 18 NOTE_INSN_FUNCTION_END 0)

(insn 18 16 19 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 19 18 20 162 "" "" [0 uses])

(insn 20 19 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function drem

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(insn 6 4 7 (set (reg/v:DF 43)
        (mem/f:DF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 12 0x402d9b60 NOTE_INSN_BLOCK_BEG 0)

(insn 12 10 14 (parallel[ 
            (set (reg/v:DF 44)
                (asm_operands/v ("1:	fprem1
	fstsw	%%ax
	sahf
	jp	1b") ("=t") 0[ 
                        (reg/v:DF 42)
                        (reg/v:DF 43)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                        (asm_input:DF ("u"))
                    ]  ("/usr/include/bits/mathinline.h") 653))
            (set (reg/v:SI 45)
                (asm_operands/v ("1:	fprem1
	fstsw	%%ax
	sahf
	jp	1b") ("=&a") 1[ 
                        (reg/v:DF 42)
                        (reg/v:DF 43)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                        (asm_input:DF ("u"))
                    ]  ("/usr/include/bits/mathinline.h") 653))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 14 12 15 (set (reg/i:DF 8 st(0))
        (reg/v:DF 44)) -1 (nil)
    (nil))

(jump_insn 15 14 16 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))

(barrier 16 15 17)

(note 17 16 18 0x402d9b60 NOTE_INSN_BLOCK_END 0)

(note 18 17 20 NOTE_INSN_FUNCTION_END 0)

(insn 20 18 21 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 21 20 22 163 "" "" [0 uses])

(insn 22 21 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function dremf

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SF 42)
        (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 7 (set (reg/v:SF 43)
        (mem/f:SF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 12 0x402dc9a0 NOTE_INSN_BLOCK_BEG 0)

(insn 12 10 14 (parallel[ 
            (set (reg/v:DF 44)
                (asm_operands/v ("1:	fprem1
	fstsw	%%ax
	sahf
	jp	1b") ("=t") 0[ 
                        (reg/v:SF 42)
                        (reg/v:SF 43)
                    ] 
                    [ 
                        (asm_input:SF ("0"))
                        (asm_input:SF ("u"))
                    ]  ("/usr/include/bits/mathinline.h") 653))
            (set (reg/v:SI 45)
                (asm_operands/v ("1:	fprem1
	fstsw	%%ax
	sahf
	jp	1b") ("=&a") 1[ 
                        (reg/v:SF 42)
                        (reg/v:SF 43)
                    ] 
                    [ 
                        (asm_input:SF ("0"))
                        (asm_input:SF ("u"))
                    ]  ("/usr/include/bits/mathinline.h") 653))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 14 12 16 (parallel[ 
            (set (reg:SF 46)
                (float_truncate:SF (reg/v:DF 44)))
            (clobber (mem:SF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -4 [0xfffffffc])) 0))
        ] ) -1 (nil)
    (nil))

(insn 16 14 17 (set (reg/i:SF 8 st(0))
        (reg:SF 46)) -1 (nil)
    (nil))

(jump_insn 17 16 18 (set (pc)
        (label_ref 23)) -1 (nil)
    (nil))

(barrier 18 17 19)

(note 19 18 20 0x402dc9a0 NOTE_INSN_BLOCK_END 0)

(note 20 19 22 NOTE_INSN_FUNCTION_END 0)

(insn 22 20 23 (clobber (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

(code_label 23 22 24 164 "" "" [0 uses])

(insn 24 23 0 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Function dreml

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:XF 42)
        (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 7 (set (reg/v:XF 43)
        (mem/f:XF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:XF (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)
        (nil)))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 12 0x402dd840 NOTE_INSN_BLOCK_BEG 0)

(insn 12 10 14 (parallel[ 
            (set (reg/v:DF 44)
                (asm_operands/v ("1:	fprem1
	fstsw	%%ax
	sahf
	jp	1b") ("=t") 0[ 
                        (reg/v:XF 42)
                        (reg/v:XF 43)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                        (asm_input:XF ("u"))
                    ]  ("/usr/include/bits/mathinline.h") 653))
            (set (reg/v:SI 45)
                (asm_operands/v ("1:	fprem1
	fstsw	%%ax
	sahf
	jp	1b") ("=&a") 1[ 
                        (reg/v:XF 42)
                        (reg/v:XF 43)
                    ] 
                    [ 
                        (asm_input:XF ("0"))
                        (asm_input:XF ("u"))
                    ]  ("/usr/include/bits/mathinline.h") 653))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 14 12 16 (set (reg:XF 46)
        (float_extend:XF (reg/v:DF 44))) -1 (nil)
    (nil))

(insn 16 14 17 (set (reg/i:XF 8 st(0))
        (reg:XF 46)) -1 (nil)
    (nil))

(jump_insn 17 16 18 (set (pc)
        (label_ref 23)) -1 (nil)
    (nil))

(barrier 18 17 19)

(note 19 18 20 0x402dd840 NOTE_INSN_BLOCK_END 0)

(note 20 19 22 NOTE_INSN_FUNCTION_END 0)

(insn 22 20 23 (clobber (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

(code_label 23 22 24 165 "" "" [0 uses])

(insn 24 23 0 (use (reg/i:XF 8 st(0))) -1 (nil)
    (nil))

;; Function __finite

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 11 0x402df800 NOTE_INSN_BLOCK_BEG 0)

(insn 11 8 13 (clobber (reg:DI 44)) -1 (nil)
    (nil))

(insn 13 11 15 (set (subreg:DF (reg:DI 44) 0)
        (reg/v:DF 42)) -1 (nil)
    (nil))

(insn 15 13 17 (parallel[ 
            (set (reg:SI 43)
                (ior:SI (subreg:SI (reg:DI 44) 4)
                    (const_int -2146435073 [0x800fffff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 17 15 19 (parallel[ 
            (set (reg:SI 43)
                (plus:SI (reg:SI 43)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 19 17 21 (parallel[ 
            (set (reg:SI 43)
                (lshiftrt:SI (reg:SI 43)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 21 19 22 (set (reg/i:SI 0 eax)
        (reg:SI 43)) -1 (nil)
    (nil))

(jump_insn 22 21 23 (set (pc)
        (label_ref 29)) -1 (nil)
    (nil))

(barrier 23 22 25)

(note 25 23 26 0x402df800 NOTE_INSN_BLOCK_END 0)

(note 26 25 28 NOTE_INSN_FUNCTION_END 0)

(insn 28 26 29 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 29 28 30 166 "" "" [0 uses])

(insn 30 29 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function __strcpy_small

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 10 (set (reg:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 10 6 14 (set (reg:SI 46)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(insn 14 10 16 (set (reg/v:SI 47)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)
        (nil)))

(insn 16 14 18 (set (reg/v:SI 48)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 16 [0x10])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 16 [0x10])) 0)
        (nil)))

(insn 18 16 8 (set (reg/v:SI 49)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 20 [0x14])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 20 [0x14])) 0)
        (nil)))

(insn 8 18 12 (set (reg/v:HI 43)
        (subreg:HI (reg:SI 44) 0)) -1 (nil)
    (nil))

(insn 12 8 19 (set (reg/v:HI 45)
        (subreg:HI (reg:SI 46) 0)) -1 (nil)
    (nil))

(note 19 12 22 NOTE_INSN_FUNCTION_BEG 0)

(note 22 19 26 0x402f53c0 NOTE_INSN_BLOCK_BEG 0)

(insn 26 22 127 (set (reg/v:SI 50)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(insn 127 26 128 (parallel[ 
            (set (reg:SI 51)
                (plus:SI (reg/v:SI 49)
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 128 127 129 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 51)
            (const_int 7 [0x7]))) -1 (nil)
    (nil))

(jump_insn 129 128 131 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) -1 (nil)
    (nil))

(insn 131 129 133 (set (reg:SI 52)
        (label_ref:SI 136)) -1 (nil)
    (expr_list:REG_EQUAL (label_ref:SI 136)
        (nil)))

(insn 133 131 134 (set (reg:SI 53)
        (mem/u:SI (plus:SI (mult:SI (reg:SI 51)
                    (const_int 4 [0x4]))
                (reg:SI 52)) 0)) -1 (nil)
    (nil))

(jump_insn 134 133 135 (parallel[ 
            (set (pc)
                (reg:SI 53))
            (use (label_ref 136))
        ] ) -1 (nil)
    (nil))

(barrier 135 134 136)

(code_label 136 135 137 177 "" "" [0 uses])

(jump_insn 137 136 138 (addr_vec:SI[ 
            (label_ref:SI 32)
            (label_ref:SI 39)
            (label_ref:SI 46)
            (label_ref:SI 59)
            (label_ref:SI 66)
            (label_ref:SI 79)
            (label_ref:SI 92)
            (label_ref:SI 111)
        ] ) -1 (nil)
    (nil))

(barrier 138 137 29)

(note 29 138 32 ("/usr/include/bits/string2.h") 410 0)

(code_label 32 29 35 169 "" "" [0 uses])

(insn 35 32 37 (set (mem/s:QI (reg/v:SI 50) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(jump_insn 37 35 38 (set (pc)
        (label_ref 139)) -1 (nil)
    (nil))

(barrier 38 37 39)

(code_label 39 38 42 170 "" "" [0 uses])

(insn 42 39 44 (set (mem/s:HI (reg/v:SI 50) 0)
        (reg/v:HI 43)) -1 (nil)
    (nil))

(jump_insn 44 42 45 (set (pc)
        (label_ref 139)) -1 (nil)
    (nil))

(barrier 45 44 46)

(code_label 46 45 49 171 "" "" [0 uses])

(insn 49 46 52 (set (mem/s:HI (reg/v:SI 50) 0)
        (reg/v:HI 43)) -1 (nil)
    (nil))

(insn 52 49 55 (parallel[ 
            (set (reg/v:SI 50)
                (plus:SI (reg/v:SI 50)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 55 52 57 (set (mem/s:QI (reg/v:SI 50) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(jump_insn 57 55 58 (set (pc)
        (label_ref 139)) -1 (nil)
    (nil))

(barrier 58 57 59)

(code_label 59 58 62 172 "" "" [0 uses])

(insn 62 59 64 (set (mem/s:SI (reg/v:SI 50) 0)
        (reg/v:SI 47)) -1 (nil)
    (nil))

(jump_insn 64 62 65 (set (pc)
        (label_ref 139)) -1 (nil)
    (nil))

(barrier 65 64 66)

(code_label 66 65 69 173 "" "" [0 uses])

(insn 69 66 72 (set (mem/s:SI (reg/v:SI 50) 0)
        (reg/v:SI 47)) -1 (nil)
    (nil))

(insn 72 69 75 (parallel[ 
            (set (reg/v:SI 50)
                (plus:SI (reg/v:SI 50)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 75 72 77 (set (mem/s:QI (reg/v:SI 50) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(jump_insn 77 75 78 (set (pc)
        (label_ref 139)) -1 (nil)
    (nil))

(barrier 78 77 79)

(code_label 79 78 82 174 "" "" [0 uses])

(insn 82 79 85 (set (mem/s:SI (reg/v:SI 50) 0)
        (reg/v:SI 47)) -1 (nil)
    (nil))

(insn 85 82 88 (parallel[ 
            (set (reg/v:SI 50)
                (plus:SI (reg/v:SI 50)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 88 85 90 (set (mem/s:HI (reg/v:SI 50) 0)
        (reg/v:HI 45)) -1 (nil)
    (nil))

(jump_insn 90 88 91 (set (pc)
        (label_ref 139)) -1 (nil)
    (nil))

(barrier 91 90 92)

(code_label 92 91 95 175 "" "" [0 uses])

(insn 95 92 98 (set (mem/s:SI (reg/v:SI 50) 0)
        (reg/v:SI 47)) -1 (nil)
    (nil))

(insn 98 95 101 (parallel[ 
            (set (reg/v:SI 50)
                (plus:SI (reg/v:SI 50)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 101 98 104 (set (mem/s:HI (reg/v:SI 50) 0)
        (reg/v:HI 45)) -1 (nil)
    (nil))

(insn 104 101 107 (parallel[ 
            (set (reg/v:SI 50)
                (plus:SI (reg/v:SI 50)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 107 104 109 (set (mem/s:QI (reg/v:SI 50) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(jump_insn 109 107 110 (set (pc)
        (label_ref 139)) -1 (nil)
    (nil))

(barrier 110 109 111)

(code_label 111 110 114 176 "" "" [0 uses])

(insn 114 111 117 (set (mem/s:SI (reg/v:SI 50) 0)
        (reg/v:SI 47)) -1 (nil)
    (nil))

(insn 117 114 120 (parallel[ 
            (set (reg/v:SI 50)
                (plus:SI (reg/v:SI 50)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 120 117 122 (set (mem/s:SI (reg/v:SI 50) 0)
        (reg/v:SI 48)) -1 (nil)
    (nil))

(jump_insn 122 120 123 (set (pc)
        (label_ref 139)) -1 (nil)
    (nil))

(barrier 123 122 125)

(code_label 125 123 139 178 "" "" [0 uses])

(code_label 139 125 142 168 "" "" [0 uses])

(insn 142 139 143 (set (reg/i:SI 0 eax)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(jump_insn 143 142 144 (set (pc)
        (label_ref 150)) -1 (nil)
    (nil))

(barrier 144 143 146)

(note 146 144 147 0x402f53c0 NOTE_INSN_BLOCK_END 0)

(note 147 146 149 NOTE_INSN_FUNCTION_END 0)

(insn 149 147 150 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 150 149 151 167 "" "" [0 uses])

(insn 151 150 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function __strcspn_c1

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 8 (set (reg:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 8 6 9 (set (reg/v:QI 43)
        (subreg:QI (reg:SI 44) 0)) -1 (nil)
    (nil))

(note 9 8 12 NOTE_INSN_FUNCTION_BEG 0)

(note 12 9 15 0x402f66a0 NOTE_INSN_BLOCK_BEG 0)

(insn 15 12 17 (set (reg/v:SI 45)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(note 17 15 34 NOTE_INSN_LOOP_BEG 0)

(jump_insn 34 17 35 (set (pc)
        (label_ref 18)) -1 (nil)
    (nil))

(barrier 35 34 33)

(code_label 33 35 28 184 "" "" [0 uses])

(code_label 28 33 31 182 "" "" [0 uses])

(insn 31 28 32 (parallel[ 
            (set (reg/v:SI 45)
                (plus:SI (reg/v:SI 45)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(note 32 31 18 NOTE_INSN_LOOP_CONT 0)

(code_label 18 32 19 180 "" "" [0 uses])

(insn 19 18 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 42)
                    (reg/v:SI 45)) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 20 19 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) -1 (nil)
    (nil))

(insn 21 20 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 42)
                    (reg/v:SI 45)) 0)
            (reg/v:QI 43))) -1 (nil)
    (nil))

(jump_insn 22 21 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) -1 (nil)
    (nil))

(jump_insn 23 22 24 (set (pc)
        (label_ref 25)) -1 (nil)
    (nil))

(barrier 24 23 25)

(code_label 25 24 26 183 "" "" [0 uses])

(jump_insn 26 25 27 (set (pc)
        (label_ref 39)) -1 (nil)
    (nil))

(barrier 27 26 36)

(jump_insn 36 27 37 (set (pc)
        (label_ref 33)) -1 (nil)
    (nil))

(barrier 37 36 38)

(note 38 37 39 NOTE_INSN_LOOP_END 0)

(code_label 39 38 42 181 "" "" [0 uses])

(insn 42 39 43 (set (reg/i:SI 0 eax)
        (reg/v:SI 45)) -1 (nil)
    (nil))

(jump_insn 43 42 44 (set (pc)
        (label_ref 50)) -1 (nil)
    (nil))

(barrier 44 43 46)

(note 46 44 47 0x402f66a0 NOTE_INSN_BLOCK_END 0)

(note 47 46 49 NOTE_INSN_FUNCTION_END 0)

(insn 49 47 50 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 50 49 51 179 "" "" [0 uses])

(insn 51 50 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function __strcspn_c2

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 10 (set (reg:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 10 6 8 (set (reg:SI 46)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(insn 8 10 12 (set (reg/v:QI 43)
        (subreg:QI (reg:SI 44) 0)) -1 (nil)
    (nil))

(insn 12 8 13 (set (reg/v:QI 45)
        (subreg:QI (reg:SI 46) 0)) -1 (nil)
    (nil))

(note 13 12 16 NOTE_INSN_FUNCTION_BEG 0)

(note 16 13 19 0x402f9de0 NOTE_INSN_BLOCK_BEG 0)

(insn 19 16 21 (set (reg/v:SI 47)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(note 21 19 41 NOTE_INSN_LOOP_BEG 0)

(jump_insn 41 21 42 (set (pc)
        (label_ref 22)) -1 (nil)
    (nil))

(barrier 42 41 40)

(code_label 40 42 35 190 "" "" [0 uses])

(code_label 35 40 38 188 "" "" [0 uses])

(insn 38 35 39 (parallel[ 
            (set (reg/v:SI 47)
                (plus:SI (reg/v:SI 47)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(note 39 38 22 NOTE_INSN_LOOP_CONT 0)

(code_label 22 39 24 186 "" "" [0 uses])

(insn 24 22 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 42)
                    (reg/v:SI 47)) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 25 24 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) -1 (nil)
    (nil))

(insn 26 25 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 42)
                    (reg/v:SI 47)) 0)
            (reg/v:QI 43))) -1 (nil)
    (nil))

(jump_insn 27 26 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) -1 (nil)
    (nil))

(insn 28 27 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 42)
                    (reg/v:SI 47)) 0)
            (reg/v:QI 45))) -1 (nil)
    (nil))

(jump_insn 29 28 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) -1 (nil)
    (nil))

(jump_insn 30 29 31 (set (pc)
        (label_ref 32)) -1 (nil)
    (nil))

(barrier 31 30 32)

(code_label 32 31 33 189 "" "" [0 uses])

(jump_insn 33 32 34 (set (pc)
        (label_ref 46)) -1 (nil)
    (nil))

(barrier 34 33 43)

(jump_insn 43 34 44 (set (pc)
        (label_ref 40)) -1 (nil)
    (nil))

(barrier 44 43 45)

(note 45 44 46 NOTE_INSN_LOOP_END 0)

(code_label 46 45 49 187 "" "" [0 uses])

(insn 49 46 50 (set (reg/i:SI 0 eax)
        (reg/v:SI 47)) -1 (nil)
    (nil))

(jump_insn 50 49 51 (set (pc)
        (label_ref 57)) -1 (nil)
    (nil))

(barrier 51 50 53)

(note 53 51 54 0x402f9de0 NOTE_INSN_BLOCK_END 0)

(note 54 53 56 NOTE_INSN_FUNCTION_END 0)

(insn 56 54 57 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 57 56 58 185 "" "" [0 uses])

(insn 58 57 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function __strcspn_c3

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 10 (set (reg:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 10 6 14 (set (reg:SI 46)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(insn 14 10 8 (set (reg:SI 48)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (nil))

(insn 8 14 12 (set (reg/v:QI 43)
        (subreg:QI (reg:SI 44) 0)) -1 (nil)
    (nil))

(insn 12 8 16 (set (reg/v:QI 45)
        (subreg:QI (reg:SI 46) 0)) -1 (nil)
    (nil))

(insn 16 12 17 (set (reg/v:QI 47)
        (subreg:QI (reg:SI 48) 0)) -1 (nil)
    (nil))

(note 17 16 20 NOTE_INSN_FUNCTION_BEG 0)

(note 20 17 23 0x402fca20 NOTE_INSN_BLOCK_BEG 0)

(insn 23 20 25 (set (reg/v:SI 49)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(note 25 23 47 NOTE_INSN_LOOP_BEG 0)

(jump_insn 47 25 48 (set (pc)
        (label_ref 26)) -1 (nil)
    (nil))

(barrier 48 47 46)

(code_label 46 48 41 196 "" "" [0 uses])

(code_label 41 46 44 194 "" "" [0 uses])

(insn 44 41 45 (parallel[ 
            (set (reg/v:SI 49)
                (plus:SI (reg/v:SI 49)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(note 45 44 26 NOTE_INSN_LOOP_CONT 0)

(code_label 26 45 28 192 "" "" [0 uses])

(insn 28 26 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 42)
                    (reg/v:SI 49)) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 29 28 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) -1 (nil)
    (nil))

(insn 30 29 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 42)
                    (reg/v:SI 49)) 0)
            (reg/v:QI 43))) -1 (nil)
    (nil))

(jump_insn 31 30 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) -1 (nil)
    (nil))

(insn 32 31 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 42)
                    (reg/v:SI 49)) 0)
            (reg/v:QI 45))) -1 (nil)
    (nil))

(jump_insn 33 32 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) -1 (nil)
    (nil))

(insn 34 33 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 42)
                    (reg/v:SI 49)) 0)
            (reg/v:QI 47))) -1 (nil)
    (nil))

(jump_insn 35 34 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) -1 (nil)
    (nil))

(jump_insn 36 35 37 (set (pc)
        (label_ref 38)) -1 (nil)
    (nil))

(barrier 37 36 38)

(code_label 38 37 39 195 "" "" [0 uses])

(jump_insn 39 38 40 (set (pc)
        (label_ref 52)) -1 (nil)
    (nil))

(barrier 40 39 49)

(jump_insn 49 40 50 (set (pc)
        (label_ref 46)) -1 (nil)
    (nil))

(barrier 50 49 51)

(note 51 50 52 NOTE_INSN_LOOP_END 0)

(code_label 52 51 55 193 "" "" [0 uses])

(insn 55 52 56 (set (reg/i:SI 0 eax)
        (reg/v:SI 49)) -1 (nil)
    (nil))

(jump_insn 56 55 57 (set (pc)
        (label_ref 63)) -1 (nil)
    (nil))

(barrier 57 56 59)

(note 59 57 60 0x402fca20 NOTE_INSN_BLOCK_END 0)

(note 60 59 62 NOTE_INSN_FUNCTION_END 0)

(insn 62 60 63 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 63 62 64 191 "" "" [0 uses])

(insn 64 63 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function __strspn_c1

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 8 (set (reg:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 8 6 9 (set (reg/v:QI 43)
        (subreg:QI (reg:SI 44) 0)) -1 (nil)
    (nil))

(note 9 8 12 NOTE_INSN_FUNCTION_BEG 0)

(note 12 9 15 0x402fe9a0 NOTE_INSN_BLOCK_BEG 0)

(insn 15 12 17 (set (reg/v:SI 45)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(note 17 15 29 NOTE_INSN_LOOP_BEG 0)

(jump_insn 29 17 30 (set (pc)
        (label_ref 18)) -1 (nil)
    (nil))

(barrier 30 29 28)

(code_label 28 30 23 201 "" "" [0 uses])

(code_label 23 28 26 200 "" "" [0 uses])

(insn 26 23 27 (parallel[ 
            (set (reg/v:SI 45)
                (plus:SI (reg/v:SI 45)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(note 27 26 18 NOTE_INSN_LOOP_CONT 0)

(code_label 18 27 19 198 "" "" [0 uses])

(insn 19 18 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 42)
                    (reg/v:SI 45)) 0)
            (reg/v:QI 43))) -1 (nil)
    (nil))

(jump_insn 20 19 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) -1 (nil)
    (nil))

(jump_insn 21 20 22 (set (pc)
        (label_ref 34)) -1 (nil)
    (nil))

(barrier 22 21 31)

(jump_insn 31 22 32 (set (pc)
        (label_ref 28)) -1 (nil)
    (nil))

(barrier 32 31 33)

(note 33 32 34 NOTE_INSN_LOOP_END 0)

(code_label 34 33 37 199 "" "" [0 uses])

(insn 37 34 38 (set (reg/i:SI 0 eax)
        (reg/v:SI 45)) -1 (nil)
    (nil))

(jump_insn 38 37 39 (set (pc)
        (label_ref 45)) -1 (nil)
    (nil))

(barrier 39 38 41)

(note 41 39 42 0x402fe9a0 NOTE_INSN_BLOCK_END 0)

(note 42 41 44 NOTE_INSN_FUNCTION_END 0)

(insn 44 42 45 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 45 44 46 197 "" "" [0 uses])

(insn 46 45 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function __strspn_c2

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 10 (set (reg:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 10 6 8 (set (reg:SI 46)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(insn 8 10 12 (set (reg/v:QI 43)
        (subreg:QI (reg:SI 44) 0)) -1 (nil)
    (nil))

(insn 12 8 13 (set (reg/v:QI 45)
        (subreg:QI (reg:SI 46) 0)) -1 (nil)
    (nil))

(note 13 12 16 NOTE_INSN_FUNCTION_BEG 0)

(note 16 13 19 0x40300d80 NOTE_INSN_BLOCK_BEG 0)

(insn 19 16 21 (set (reg/v:SI 47)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(note 21 19 35 NOTE_INSN_LOOP_BEG 0)

(jump_insn 35 21 36 (set (pc)
        (label_ref 22)) -1 (nil)
    (nil))

(barrier 36 35 34)

(code_label 34 36 29 206 "" "" [0 uses])

(code_label 29 34 32 205 "" "" [0 uses])

(insn 32 29 33 (parallel[ 
            (set (reg/v:SI 47)
                (plus:SI (reg/v:SI 47)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(note 33 32 22 NOTE_INSN_LOOP_CONT 0)

(code_label 22 33 23 203 "" "" [0 uses])

(insn 23 22 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 42)
                    (reg/v:SI 47)) 0)
            (reg/v:QI 43))) -1 (nil)
    (nil))

(jump_insn 24 23 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) -1 (nil)
    (nil))

(insn 25 24 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 42)
                    (reg/v:SI 47)) 0)
            (reg/v:QI 45))) -1 (nil)
    (nil))

(jump_insn 26 25 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) -1 (nil)
    (nil))

(jump_insn 27 26 28 (set (pc)
        (label_ref 40)) -1 (nil)
    (nil))

(barrier 28 27 37)

(jump_insn 37 28 38 (set (pc)
        (label_ref 34)) -1 (nil)
    (nil))

(barrier 38 37 39)

(note 39 38 40 NOTE_INSN_LOOP_END 0)

(code_label 40 39 43 204 "" "" [0 uses])

(insn 43 40 44 (set (reg/i:SI 0 eax)
        (reg/v:SI 47)) -1 (nil)
    (nil))

(jump_insn 44 43 45 (set (pc)
        (label_ref 51)) -1 (nil)
    (nil))

(barrier 45 44 47)

(note 47 45 48 0x40300d80 NOTE_INSN_BLOCK_END 0)

(note 48 47 50 NOTE_INSN_FUNCTION_END 0)

(insn 50 48 51 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 51 50 52 202 "" "" [0 uses])

(insn 52 51 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function __strspn_c3

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 10 (set (reg:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 10 6 14 (set (reg:SI 46)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(insn 14 10 8 (set (reg:SI 48)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (nil))

(insn 8 14 12 (set (reg/v:QI 43)
        (subreg:QI (reg:SI 44) 0)) -1 (nil)
    (nil))

(insn 12 8 16 (set (reg/v:QI 45)
        (subreg:QI (reg:SI 46) 0)) -1 (nil)
    (nil))

(insn 16 12 17 (set (reg/v:QI 47)
        (subreg:QI (reg:SI 48) 0)) -1 (nil)
    (nil))

(note 17 16 20 NOTE_INSN_FUNCTION_BEG 0)

(note 20 17 23 0x40304660 NOTE_INSN_BLOCK_BEG 0)

(insn 23 20 25 (set (reg/v:SI 49)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(note 25 23 42 NOTE_INSN_LOOP_BEG 0)

(jump_insn 42 25 43 (set (pc)
        (label_ref 26)) -1 (nil)
    (nil))

(barrier 43 42 41)

(code_label 41 43 36 211 "" "" [0 uses])

(code_label 36 41 39 210 "" "" [0 uses])

(insn 39 36 40 (parallel[ 
            (set (reg/v:SI 49)
                (plus:SI (reg/v:SI 49)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(note 40 39 26 NOTE_INSN_LOOP_CONT 0)

(code_label 26 40 28 208 "" "" [0 uses])

(insn 28 26 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 42)
                    (reg/v:SI 49)) 0)
            (reg/v:QI 43))) -1 (nil)
    (nil))

(jump_insn 29 28 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) -1 (nil)
    (nil))

(insn 30 29 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 42)
                    (reg/v:SI 49)) 0)
            (reg/v:QI 45))) -1 (nil)
    (nil))

(jump_insn 31 30 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) -1 (nil)
    (nil))

(insn 32 31 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 42)
                    (reg/v:SI 49)) 0)
            (reg/v:QI 47))) -1 (nil)
    (nil))

(jump_insn 33 32 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) -1 (nil)
    (nil))

(jump_insn 34 33 35 (set (pc)
        (label_ref 47)) -1 (nil)
    (nil))

(barrier 35 34 44)

(jump_insn 44 35 45 (set (pc)
        (label_ref 41)) -1 (nil)
    (nil))

(barrier 45 44 46)

(note 46 45 47 NOTE_INSN_LOOP_END 0)

(code_label 47 46 50 209 "" "" [0 uses])

(insn 50 47 51 (set (reg/i:SI 0 eax)
        (reg/v:SI 49)) -1 (nil)
    (nil))

(jump_insn 51 50 52 (set (pc)
        (label_ref 58)) -1 (nil)
    (nil))

(barrier 52 51 54)

(note 54 52 55 0x40304660 NOTE_INSN_BLOCK_END 0)

(note 55 54 57 NOTE_INSN_FUNCTION_END 0)

(insn 57 55 58 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 58 57 59 207 "" "" [0 uses])

(insn 59 58 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function __strpbrk_c2

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 8 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(insn 8 6 9 (set (reg/v:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)
        (nil)))

(note 9 8 14 NOTE_INSN_FUNCTION_BEG 0)

(note 14 9 35 NOTE_INSN_LOOP_BEG 0)

(jump_insn 35 14 36 (set (pc)
        (label_ref 15)) -1 (nil)
    (nil))

(barrier 36 35 34)

(code_label 34 36 29 217 "" "" [0 uses])

(code_label 29 34 32 215 "" "" [0 uses])

(insn 32 29 33 (parallel[ 
            (set (reg/v:SI 42)
                (plus:SI (reg/v:SI 42)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(note 33 32 15 NOTE_INSN_LOOP_CONT 0)

(code_label 15 33 16 213 "" "" [0 uses])

(insn 16 15 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 42) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 17 16 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) -1 (nil)
    (nil))

(insn 18 17 19 (set (reg:SI 45)
        (sign_extend:SI (mem:QI (reg/v:SI 42) 0))) -1 (nil)
    (nil))

(insn 19 18 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 45)
            (reg/v:SI 43))) -1 (nil)
    (nil))

(jump_insn 20 19 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) -1 (nil)
    (nil))

(insn 21 20 22 (set (reg:SI 46)
        (sign_extend:SI (mem:QI (reg/v:SI 42) 0))) -1 (nil)
    (nil))

(insn 22 21 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 46)
            (reg/v:SI 44))) -1 (nil)
    (nil))

(jump_insn 23 22 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) -1 (nil)
    (nil))

(jump_insn 24 23 25 (set (pc)
        (label_ref 26)) -1 (nil)
    (nil))

(barrier 25 24 26)

(code_label 26 25 27 216 "" "" [0 uses])

(jump_insn 27 26 28 (set (pc)
        (label_ref 40)) -1 (nil)
    (nil))

(barrier 28 27 37)

(jump_insn 37 28 38 (set (pc)
        (label_ref 34)) -1 (nil)
    (nil))

(barrier 38 37 39)

(note 39 38 40 NOTE_INSN_LOOP_END 0)

(code_label 40 39 42 214 "" "" [0 uses])

(insn 42 40 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 42) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 43 42 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) -1 (nil)
    (nil))

(insn 45 43 46 (set (reg:SI 47)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(jump_insn 46 45 47 (set (pc)
        (label_ref 51)) -1 (nil)
    (nil))

(barrier 47 46 48)

(code_label 48 47 50 218 "" "" [0 uses])

(insn 50 48 51 (set (reg:SI 47)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(code_label 51 50 53 219 "" "" [0 uses])

(insn 53 51 54 (set (reg/i:SI 0 eax)
        (reg:SI 47)) -1 (nil)
    (nil))

(jump_insn 54 53 55 (set (pc)
        (label_ref 60)) -1 (nil)
    (nil))

(barrier 55 54 57)

(note 57 55 59 NOTE_INSN_FUNCTION_END 0)

(insn 59 57 60 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 60 59 61 212 "" "" [0 uses])

(insn 61 60 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function __strpbrk_c3

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 8 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(insn 8 6 10 (set (reg/v:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)
        (nil)))

(insn 10 8 11 (set (reg/v:SI 45)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)
        (nil)))

(note 11 10 16 NOTE_INSN_FUNCTION_BEG 0)

(note 16 11 41 NOTE_INSN_LOOP_BEG 0)

(jump_insn 41 16 42 (set (pc)
        (label_ref 17)) -1 (nil)
    (nil))

(barrier 42 41 40)

(code_label 40 42 35 225 "" "" [0 uses])

(code_label 35 40 38 223 "" "" [0 uses])

(insn 38 35 39 (parallel[ 
            (set (reg/v:SI 42)
                (plus:SI (reg/v:SI 42)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(note 39 38 17 NOTE_INSN_LOOP_CONT 0)

(code_label 17 39 19 221 "" "" [0 uses])

(insn 19 17 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 42) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 20 19 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) -1 (nil)
    (nil))

(insn 21 20 22 (set (reg:SI 46)
        (sign_extend:SI (mem:QI (reg/v:SI 42) 0))) -1 (nil)
    (nil))

(insn 22 21 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 46)
            (reg/v:SI 43))) -1 (nil)
    (nil))

(jump_insn 23 22 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) -1 (nil)
    (nil))

(insn 24 23 25 (set (reg:SI 47)
        (sign_extend:SI (mem:QI (reg/v:SI 42) 0))) -1 (nil)
    (nil))

(insn 25 24 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 47)
            (reg/v:SI 44))) -1 (nil)
    (nil))

(jump_insn 26 25 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) -1 (nil)
    (nil))

(insn 27 26 28 (set (reg:SI 48)
        (sign_extend:SI (mem:QI (reg/v:SI 42) 0))) -1 (nil)
    (nil))

(insn 28 27 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 48)
            (reg/v:SI 45))) -1 (nil)
    (nil))

(jump_insn 29 28 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) -1 (nil)
    (nil))

(jump_insn 30 29 31 (set (pc)
        (label_ref 32)) -1 (nil)
    (nil))

(barrier 31 30 32)

(code_label 32 31 33 224 "" "" [0 uses])

(jump_insn 33 32 34 (set (pc)
        (label_ref 46)) -1 (nil)
    (nil))

(barrier 34 33 43)

(jump_insn 43 34 44 (set (pc)
        (label_ref 40)) -1 (nil)
    (nil))

(barrier 44 43 45)

(note 45 44 46 NOTE_INSN_LOOP_END 0)

(code_label 46 45 48 222 "" "" [0 uses])

(insn 48 46 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 42) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 49 48 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) -1 (nil)
    (nil))

(insn 51 49 52 (set (reg:SI 49)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(jump_insn 52 51 53 (set (pc)
        (label_ref 57)) -1 (nil)
    (nil))

(barrier 53 52 54)

(code_label 54 53 56 226 "" "" [0 uses])

(insn 56 54 57 (set (reg:SI 49)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(code_label 57 56 59 227 "" "" [0 uses])

(insn 59 57 60 (set (reg/i:SI 0 eax)
        (reg:SI 49)) -1 (nil)
    (nil))

(jump_insn 60 59 61 (set (pc)
        (label_ref 66)) -1 (nil)
    (nil))

(barrier 61 60 63)

(note 63 61 65 NOTE_INSN_FUNCTION_END 0)

(insn 65 63 66 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 66 65 67 220 "" "" [0 uses])

(insn 67 66 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function __strtok_r_1c

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 10 (set (reg:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 10 6 8 (set (reg/v:SI 45)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)
        (nil)))

(insn 8 10 11 (set (reg/v:QI 43)
        (subreg:QI (reg:SI 44) 0)) -1 (nil)
    (nil))

(note 11 8 14 NOTE_INSN_FUNCTION_BEG 0)

(note 14 11 17 0x4030d880 NOTE_INSN_BLOCK_BEG 0)

(insn 17 14 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 42)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 18 17 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) -1 (nil)
    (nil))

(insn 21 18 22 (set (reg/v:SI 42)
        (mem:SI (reg/v:SI 45) 0)) -1 (nil)
    (nil))

(code_label 22 21 24 229 "" "" [0 uses])

(note 24 22 36 NOTE_INSN_LOOP_BEG 0)

(jump_insn 36 24 37 (set (pc)
        (label_ref 25)) -1 (nil)
    (nil))

(barrier 37 36 35)

(code_label 35 37 30 233 "" "" [0 uses])

(code_label 30 35 33 232 "" "" [0 uses])

(insn 33 30 34 (parallel[ 
            (set (reg/v:SI 42)
                (plus:SI (reg/v:SI 42)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(note 34 33 25 NOTE_INSN_LOOP_CONT 0)

(code_label 25 34 26 230 "" "" [0 uses])

(insn 26 25 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 42) 0)
            (reg/v:QI 43))) -1 (nil)
    (nil))

(jump_insn 27 26 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) -1 (nil)
    (nil))

(jump_insn 28 27 29 (set (pc)
        (label_ref 41)) -1 (nil)
    (nil))

(barrier 29 28 38)

(jump_insn 38 29 39 (set (pc)
        (label_ref 35)) -1 (nil)
    (nil))

(barrier 39 38 40)

(note 40 39 41 NOTE_INSN_LOOP_END 0)

(code_label 41 40 43 231 "" "" [0 uses])

(insn 43 41 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 42) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 44 43 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) -1 (nil)
    (nil))

(insn 47 44 48 (set (reg/v:SI 46)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(jump_insn 48 47 49 (set (pc)
        (label_ref 102)) -1 (nil)
    (nil))

(barrier 49 48 50)

(code_label 50 49 55 234 "" "" [0 uses])

(insn 55 50 57 (set (reg/v:SI 46)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(note 57 55 74 NOTE_INSN_LOOP_BEG 0)

(jump_insn 74 57 75 (set (pc)
        (label_ref 58)) -1 (nil)
    (nil))

(barrier 75 74 73)

(code_label 73 75 68 240 "" "" [0 uses])

(code_label 68 73 71 238 "" "" [0 uses])

(insn 71 68 72 (parallel[ 
            (set (reg/v:SI 42)
                (plus:SI (reg/v:SI 42)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(note 72 71 58 NOTE_INSN_LOOP_CONT 0)

(code_label 58 72 59 236 "" "" [0 uses])

(insn 59 58 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 42) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 60 59 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) -1 (nil)
    (nil))

(insn 61 60 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 42) 0)
            (reg/v:QI 43))) -1 (nil)
    (nil))

(jump_insn 62 61 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 68)
            (pc))) -1 (nil)
    (nil))

(jump_insn 63 62 64 (set (pc)
        (label_ref 65)) -1 (nil)
    (nil))

(barrier 64 63 65)

(code_label 65 64 66 239 "" "" [0 uses])

(jump_insn 66 65 67 (set (pc)
        (label_ref 79)) -1 (nil)
    (nil))

(barrier 67 66 76)

(jump_insn 76 67 77 (set (pc)
        (label_ref 73)) -1 (nil)
    (nil))

(barrier 77 76 78)

(note 78 77 79 NOTE_INSN_LOOP_END 0)

(code_label 79 78 81 237 "" "" [0 uses])

(insn 81 79 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 42) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 82 81 85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) -1 (nil)
    (nil))

(insn 85 82 86 (set (mem:SI (reg/v:SI 45) 0)
        (reg/v:SI 42)) -1 (nil)
    (nil))

(jump_insn 86 85 87 (set (pc)
        (label_ref 100)) -1 (nil)
    (nil))

(barrier 87 86 88)

(code_label 88 87 93 241 "" "" [0 uses])

(insn 93 88 96 (set (mem:QI (reg/v:SI 42) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 96 93 98 (parallel[ 
            (set (reg:SI 47)
                (plus:SI (reg/v:SI 42)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 98 96 100 (set (mem:SI (reg/v:SI 45) 0)
        (reg:SI 47)) -1 (nil)
    (nil))

(code_label 100 98 102 242 "" "" [0 uses])

(code_label 102 100 105 235 "" "" [0 uses])

(insn 105 102 106 (set (reg/i:SI 0 eax)
        (reg/v:SI 46)) -1 (nil)
    (nil))

(jump_insn 106 105 107 (set (pc)
        (label_ref 113)) -1 (nil)
    (nil))

(barrier 107 106 109)

(note 109 107 110 0x4030d880 NOTE_INSN_BLOCK_END 0)

(note 110 109 112 NOTE_INSN_FUNCTION_END 0)

(insn 112 110 113 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 113 112 114 228 "" "" [0 uses])

(insn 114 113 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function __strsep_1c

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 8 (set (reg:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 8 6 9 (set (reg/v:QI 43)
        (subreg:QI (reg:SI 44) 0)) -1 (nil)
    (nil))

(note 9 8 12 NOTE_INSN_FUNCTION_BEG 0)

(note 12 9 15 0x40311a80 NOTE_INSN_BLOCK_BEG 0)

(insn 15 12 17 (set (reg/v:SI 45)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 17 15 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 45)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 18 17 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) -1 (nil)
    (nil))

(insn 21 18 23 (set (mem:SI (reg/v:SI 42) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 23 21 24 (set (reg/i:SI 0 eax)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(jump_insn 24 23 25 (set (pc)
        (label_ref 115)) -1 (nil)
    (nil))

(barrier 25 24 26)

(code_label 26 25 28 244 "" "" [0 uses])

(insn 28 26 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 45) 0)
            (reg/v:QI 43))) -1 (nil)
    (nil))

(jump_insn 29 28 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) -1 (nil)
    (nil))

(insn 37 29 39 (set (reg:SI 49)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 39 37 32 (set (mem:QI (reg:SI 49) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 32 39 33 (set (reg:SI 48)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 33 32 35 (parallel[ 
            (set (reg:SI 47)
                (plus:SI (reg:SI 48)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 35 33 40 (set (mem:SI (reg/v:SI 42) 0)
        (reg:SI 47)) -1 (nil)
    (nil))

(jump_insn 40 35 41 (set (pc)
        (label_ref 104)) -1 (nil)
    (nil))

(barrier 41 40 42)

(code_label 42 41 44 245 "" "" [0 uses])

(insn 44 42 46 (set (reg:SI 51)
        (sign_extend:SI (reg/v:QI 43))) -1 (nil)
    (nil))

(insn 46 44 47 (set (reg:SI 52)
        (constant_p_rtx:SI (reg:SI 51))) -1 (nil)
    (expr_list:REG_EQUAL (constant_p_rtx:SI (reg:SI 51))
        (nil)))

(insn 47 46 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 52)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 48 47 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) -1 (nil)
    (nil))

(insn 49 48 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 43)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 50 49 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) -1 (nil)
    (nil))

(insn 52 50 53 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 53 52 55 (set (reg:SI 53)
        (sign_extend:SI (reg/v:QI 43))) -1 (nil)
    (nil))

(insn 55 53 57 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:SI 53)) -1 (nil)
    (nil))

(insn 57 55 58 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 45)) -1 (nil)
    (nil))

(call_insn 58 57 60 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__rawmemchr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 60 58 62 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 62 60 63 (set (reg:SI 50)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(jump_insn 63 62 64 (set (pc)
        (label_ref 80)) -1 (nil)
    (nil))

(barrier 64 63 65)

(code_label 65 64 66 248 "" "" [0 uses])

(insn 66 65 68 (set (reg:SI 54)
        (sign_extend:SI (reg/v:QI 43))) -1 (nil)
    (nil))

(insn 68 66 70 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (insn_list:REG_LIBCALL 77 (nil)))

(insn 70 68 72 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:SI 54)) -1 (nil)
    (nil))

(insn 72 70 73 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 45)) -1 (nil)
    (nil))

(call_insn/u 73 72 75 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("strchr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int -1 [0xffffffff])
        (nil))
    (expr_list (use (mem:BLK (scratch) 0))
        (nil)))

(insn 75 73 77 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 77 75 79 (set (reg:SI 55)
        (reg:SI 0 eax)) -1 (nil)
    (insn_list:REG_RETVAL 68 (expr_list:REG_EQUAL (expr_list (use (mem:BLK (scratch) 0))
                (expr_list (symbol_ref:SI ("strchr"))
                    (expr_list (reg/v:SI 45)
                        (expr_list (reg:SI 54)
                            (nil)))))
            (nil))))

(insn 79 77 80 (set (reg:SI 50)
        (reg:SI 55)) -1 (nil)
    (nil))

(code_label 80 79 82 249 "" "" [0 uses])

(insn 82 80 84 (set (reg:SI 56)
        (reg:SI 50)) -1 (nil)
    (nil))

(insn 84 82 85 (set (mem:SI (reg/v:SI 42) 0)
        (reg:SI 56)) -1 (nil)
    (nil))

(insn 85 84 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 56)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 86 85 94 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) -1 (nil)
    (nil))

(insn 94 86 96 (set (reg:SI 59)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 96 94 89 (set (mem:QI (reg:SI 59) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 89 96 90 (set (reg:SI 58)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 90 89 92 (parallel[ 
            (set (reg:SI 57)
                (plus:SI (reg:SI 58)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 92 90 97 (set (mem:SI (reg/v:SI 42) 0)
        (reg:SI 57)) -1 (nil)
    (nil))

(jump_insn 97 92 98 (set (pc)
        (label_ref 103)) -1 (nil)
    (nil))

(barrier 98 97 99)

(code_label 99 98 102 247 "" "" [0 uses])

(insn 102 99 103 (set (mem:SI (reg/v:SI 42) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(code_label 103 102 104 250 "" "" [0 uses])

(code_label 104 103 107 246 "" "" [0 uses])

(insn 107 104 108 (set (reg/i:SI 0 eax)
        (reg/v:SI 45)) -1 (nil)
    (nil))

(jump_insn 108 107 109 (set (pc)
        (label_ref 115)) -1 (nil)
    (nil))

(barrier 109 108 111)

(note 111 109 112 0x40311a80 NOTE_INSN_BLOCK_END 0)

(note 112 111 114 NOTE_INSN_FUNCTION_END 0)

(insn 114 112 115 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 115 114 116 243 "" "" [0 uses])

(insn 116 115 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function __strsep_2c

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 10 (set (reg:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 10 6 8 (set (reg:SI 46)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(insn 8 10 12 (set (reg/v:QI 43)
        (subreg:QI (reg:SI 44) 0)) -1 (nil)
    (nil))

(insn 12 8 13 (set (reg/v:QI 45)
        (subreg:QI (reg:SI 46) 0)) -1 (nil)
    (nil))

(note 13 12 16 NOTE_INSN_FUNCTION_BEG 0)

(note 16 13 19 0x40315f20 NOTE_INSN_BLOCK_BEG 0)

(insn 19 16 21 (set (reg/v:SI 47)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 21 19 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 47)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 22 21 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) -1 (nil)
    (nil))

(insn 25 22 27 (set (mem:SI (reg/v:SI 42) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 27 25 28 (set (reg/i:SI 0 eax)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(jump_insn 28 27 29 (set (pc)
        (label_ref 122)) -1 (nil)
    (nil))

(barrier 29 28 30)

(code_label 30 29 32 252 "" "" [0 uses])

(insn 32 30 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 47) 0)
            (reg/v:QI 43))) -1 (nil)
    (nil))

(jump_insn 33 32 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) -1 (nil)
    (nil))

(insn 34 33 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 47) 0)
            (reg/v:QI 45))) -1 (nil)
    (nil))

(jump_insn 35 34 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) -1 (nil)
    (nil))

(jump_insn 36 35 37 (set (pc)
        (label_ref 51)) -1 (nil)
    (nil))

(barrier 37 36 38)

(code_label 38 37 46 254 "" "" [0 uses])

(insn 46 38 48 (set (reg:SI 51)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 48 46 41 (set (mem:QI (reg:SI 51) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 41 48 42 (set (reg:SI 50)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 42 41 44 (parallel[ 
            (set (reg:SI 49)
                (plus:SI (reg:SI 50)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 44 42 49 (set (mem:SI (reg/v:SI 42) 0)
        (reg:SI 49)) -1 (nil)
    (nil))

(jump_insn 49 44 50 (set (pc)
        (label_ref 111)) -1 (nil)
    (nil))

(barrier 50 49 51)

(code_label 51 50 53 253 "" "" [0 uses])

(note 53 51 56 0x40315e40 NOTE_INSN_BLOCK_BEG 0)

(insn 56 53 58 (set (reg/v:SI 52)
        (reg/v:SI 47)) -1 (nil)
    (nil))

(note 58 56 77 NOTE_INSN_LOOP_BEG 0)

(jump_insn 77 58 78 (set (pc)
        (label_ref 59)) -1 (nil)
    (nil))

(barrier 78 77 76)

(code_label 76 78 71 260 "" "" [0 uses])

(code_label 71 76 74 258 "" "" [0 uses])

(insn 74 71 75 (parallel[ 
            (set (reg/v:SI 52)
                (plus:SI (reg/v:SI 52)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(note 75 74 59 NOTE_INSN_LOOP_CONT 0)

(code_label 59 75 60 256 "" "" [0 uses])

(insn 60 59 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 52) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 61 60 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 68)
            (pc))) -1 (nil)
    (nil))

(insn 62 61 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 52) 0)
            (reg/v:QI 43))) -1 (nil)
    (nil))

(jump_insn 63 62 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 68)
            (pc))) -1 (nil)
    (nil))

(insn 64 63 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 52) 0)
            (reg/v:QI 45))) -1 (nil)
    (nil))

(jump_insn 65 64 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) -1 (nil)
    (nil))

(jump_insn 66 65 67 (set (pc)
        (label_ref 68)) -1 (nil)
    (nil))

(barrier 67 66 68)

(code_label 68 67 69 259 "" "" [0 uses])

(jump_insn 69 68 70 (set (pc)
        (label_ref 82)) -1 (nil)
    (nil))

(barrier 70 69 79)

(jump_insn 79 70 80 (set (pc)
        (label_ref 76)) -1 (nil)
    (nil))

(barrier 80 79 81)

(note 81 80 82 NOTE_INSN_LOOP_END 0)

(code_label 82 81 84 257 "" "" [0 uses])

(insn 84 82 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 52) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 85 84 90 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 104)
            (pc))) -1 (nil)
    (nil))

(insn 90 85 98 (set (mem:SI (reg/v:SI 42) 0)
        (reg/v:SI 52)) -1 (nil)
    (nil))

(insn 98 90 100 (set (reg:SI 55)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 100 98 93 (set (mem:QI (reg:SI 55) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 93 100 94 (set (reg:SI 54)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 94 93 96 (parallel[ 
            (set (reg:SI 53)
                (plus:SI (reg:SI 54)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 96 94 102 (set (mem:SI (reg/v:SI 42) 0)
        (reg:SI 53)) -1 (nil)
    (nil))

(jump_insn 102 96 103 (set (pc)
        (label_ref 108)) -1 (nil)
    (nil))

(barrier 103 102 104)

(code_label 104 103 107 261 "" "" [0 uses])

(insn 107 104 108 (set (mem:SI (reg/v:SI 42) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(code_label 108 107 110 262 "" "" [0 uses])

(note 110 108 111 0x40315e40 NOTE_INSN_BLOCK_END 0)

(code_label 111 110 114 255 "" "" [0 uses])

(insn 114 111 115 (set (reg/i:SI 0 eax)
        (reg/v:SI 47)) -1 (nil)
    (nil))

(jump_insn 115 114 116 (set (pc)
        (label_ref 122)) -1 (nil)
    (nil))

(barrier 116 115 118)

(note 118 116 119 0x40315f20 NOTE_INSN_BLOCK_END 0)

(note 119 118 121 NOTE_INSN_FUNCTION_END 0)

(insn 121 119 122 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 122 121 123 251 "" "" [0 uses])

(insn 123 122 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function __strsep_3c

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 10 (set (reg:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(insn 10 6 14 (set (reg:SI 46)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(insn 14 10 8 (set (reg:SI 48)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (nil))

(insn 8 14 12 (set (reg/v:QI 43)
        (subreg:QI (reg:SI 44) 0)) -1 (nil)
    (nil))

(insn 12 8 16 (set (reg/v:QI 45)
        (subreg:QI (reg:SI 46) 0)) -1 (nil)
    (nil))

(insn 16 12 17 (set (reg/v:QI 47)
        (subreg:QI (reg:SI 48) 0)) -1 (nil)
    (nil))

(note 17 16 20 NOTE_INSN_FUNCTION_BEG 0)

(note 20 17 23 0x403199a0 NOTE_INSN_BLOCK_BEG 0)

(insn 23 20 25 (set (reg/v:SI 49)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 25 23 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 49)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 26 25 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) -1 (nil)
    (nil))

(insn 29 26 31 (set (mem:SI (reg/v:SI 42) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 31 29 32 (set (reg/i:SI 0 eax)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(jump_insn 32 31 33 (set (pc)
        (label_ref 131)) -1 (nil)
    (nil))

(barrier 33 32 34)

(code_label 34 33 36 264 "" "" [0 uses])

(insn 36 34 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 49) 0)
            (reg/v:QI 43))) -1 (nil)
    (nil))

(jump_insn 37 36 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) -1 (nil)
    (nil))

(insn 38 37 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 49) 0)
            (reg/v:QI 45))) -1 (nil)
    (nil))

(jump_insn 39 38 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) -1 (nil)
    (nil))

(insn 40 39 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 49) 0)
            (reg/v:QI 47))) -1 (nil)
    (nil))

(jump_insn 41 40 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) -1 (nil)
    (nil))

(jump_insn 42 41 43 (set (pc)
        (label_ref 57)) -1 (nil)
    (nil))

(barrier 43 42 44)

(code_label 44 43 52 266 "" "" [0 uses])

(insn 52 44 54 (set (reg:SI 53)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 54 52 47 (set (mem:QI (reg:SI 53) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 47 54 48 (set (reg:SI 52)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 48 47 50 (parallel[ 
            (set (reg:SI 51)
                (plus:SI (reg:SI 52)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 50 48 55 (set (mem:SI (reg/v:SI 42) 0)
        (reg:SI 51)) -1 (nil)
    (nil))

(jump_insn 55 50 56 (set (pc)
        (label_ref 120)) -1 (nil)
    (nil))

(barrier 56 55 57)

(code_label 57 56 59 265 "" "" [0 uses])

(note 59 57 62 0x403198c0 NOTE_INSN_BLOCK_BEG 0)

(insn 62 59 64 (set (reg/v:SI 54)
        (reg/v:SI 49)) -1 (nil)
    (nil))

(note 64 62 86 NOTE_INSN_LOOP_BEG 0)

(jump_insn 86 64 87 (set (pc)
        (label_ref 65)) -1 (nil)
    (nil))

(barrier 87 86 85)

(code_label 85 87 80 272 "" "" [0 uses])

(code_label 80 85 83 270 "" "" [0 uses])

(insn 83 80 84 (parallel[ 
            (set (reg/v:SI 54)
                (plus:SI (reg/v:SI 54)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(note 84 83 65 NOTE_INSN_LOOP_CONT 0)

(code_label 65 84 67 268 "" "" [0 uses])

(insn 67 65 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 54) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 68 67 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 77)
            (pc))) -1 (nil)
    (nil))

(insn 69 68 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 54) 0)
            (reg/v:QI 43))) -1 (nil)
    (nil))

(jump_insn 70 69 71 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 77)
            (pc))) -1 (nil)
    (nil))

(insn 71 70 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 54) 0)
            (reg/v:QI 45))) -1 (nil)
    (nil))

(jump_insn 72 71 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 77)
            (pc))) -1 (nil)
    (nil))

(insn 73 72 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 54) 0)
            (reg/v:QI 47))) -1 (nil)
    (nil))

(jump_insn 74 73 75 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) -1 (nil)
    (nil))

(jump_insn 75 74 76 (set (pc)
        (label_ref 77)) -1 (nil)
    (nil))

(barrier 76 75 77)

(code_label 77 76 78 271 "" "" [0 uses])

(jump_insn 78 77 79 (set (pc)
        (label_ref 91)) -1 (nil)
    (nil))

(barrier 79 78 88)

(jump_insn 88 79 89 (set (pc)
        (label_ref 85)) -1 (nil)
    (nil))

(barrier 89 88 90)

(note 90 89 91 NOTE_INSN_LOOP_END 0)

(code_label 91 90 93 269 "" "" [0 uses])

(insn 93 91 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 54) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 94 93 99 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 113)
            (pc))) -1 (nil)
    (nil))

(insn 99 94 107 (set (mem:SI (reg/v:SI 42) 0)
        (reg/v:SI 54)) -1 (nil)
    (nil))

(insn 107 99 109 (set (reg:SI 57)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 109 107 102 (set (mem:QI (reg:SI 57) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 102 109 103 (set (reg:SI 56)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 103 102 105 (parallel[ 
            (set (reg:SI 55)
                (plus:SI (reg:SI 56)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 105 103 111 (set (mem:SI (reg/v:SI 42) 0)
        (reg:SI 55)) -1 (nil)
    (nil))

(jump_insn 111 105 112 (set (pc)
        (label_ref 117)) -1 (nil)
    (nil))

(barrier 112 111 113)

(code_label 113 112 116 273 "" "" [0 uses])

(insn 116 113 117 (set (mem:SI (reg/v:SI 42) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(code_label 117 116 119 274 "" "" [0 uses])

(note 119 117 120 0x403198c0 NOTE_INSN_BLOCK_END 0)

(code_label 120 119 123 267 "" "" [0 uses])

(insn 123 120 124 (set (reg/i:SI 0 eax)
        (reg/v:SI 49)) -1 (nil)
    (nil))

(jump_insn 124 123 125 (set (pc)
        (label_ref 131)) -1 (nil)
    (nil))

(barrier 125 124 127)

(note 127 125 128 0x403199a0 NOTE_INSN_BLOCK_END 0)

(note 128 127 130 NOTE_INSN_FUNCTION_END 0)

(insn 130 128 131 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 131 130 132 263 "" "" [0 uses])

(insn 132 131 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function __strsep_g

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 7 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 13 0x40322c60 NOTE_INSN_BLOCK_BEG 0)

(insn 13 10 15 (set (reg/v:SI 44)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 15 13 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 44)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 16 15 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) -1 (nil)
    (nil))

(insn 19 16 20 (set (reg/i:SI 0 eax)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(jump_insn 20 19 21 (set (pc)
        (label_ref 265)) -1 (nil)
    (nil))

(barrier 21 20 22)

(code_label 22 21 24 276 "" "" [0 uses])

(note 24 22 26 0x40322680 NOTE_INSN_BLOCK_BEG 0)

(jump_insn 26 24 27 (set (pc)
        (label_ref 220)) -1 (nil)
    (nil))

(barrier 27 26 29)

(insn 29 27 30 (set (reg/v:QI 46)
        (mem:QI (reg/v:SI 43) 0)) -1 (nil)
    (nil))

(insn 30 29 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 46)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 31 30 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 214)
            (pc))) -1 (nil)
    (nil))

(insn 33 31 34 (set (reg/v:QI 47)
        (mem:QI (plus:SI (reg/v:SI 43)
                (const_int 1 [0x1])) 0)) -1 (nil)
    (nil))

(insn 34 33 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 47)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 35 34 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) -1 (nil)
    (nil))

(insn 36 35 38 (set (reg:SI 50)
        (sign_extend:SI (reg/v:QI 46))) -1 (nil)
    (nil))

(insn 38 36 39 (set (reg:SI 51)
        (constant_p_rtx:SI (reg:SI 50))) -1 (nil)
    (expr_list:REG_EQUAL (constant_p_rtx:SI (reg:SI 50))
        (nil)))

(insn 39 38 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 51)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 40 39 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) -1 (nil)
    (nil))

(insn 41 40 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 46)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 42 41 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) -1 (nil)
    (nil))

(insn 44 42 45 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 45 44 47 (set (reg:SI 52)
        (sign_extend:SI (reg/v:QI 46))) -1 (nil)
    (nil))

(insn 47 45 49 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:SI 52)) -1 (nil)
    (nil))

(insn 49 47 50 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 44)) -1 (nil)
    (nil))

(call_insn 50 49 52 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("__rawmemchr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 52 50 54 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 54 52 55 (set (reg:SI 49)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(jump_insn 55 54 56 (set (pc)
        (label_ref 72)) -1 (nil)
    (nil))

(barrier 56 55 57)

(code_label 57 56 58 283 "" "" [0 uses])

(insn 58 57 60 (set (reg:SI 53)
        (sign_extend:SI (reg/v:QI 46))) -1 (nil)
    (nil))

(insn 60 58 62 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (insn_list:REG_LIBCALL 69 (nil)))

(insn 62 60 64 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:SI 53)) -1 (nil)
    (nil))

(insn 64 62 65 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 44)) -1 (nil)
    (nil))

(call_insn/u 65 64 67 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("strchr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int -1 [0xffffffff])
        (nil))
    (expr_list (use (mem:BLK (scratch) 0))
        (nil)))

(insn 67 65 69 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 69 67 71 (set (reg:SI 54)
        (reg:SI 0 eax)) -1 (nil)
    (insn_list:REG_RETVAL 60 (expr_list:REG_EQUAL (expr_list (use (mem:BLK (scratch) 0))
                (expr_list (symbol_ref:SI ("strchr"))
                    (expr_list (reg/v:SI 44)
                        (expr_list (reg:SI 53)
                            (nil)))))
            (nil))))

(insn 71 69 72 (set (reg:SI 49)
        (reg:SI 54)) -1 (nil)
    (nil))

(code_label 72 71 73 284 "" "" [0 uses])

(jump_insn 73 72 74 (set (pc)
        (label_ref 211)) -1 (nil)
    (nil))

(barrier 74 73 75)

(code_label 75 74 77 281 "" "" [0 uses])

(insn 77 75 78 (set (reg/v:QI 48)
        (mem:QI (plus:SI (reg/v:SI 43)
                (const_int 2 [0x2])) 0)) -1 (nil)
    (nil))

(insn 78 77 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 48)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 79 78 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 133)
            (pc))) -1 (nil)
    (nil))

(insn 81 79 82 (set (reg:SI 55)
        (reg/v:SI 44)) -1 (nil)
    (nil))

(insn 82 81 83 (set (reg:SI 56)
        (sign_extend:SI (reg/v:QI 46))) -1 (nil)
    (nil))

(insn 83 82 85 (set (reg:SI 57)
        (sign_extend:SI (reg/v:QI 47))) -1 (nil)
    (nil))

(insn 85 83 87 (set (reg/v:SI 58)
        (reg:SI 55)) -1 (nil)
    (nil))

(insn 87 85 89 (set (reg/v:SI 59)
        (reg:SI 56)) -1 (nil)
    (nil))

(insn 89 87 90 (set (reg/v:SI 60)
        (reg:SI 57)) -1 (nil)
    (nil))

(note 90 89 92 0x4031fca0 NOTE_INSN_BLOCK_BEG 0)

(note/i 92 90 93 NOTE_INSN_LOOP_BEG 0)

(jump_insn/i 93 92 94 (set (pc)
        (label_ref 99)) -1 (nil)
    (nil))

(barrier/i 94 93 95)

(code_label/i 95 94 96 288 "" "" [0 uses])

(code_label/i 96 95 97 289 "" "" [0 uses])

(insn/i 97 96 98 (parallel[ 
            (set (reg/v:SI 58)
                (plus:SI (reg/v:SI 58)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(note/i 98 97 99 NOTE_INSN_LOOP_CONT 0)

(code_label/i 99 98 100 287 "" "" [0 uses])

(insn/i 100 99 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 58) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn/i 101 100 102 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) -1 (nil)
    (nil))

(insn/i 102 101 103 (set (reg:SI 61)
        (sign_extend:SI (mem:QI (reg/v:SI 58) 0))) -1 (nil)
    (nil))

(insn/i 103 102 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61)
            (reg/v:SI 59))) -1 (nil)
    (nil))

(jump_insn/i 104 103 105 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) -1 (nil)
    (nil))

(insn/i 105 104 106 (set (reg:SI 62)
        (sign_extend:SI (mem:QI (reg/v:SI 58) 0))) -1 (nil)
    (nil))

(insn/i 106 105 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 62)
            (reg/v:SI 60))) -1 (nil)
    (nil))

(jump_insn/i 107 106 108 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 96)
            (pc))) -1 (nil)
    (nil))

(jump_insn/i 108 107 109 (set (pc)
        (label_ref 110)) -1 (nil)
    (nil))

(barrier/i 109 108 110)

(code_label/i 110 109 111 290 "" "" [0 uses])

(jump_insn/i 111 110 112 (set (pc)
        (label_ref 116)) -1 (nil)
    (nil))

(barrier/i 112 111 113)

(jump_insn/i 113 112 114 (set (pc)
        (label_ref 95)) -1 (nil)
    (nil))

(barrier/i 114 113 115)

(note/i 115 114 116 NOTE_INSN_LOOP_END 0)

(code_label/i 116 115 117 291 "" "" [0 uses])

(insn/i 117 116 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 58) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn/i 118 117 119 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) -1 (nil)
    (nil))

(insn/i 119 118 120 (set (reg:SI 63)
        (reg/v:SI 58)) -1 (nil)
    (nil))

(jump_insn/i 120 119 121 (set (pc)
        (label_ref 124)) -1 (nil)
    (nil))

(barrier/i 121 120 122)

(code_label/i 122 121 123 292 "" "" [0 uses])

(insn/i 123 122 124 (set (reg:SI 63)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(code_label/i 124 123 125 293 "" "" [0 uses])

(insn/i 125 124 126 (set (reg:SI 49)
        (reg:SI 63)) -1 (nil)
    (nil))

(jump_insn/i 126 125 127 (set (pc)
        (label_ref 129)) -1 (nil)
    (nil))

(barrier/i 127 126 128)

(insn/i 128 127 129 (clobber (reg:SI 49)) -1 (nil)
    (nil))

(code_label/i 129 128 130 294 "" "" [0 uses])

(note 130 129 131 0x4031fca0 NOTE_INSN_BLOCK_END 0)

(jump_insn 131 130 132 (set (pc)
        (label_ref 210)) -1 (nil)
    (nil))

(barrier 132 131 133)

(code_label 133 132 134 285 "" "" [0 uses])

(insn 134 133 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:SI (reg/v:SI 43)
                    (const_int 3 [0x3])) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 135 134 137 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 195)
            (pc))) -1 (nil)
    (nil))

(insn 137 135 138 (set (reg:SI 64)
        (reg/v:SI 44)) -1 (nil)
    (nil))

(insn 138 137 139 (set (reg:SI 65)
        (sign_extend:SI (reg/v:QI 46))) -1 (nil)
    (nil))

(insn 139 138 140 (set (reg:SI 66)
        (sign_extend:SI (reg/v:QI 47))) -1 (nil)
    (nil))

(insn 140 139 142 (set (reg:SI 67)
        (sign_extend:SI (reg/v:QI 48))) -1 (nil)
    (nil))

(insn 142 140 144 (set (reg/v:SI 68)
        (reg:SI 64)) -1 (nil)
    (nil))

(insn 144 142 146 (set (reg/v:SI 69)
        (reg:SI 65)) -1 (nil)
    (nil))

(insn 146 144 148 (set (reg/v:SI 70)
        (reg:SI 66)) -1 (nil)
    (nil))

(insn 148 146 149 (set (reg/v:SI 71)
        (reg:SI 67)) -1 (nil)
    (nil))

(note 149 148 151 0x403220a0 NOTE_INSN_BLOCK_BEG 0)

(note/i 151 149 152 NOTE_INSN_LOOP_BEG 0)

(jump_insn/i 152 151 153 (set (pc)
        (label_ref 158)) -1 (nil)
    (nil))

(barrier/i 153 152 154)

(code_label/i 154 153 155 298 "" "" [0 uses])

(code_label/i 155 154 156 299 "" "" [0 uses])

(insn/i 156 155 157 (parallel[ 
            (set (reg/v:SI 68)
                (plus:SI (reg/v:SI 68)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(note/i 157 156 158 NOTE_INSN_LOOP_CONT 0)

(code_label/i 158 157 159 297 "" "" [0 uses])

(insn/i 159 158 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 68) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn/i 160 159 161 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 172)
            (pc))) -1 (nil)
    (nil))

(insn/i 161 160 162 (set (reg:SI 72)
        (sign_extend:SI (mem:QI (reg/v:SI 68) 0))) -1 (nil)
    (nil))

(insn/i 162 161 163 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 72)
            (reg/v:SI 69))) -1 (nil)
    (nil))

(jump_insn/i 163 162 164 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 172)
            (pc))) -1 (nil)
    (nil))

(insn/i 164 163 165 (set (reg:SI 73)
        (sign_extend:SI (mem:QI (reg/v:SI 68) 0))) -1 (nil)
    (nil))

(insn/i 165 164 166 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 73)
            (reg/v:SI 70))) -1 (nil)
    (nil))

(jump_insn/i 166 165 167 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 172)
            (pc))) -1 (nil)
    (nil))

(insn/i 167 166 168 (set (reg:SI 74)
        (sign_extend:SI (mem:QI (reg/v:SI 68) 0))) -1 (nil)
    (nil))

(insn/i 168 167 169 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 74)
            (reg/v:SI 71))) -1 (nil)
    (nil))

(jump_insn/i 169 168 170 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 155)
            (pc))) -1 (nil)
    (nil))

(jump_insn/i 170 169 171 (set (pc)
        (label_ref 172)) -1 (nil)
    (nil))

(barrier/i 171 170 172)

(code_label/i 172 171 173 300 "" "" [0 uses])

(jump_insn/i 173 172 174 (set (pc)
        (label_ref 178)) -1 (nil)
    (nil))

(barrier/i 174 173 175)

(jump_insn/i 175 174 176 (set (pc)
        (label_ref 154)) -1 (nil)
    (nil))

(barrier/i 176 175 177)

(note/i 177 176 178 NOTE_INSN_LOOP_END 0)

(code_label/i 178 177 179 301 "" "" [0 uses])

(insn/i 179 178 180 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v:SI 68) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn/i 180 179 181 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 184)
            (pc))) -1 (nil)
    (nil))

(insn/i 181 180 182 (set (reg:SI 75)
        (reg/v:SI 68)) -1 (nil)
    (nil))

(jump_insn/i 182 181 183 (set (pc)
        (label_ref 186)) -1 (nil)
    (nil))

(barrier/i 183 182 184)

(code_label/i 184 183 185 302 "" "" [0 uses])

(insn/i 185 184 186 (set (reg:SI 75)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(code_label/i 186 185 187 303 "" "" [0 uses])

(insn/i 187 186 188 (set (reg:SI 49)
        (reg:SI 75)) -1 (nil)
    (nil))

(jump_insn/i 188 187 189 (set (pc)
        (label_ref 191)) -1 (nil)
    (nil))

(barrier/i 189 188 190)

(insn/i 190 189 191 (clobber (reg:SI 49)) -1 (nil)
    (nil))

(code_label/i 191 190 192 304 "" "" [0 uses])

(note 192 191 193 0x403220a0 NOTE_INSN_BLOCK_END 0)

(jump_insn 193 192 194 (set (pc)
        (label_ref 209)) -1 (nil)
    (nil))

(barrier 194 193 195)

(code_label 195 194 197 295 "" "" [0 uses])

(insn 197 195 199 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (insn_list:REG_LIBCALL 206 (nil)))

(insn 199 197 201 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 43)) -1 (nil)
    (nil))

(insn 201 199 202 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 44)) -1 (nil)
    (nil))

(call_insn/u 202 201 204 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("strpbrk")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int -1 [0xffffffff])
        (nil))
    (expr_list (use (mem:BLK (scratch) 0))
        (nil)))

(insn 204 202 206 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 206 204 208 (set (reg:SI 76)
        (reg:SI 0 eax)) -1 (nil)
    (insn_list:REG_RETVAL 197 (expr_list:REG_EQUAL (expr_list (use (mem:BLK (scratch) 0))
                (expr_list (symbol_ref:SI ("strpbrk"))
                    (expr_list (reg/v:SI 44)
                        (expr_list (reg/v:SI 43)
                            (nil)))))
            (nil))))

(insn 208 206 209 (set (reg:SI 49)
        (reg:SI 76)) -1 (nil)
    (nil))

(code_label 209 208 210 296 "" "" [0 uses])

(code_label 210 209 211 286 "" "" [0 uses])

(code_label 211 210 212 282 "" "" [0 uses])

(jump_insn 212 211 213 (set (pc)
        (label_ref 217)) -1 (nil)
    (nil))

(barrier 213 212 214)

(code_label 214 213 216 279 "" "" [0 uses])

(insn 216 214 217 (set (reg:SI 49)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(code_label 217 216 218 280 "" "" [0 uses])

(jump_insn 218 217 219 (set (pc)
        (label_ref 234)) -1 (nil)
    (nil))

(barrier 219 218 220)

(code_label 220 219 222 277 "" "" [0 uses])

(insn 222 220 224 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (insn_list:REG_LIBCALL 231 (nil)))

(insn 224 222 226 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 43)) -1 (nil)
    (nil))

(insn 226 224 227 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 44)) -1 (nil)
    (nil))

(call_insn/u 227 226 229 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("strpbrk")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int -1 [0xffffffff])
        (nil))
    (expr_list (use (mem:BLK (scratch) 0))
        (nil)))

(insn 229 227 231 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 231 229 233 (set (reg:SI 77)
        (reg:SI 0 eax)) -1 (nil)
    (insn_list:REG_RETVAL 222 (expr_list:REG_EQUAL (expr_list (use (mem:BLK (scratch) 0))
                (expr_list (symbol_ref:SI ("strpbrk"))
                    (expr_list (reg/v:SI 44)
                        (expr_list (reg/v:SI 43)
                            (nil)))))
            (nil))))

(insn 233 231 234 (set (reg:SI 49)
        (reg:SI 77)) -1 (nil)
    (nil))

(code_label 234 233 235 278 "" "" [0 uses])

(note 235 234 239 0x40322680 NOTE_INSN_BLOCK_END 0)

(insn 239 235 241 (set (reg:SI 78)
        (reg:SI 49)) -1 (nil)
    (nil))

(insn 241 239 242 (set (mem:SI (reg/v:SI 42) 0)
        (reg:SI 78)) -1 (nil)
    (nil))

(insn 242 241 243 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 243 242 251 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 254)
            (pc))) -1 (nil)
    (nil))

(insn 251 243 253 (set (reg:SI 81)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 253 251 246 (set (mem:QI (reg:SI 81) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 246 253 247 (set (reg:SI 80)
        (mem:SI (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 247 246 249 (parallel[ 
            (set (reg:SI 79)
                (plus:SI (reg:SI 80)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 249 247 254 (set (mem:SI (reg/v:SI 42) 0)
        (reg:SI 79)) -1 (nil)
    (nil))

(code_label 254 249 257 305 "" "" [0 uses])

(insn 257 254 258 (set (reg/i:SI 0 eax)
        (reg/v:SI 44)) -1 (nil)
    (nil))

(jump_insn 258 257 259 (set (pc)
        (label_ref 265)) -1 (nil)
    (nil))

(barrier 259 258 261)

(note 261 259 262 0x40322c60 NOTE_INSN_BLOCK_END 0)

(note 262 261 264 NOTE_INSN_FUNCTION_END 0)

(insn 264 262 265 (clobber (reg/i:SI 0 eax)) -1 (nil)
    (nil))

(code_label 265 264 266 275 "" "" [0 uses])

(insn 266 265 0 (use (reg/i:SI 0 eax)) -1 (nil)
    (nil))

;; Function bessi0

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 5 (set (reg/v:DF 42)
        (mem/f:DF (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (nil))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 12 0x40329c40 NOTE_INSN_BLOCK_BEG 0)

(insn 12 8 14 (set (reg:DF 48)
        (reg/v:DF 42)) -1 (nil)
    (nil))

(insn 14 12 15 (set (reg/v:DF 49)
        (reg:DF 48)) -1 (nil)
    (nil))

(note 15 14 17 0x40326be0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 17 15 18 (parallel[ 
            (set (reg:DF 50)
                (abs:DF (reg/v:DF 49)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 18 17 19 (set (reg/v:DF 42)
        (reg:DF 50)) -1 (nil)
    (nil))

(jump_insn/i 19 18 20 (set (pc)
        (label_ref 22)) -1 (nil)
    (nil))

(barrier/i 20 19 21)

(insn/i 21 20 22 (clobber (reg/v:DF 42)) -1 (nil)
    (nil))

(code_label/i 22 21 23 307 "" "" [0 uses])

(note 23 22 26 0x40326be0 NOTE_INSN_BLOCK_END 0)

(insn 26 23 28 (set (reg/v:DF 45)
        (reg/v:DF 42)) -1 (nil)
    (nil))

(note 28 26 30 0x40326e60 NOTE_INSN_BLOCK_BEG 0)

(insn/i 30 28 31 (parallel[ 
            (set (reg:DF 51)
                (abs:DF (reg/v:DF 45)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 31 30 32 (set (reg/v:DF 46)
        (reg:DF 51)) -1 (nil)
    (nil))

(jump_insn/i 32 31 33 (set (pc)
        (label_ref 35)) -1 (nil)
    (nil))

(barrier/i 33 32 34)

(insn/i 34 33 35 (clobber (reg/v:DF 46)) -1 (nil)
    (nil))

(code_label/i 35 34 36 309 "" "" [0 uses])

(note 36 35 38 0x40326e60 NOTE_INSN_BLOCK_END 0)

(insn 38 36 40 (set (reg:DF 52)
        (reg/v:DF 46)) -1 (nil)
    (nil))

(insn 40 38 41 (set (reg:DF 53)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC34")) 0)) -1 (nil)
    (expr_list:REG_EQUAL (const_double:DF (mem/u/f:DF (symbol_ref/u:SI ("*.LC34")) 0) 0 [0x0] 0 [0x0] 1073803264 [0x4000f000])
        (nil)))

(jump_insn 41 40 42 (parallel[ 
            (set (pc)
                (if_then_else (lt:CCFPU (reg:DF 52)
                        (reg:DF 53))
                    (label_ref 44)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn 42 41 43 (set (pc)
        (label_ref 83)) -1 (nil)
    (nil))

(barrier 43 42 44)

(code_label 44 43 49 310 "" "" [0 uses])

(insn 49 44 50 (set (reg:DF 54)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC34")) 0)) -1 (nil)
    (nil))

(insn 50 49 52 (set (reg/v:DF 44)
        (div:DF (reg/v:DF 42)
            (reg:DF 54))) -1 (nil)
    (nil))

(insn 52 50 55 (set (reg/v:DF 44)
        (mult:DF (reg/v:DF 44)
            (reg/v:DF 44))) -1 (nil)
    (nil))

(insn 55 52 56 (set (reg:DF 56)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC35")) 0)) -1 (nil)
    (nil))

(insn 56 55 58 (set (reg:DF 55)
        (mult:DF (reg/v:DF 44)
            (reg:DF 56))) -1 (nil)
    (nil))

(insn 58 56 59 (set (reg:DF 58)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC36")) 0)) -1 (nil)
    (nil))

(insn 59 58 60 (set (reg:DF 57)
        (plus:DF (reg:DF 55)
            (reg:DF 58))) -1 (nil)
    (nil))

(insn 60 59 62 (set (reg:DF 59)
        (mult:DF (reg/v:DF 44)
            (reg:DF 57))) -1 (nil)
    (nil))

(insn 62 60 63 (set (reg:DF 61)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC37")) 0)) -1 (nil)
    (nil))

(insn 63 62 64 (set (reg:DF 60)
        (plus:DF (reg:DF 59)
            (reg:DF 61))) -1 (nil)
    (nil))

(insn 64 63 66 (set (reg:DF 62)
        (mult:DF (reg/v:DF 44)
            (reg:DF 60))) -1 (nil)
    (nil))

(insn 66 64 67 (set (reg:DF 64)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC38")) 0)) -1 (nil)
    (nil))

(insn 67 66 68 (set (reg:DF 63)
        (plus:DF (reg:DF 62)
            (reg:DF 64))) -1 (nil)
    (nil))

(insn 68 67 70 (set (reg:DF 65)
        (mult:DF (reg/v:DF 44)
            (reg:DF 63))) -1 (nil)
    (nil))

(insn 70 68 71 (set (reg:DF 67)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC39")) 0)) -1 (nil)
    (nil))

(insn 71 70 72 (set (reg:DF 66)
        (plus:DF (reg:DF 65)
            (reg:DF 67))) -1 (nil)
    (nil))

(insn 72 71 74 (set (reg:DF 68)
        (mult:DF (reg/v:DF 44)
            (reg:DF 66))) -1 (nil)
    (nil))

(insn 74 72 75 (set (reg:DF 70)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC40")) 0)) -1 (nil)
    (nil))

(insn 75 74 76 (set (reg:DF 69)
        (plus:DF (reg:DF 68)
            (reg:DF 70))) -1 (nil)
    (nil))

(insn 76 75 78 (set (reg/v:DF 47)
        (mult:DF (reg/v:DF 44)
            (reg:DF 69))) -1 (nil)
    (nil))

(insn 78 76 79 (set (reg:DF 71)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC41")) 0)) -1 (nil)
    (nil))

(insn 79 78 81 (set (reg/v:DF 47)
        (plus:DF (reg/v:DF 47)
            (reg:DF 71))) -1 (nil)
    (nil))

(jump_insn 81 79 82 (set (pc)
        (label_ref 149)) -1 (nil)
    (nil))

(barrier 82 81 83)

(code_label 83 82 88 308 "" "" [0 uses])

(insn 88 83 89 (set (reg:DF 72)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC34")) 0)) -1 (nil)
    (nil))

(insn 89 88 92 (set (reg/v:DF 44)
        (div:DF (reg:DF 72)
            (reg/v:DF 46))) -1 (nil)
    (nil))

(insn 92 89 94 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 94 92 95 (set (mem/f:DF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:DF 46)) -1 (nil)
    (nil))

(call_insn 95 94 97 (set (reg:DF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("exp")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 97 95 98 (set (reg:DF 73)
        (reg:DF 8 st(0))) -1 (nil)
    (nil))

(note 98 97 101 0x40329240 NOTE_INSN_BLOCK_BEG 0)

(insn 101 98 102 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(note/i 102 101 103 0x40329260 NOTE_INSN_BLOCK_BEG 0)

(insn/i 103 102 104 (parallel[ 
            (set (reg/v:DF 75)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:DF 46)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 441))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 104 103 105 (set (reg:DF 74)
        (reg/v:DF 75)) -1 (nil)
    (nil))

(jump_insn/i 105 104 106 (set (pc)
        (label_ref 109)) -1 (nil)
    (nil))

(barrier/i 106 105 107)

(note/i 107 106 108 0x40329260 NOTE_INSN_BLOCK_END 0)

(insn/i 108 107 109 (clobber (reg:DF 74)) -1 (nil)
    (nil))

(code_label/i 109 108 110 312 "" "" [0 uses])

(note 110 109 112 0x40329240 NOTE_INSN_BLOCK_END 0)

(insn 112 110 114 (set (reg/v:DF 47)
        (div:DF (reg:DF 73)
            (reg:DF 74))) -1 (nil)
    (nil))

(insn 114 112 115 (set (reg:DF 77)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC42")) 0)) -1 (nil)
    (nil))

(insn 115 114 117 (set (reg:DF 76)
        (mult:DF (reg/v:DF 44)
            (reg:DF 77))) -1 (nil)
    (nil))

(insn 117 115 118 (set (reg:DF 79)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC43")) 0)) -1 (nil)
    (nil))

(insn 118 117 119 (set (reg:DF 78)
        (plus:DF (reg:DF 76)
            (reg:DF 79))) -1 (nil)
    (nil))

(insn 119 118 121 (set (reg:DF 80)
        (mult:DF (reg/v:DF 44)
            (reg:DF 78))) -1 (nil)
    (nil))

(insn 121 119 122 (set (reg:DF 82)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC44")) 0)) -1 (nil)
    (nil))

(insn 122 121 123 (set (reg:DF 81)
        (plus:DF (reg:DF 80)
            (reg:DF 82))) -1 (nil)
    (nil))

(insn 123 122 125 (set (reg:DF 83)
        (mult:DF (reg/v:DF 44)
            (reg:DF 81))) -1 (nil)
    (nil))

(insn 125 123 126 (set (reg:DF 85)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC45")) 0)) -1 (nil)
    (nil))

(insn 126 125 127 (set (reg:DF 84)
        (plus:DF (reg:DF 83)
            (reg:DF 85))) -1 (nil)
    (nil))

(insn 127 126 129 (set (reg:DF 86)
        (mult:DF (reg/v:DF 44)
            (reg:DF 84))) -1 (nil)
    (nil))

(insn 129 127 130 (set (reg:DF 88)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC46")) 0)) -1 (nil)
    (nil))

(insn 130 129 131 (set (reg:DF 87)
        (plus:DF (reg:DF 86)
            (reg:DF 88))) -1 (nil)
    (nil))

(insn 131 130 133 (set (reg:DF 89)
        (mult:DF (reg/v:DF 44)
            (reg:DF 87))) -1 (nil)
    (nil))

(insn 133 131 134 (set (reg:DF 91)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC47")) 0)) -1 (nil)
    (nil))

(insn 134 133 135 (set (reg:DF 90)
        (plus:DF (reg:DF 89)
            (reg:DF 91))) -1 (nil)
    (nil))

(insn 135 134 137 (set (reg:DF 92)
        (mult:DF (reg/v:DF 44)
            (reg:DF 90))) -1 (nil)
    (nil))

(insn 137 135 138 (set (reg:DF 94)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC48")) 0)) -1 (nil)
    (nil))

(insn 138 137 139 (set (reg:DF 93)
        (plus:DF (reg:DF 92)
            (reg:DF 94))) -1 (nil)
    (nil))

(insn 139 138 141 (set (reg:DF 95)
        (mult:DF (reg/v:DF 44)
            (reg:DF 93))) -1 (nil)
    (nil))

(insn 141 139 142 (set (reg:DF 97)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC49")) 0)) -1 (nil)
    (nil))

(insn 142 141 143 (set (reg:DF 96)
        (plus:DF (reg:DF 95)
            (reg:DF 97))) -1 (nil)
    (nil))

(insn 143 142 145 (set (reg:DF 98)
        (mult:DF (reg/v:DF 44)
            (reg:DF 96))) -1 (nil)
    (nil))

(insn 145 143 146 (set (reg:DF 100)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC50")) 0)) -1 (nil)
    (nil))

(insn 146 145 147 (set (reg:DF 99)
        (plus:DF (reg:DF 98)
            (reg:DF 100))) -1 (nil)
    (nil))

(insn 147 146 149 (set (reg/v:DF 47)
        (mult:DF (reg/v:DF 47)
            (reg:DF 99))) -1 (nil)
    (nil))

(code_label 149 147 152 311 "" "" [0 uses])

(insn 152 149 155 (set (reg/v:DF 43)
        (reg/v:DF 47)) -1 (nil)
    (nil))

(insn 155 152 156 (set (reg/i:DF 8 st(0))
        (reg/v:DF 43)) -1 (nil)
    (nil))

(jump_insn 156 155 157 (set (pc)
        (label_ref 163)) -1 (nil)
    (nil))

(barrier 157 156 159)

(note 159 157 160 0x40329c40 NOTE_INSN_BLOCK_END 0)

(note 160 159 162 NOTE_INSN_FUNCTION_END 0)

(insn 162 160 163 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 163 162 164 306 "" "" [0 uses])

(insn 164 163 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function min

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 7 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(note 7 6 10 NOTE_INSN_FUNCTION_BEG 0)

(note 10 7 14 0x4032ba00 NOTE_INSN_BLOCK_BEG 0)

(insn 14 10 17 (set (reg/v:DF 45)
        (mem:DF (reg/v:SI 42) 0)) -1 (nil)
    (nil))

(insn 17 14 18 (set (reg/v:SI 44)
        (const_int 1 [0x1])) -1 (nil)
    (nil))

(note 18 17 47 NOTE_INSN_LOOP_BEG 0)

(jump_insn 47 18 48 (set (pc)
        (label_ref 19)) -1 (nil)
    (nil))

(barrier 48 47 46)

(code_label 46 48 26 320 "" "" [0 uses])

(code_label 26 46 31 317 "" "" [0 uses])

(insn 31 26 32 (set (reg:DF 47)
        (mem:DF (plus:SI (mult:SI (reg/v:SI 44)
                    (const_int 8 [0x8]))
                (reg/v:SI 42)) 0)) -1 (nil)
    (nil))

(jump_insn 32 31 33 (parallel[ 
            (set (pc)
                (if_then_else (lt:CCFPU (reg:DF 47)
                        (reg/v:DF 45))
                    (label_ref 35)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn 33 32 34 (set (pc)
        (label_ref 39)) -1 (nil)
    (nil))

(barrier 34 33 35)

(code_label 35 34 38 319 "" "" [0 uses])

(insn 38 35 39 (set (reg/v:DF 45)
        (mem:DF (plus:SI (mult:SI (reg/v:SI 44)
                    (const_int 8 [0x8]))
                (reg/v:SI 42)) 0)) -1 (nil)
    (nil))

(code_label 39 38 42 318 "" "" [0 uses])

(note 42 39 43 NOTE_INSN_LOOP_CONT 0)

(code_label 43 42 45 316 "" "" [0 uses])

(insn 45 43 19 (parallel[ 
            (set (reg/v:SI 44)
                (plus:SI (reg/v:SI 44)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 19 45 21 314 "" "" [0 uses])

(insn 21 19 22 (parallel[ 
            (set (reg:SI 46)
                (plus:SI (reg/v:SI 43)
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 22 21 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 44)
            (reg:SI 46))) -1 (nil)
    (nil))

(jump_insn 23 22 24 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) -1 (nil)
    (nil))

(jump_insn 24 23 25 (set (pc)
        (label_ref 52)) -1 (nil)
    (nil))

(barrier 25 24 49)

(jump_insn 49 25 50 (set (pc)
        (label_ref 46)) -1 (nil)
    (nil))

(barrier 50 49 51)

(note 51 50 52 NOTE_INSN_LOOP_END 0)

(code_label 52 51 55 315 "" "" [0 uses])

(insn 55 52 56 (set (reg/i:DF 8 st(0))
        (reg/v:DF 45)) -1 (nil)
    (nil))

(jump_insn 56 55 57 (set (pc)
        (label_ref 63)) -1 (nil)
    (nil))

(barrier 57 56 59)

(note 59 57 60 0x4032ba00 NOTE_INSN_BLOCK_END 0)

(note 60 59 62 NOTE_INSN_FUNCTION_END 0)

(insn 62 60 63 (clobber (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

(code_label 63 62 64 313 "" "" [0 uses])

(insn 64 63 0 (use (reg/i:DF 8 st(0))) -1 (nil)
    (nil))

;; Function mexFunction

(note 2 0 4 NOTE_INSN_DELETED 0)

(insn 4 2 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 37 virtual-incoming-args) 0)
        (nil)))

(insn 6 4 8 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 4 [0x4])) 0)
        (nil)))

(insn 8 6 10 (set (reg/v:SI 44)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 8 [0x8])) 0)
        (nil)))

(insn 10 8 11 (set (reg/v:SI 45)
        (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 37 virtual-incoming-args)
                (const_int 12 [0xc])) 0)
        (nil)))

(note 11 10 14 NOTE_INSN_FUNCTION_BEG 0)

(note 14 11 18 0x4039ecc0 NOTE_INSN_BLOCK_BEG 0)

(insn 18 14 21 (set (reg/v:SI 72)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 21 18 24 (set (reg/v:SF 77)
        (mem/u/f:SF (symbol_ref/u:SI ("*.LC53")) 0)) -1 (nil)
    (nil))

(insn 24 21 27 (set (reg/v:SI 83)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 27 24 29 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 29 27 30 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (reg/v:SI 45) 0)) -1 (nil)
    (nil))

(call_insn 30 29 32 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetPr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 32 30 35 (set (reg/v:SI 46)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 35 32 37 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 37 35 38 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(call_insn 38 37 40 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetPr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 40 38 43 (set (reg/v:SI 47)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 43 40 45 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 45 43 46 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(call_insn 46 45 48 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetPr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 48 46 51 (set (reg/v:SI 50)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 51 48 53 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 53 51 54 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(call_insn 54 53 56 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetPi")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 56 54 59 (set (reg/v:SI 51)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 59 56 61 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 61 59 62 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (nil))

(call_insn 62 61 64 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetPr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 64 62 67 (set (reg/v:SI 48)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 67 64 69 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 69 67 70 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 16 [0x10])) 0)) -1 (nil)
    (nil))

(call_insn 70 69 72 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetPr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 72 70 75 (set (reg/v:SI 49)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 75 72 77 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 77 75 78 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 20 [0x14])) 0)) -1 (nil)
    (nil))

(call_insn 78 77 80 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetPr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 80 78 83 (set (reg/v:SI 52)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 83 80 85 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 85 83 86 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 24 [0x18])) 0)) -1 (nil)
    (nil))

(call_insn 86 85 88 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetPr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 88 86 91 (set (reg/v:SI 53)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 91 88 93 (parallel[ 
            (set (reg:SI 89)
                (plus:SI (reg/v:SI 44)
                    (const_int -6 [0xfffffffa])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 93 91 94 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 94 93 95 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 89)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 95 94 99 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 105)
            (pc))) -1 (nil)
    (nil))

(insn 99 95 101 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 101 99 102 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC54"))) -1 (nil)
    (nil))

(call_insn 102 101 104 (call (mem:QI (symbol_ref:SI ("mexErrMsgTxt")) 0)
        (const_int 16 [0x10])) -1 (nil)
    (nil)
    (nil))

(insn 104 102 105 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 105 104 108 323 "" "" [0 uses])

(insn 108 105 110 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 110 108 111 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 28 [0x1c])) 0)) -1 (nil)
    (nil))

(call_insn 111 110 113 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetNumberOfElements")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 113 111 115 (set (reg:SI 90)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 115 113 118 (parallel[ 
            (set (reg/v:SI 68)
                (plus:SI (reg:SI 90)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 118 115 120 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 120 118 122 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 1 [0x1])) -1 (nil)
    (nil))

(insn 122 120 123 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 68)) -1 (nil)
    (nil))

(call_insn 123 122 125 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxCalloc")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 125 123 128 (set (reg/v:SI 67)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 128 125 130 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 130 128 132 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 68)) -1 (nil)
    (nil))

(insn 132 130 134 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 134 132 135 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 28 [0x1c])) 0)) -1 (nil)
    (nil))

(call_insn 135 134 138 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetString")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 138 135 140 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 140 138 141 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (reg/v:SI 45) 0)) -1 (nil)
    (nil))

(call_insn 141 140 143 (set (reg:QI 0 al)
        (call (mem:QI (symbol_ref:SI ("mxIsComplex")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 143 141 145 (set (reg:QI 91)
        (reg:QI 0 al)) -1 (nil)
    (nil))

(insn 145 143 146 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 146 145 147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 91)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 147 146 151 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 157)
            (pc))) -1 (nil)
    (nil))

(insn 151 147 153 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 153 151 154 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC55"))) -1 (nil)
    (nil))

(call_insn 154 153 156 (call (mem:QI (symbol_ref:SI ("mexErrMsgTxt")) 0)
        (const_int 16 [0x10])) -1 (nil)
    (nil)
    (nil))

(insn 156 154 157 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 157 156 160 324 "" "" [0 uses])

(insn 160 157 162 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 162 160 163 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(call_insn 163 162 165 (set (reg:QI 0 al)
        (call (mem:QI (symbol_ref:SI ("mxIsComplex")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 165 163 167 (set (reg:QI 92)
        (reg:QI 0 al)) -1 (nil)
    (nil))

(insn 167 165 168 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 168 167 169 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 169 168 173 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 179)
            (pc))) -1 (nil)
    (nil))

(insn 173 169 175 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 175 173 176 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC56"))) -1 (nil)
    (nil))

(call_insn 176 175 178 (call (mem:QI (symbol_ref:SI ("mexErrMsgTxt")) 0)
        (const_int 16 [0x10])) -1 (nil)
    (nil)
    (nil))

(insn 178 176 179 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 179 178 182 325 "" "" [0 uses])

(insn 182 179 184 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 184 182 185 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(call_insn 185 184 187 (set (reg:QI 0 al)
        (call (mem:QI (symbol_ref:SI ("mxIsComplex")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 187 185 189 (set (reg:QI 93)
        (reg:QI 0 al)) -1 (nil)
    (nil))

(insn 189 187 190 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 190 189 191 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 191 190 195 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 196)
            (pc))) -1 (nil)
    (nil))

(insn 195 191 196 (set (reg/v:SI 83)
        (const_int 1 [0x1])) -1 (nil)
    (nil))

(code_label 196 195 199 326 "" "" [0 uses])

(insn 199 196 201 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 201 199 202 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (nil))

(call_insn 202 201 204 (set (reg:QI 0 al)
        (call (mem:QI (symbol_ref:SI ("mxIsComplex")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 204 202 206 (set (reg:QI 94)
        (reg:QI 0 al)) -1 (nil)
    (nil))

(insn 206 204 207 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 207 206 208 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 208 207 212 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 218)
            (pc))) -1 (nil)
    (nil))

(insn 212 208 214 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 214 212 215 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC57"))) -1 (nil)
    (nil))

(call_insn 215 214 217 (call (mem:QI (symbol_ref:SI ("mexErrMsgTxt")) 0)
        (const_int 16 [0x10])) -1 (nil)
    (nil)
    (nil))

(insn 217 215 218 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 218 217 221 327 "" "" [0 uses])

(insn 221 218 223 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 223 221 224 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 16 [0x10])) 0)) -1 (nil)
    (nil))

(call_insn 224 223 226 (set (reg:QI 0 al)
        (call (mem:QI (symbol_ref:SI ("mxIsComplex")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 226 224 228 (set (reg:QI 95)
        (reg:QI 0 al)) -1 (nil)
    (nil))

(insn 228 226 229 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 229 228 230 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 95)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 230 229 234 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 240)
            (pc))) -1 (nil)
    (nil))

(insn 234 230 236 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 236 234 237 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC58"))) -1 (nil)
    (nil))

(call_insn 237 236 239 (call (mem:QI (symbol_ref:SI ("mexErrMsgTxt")) 0)
        (const_int 16 [0x10])) -1 (nil)
    (nil)
    (nil))

(insn 239 237 240 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 240 239 243 328 "" "" [0 uses])

(insn 243 240 245 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 245 243 246 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (nil))

(call_insn 246 245 248 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetM")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 248 246 250 (set (reg/v:SI 80)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 250 248 252 (set (reg:SI 96)
        (reg/v:SI 80)) -1 (nil)
    (nil))

(insn 252 250 253 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 253 252 254 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 254 253 258 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 266)
            (pc))) -1 (nil)
    (nil))

(insn 258 254 260 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 260 258 261 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (nil))

(call_insn 261 260 263 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetN")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 263 261 265 (set (reg/v:SI 80)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 265 263 266 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 266 265 269 329 "" "" [0 uses])

(insn 269 266 271 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 271 269 272 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 16 [0x10])) 0)) -1 (nil)
    (nil))

(call_insn 272 271 274 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetM")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 274 272 276 (set (reg/v:SI 78)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 276 274 278 (set (reg:SI 97)
        (reg/v:SI 78)) -1 (nil)
    (nil))

(insn 278 276 279 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 279 278 280 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 280 279 284 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 292)
            (pc))) -1 (nil)
    (nil))

(insn 284 280 286 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 286 284 287 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 16 [0x10])) 0)) -1 (nil)
    (nil))

(call_insn 287 286 289 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetN")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 289 287 291 (set (reg/v:SI 78)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 291 289 292 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 292 291 295 330 "" "" [0 uses])

(insn 295 292 297 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 297 295 298 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (reg/v:SI 45) 0)) -1 (nil)
    (nil))

(call_insn 298 297 300 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetM")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 300 298 302 (set (reg/v:SI 79)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 302 300 304 (set (reg:SI 98)
        (reg/v:SI 79)) -1 (nil)
    (nil))

(insn 304 302 305 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 305 304 306 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 306 305 310 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 318)
            (pc))) -1 (nil)
    (nil))

(insn 310 306 312 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 312 310 313 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (reg/v:SI 45) 0)) -1 (nil)
    (nil))

(call_insn 313 312 315 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetN")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 315 313 317 (set (reg/v:SI 79)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 317 315 318 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 318 317 321 331 "" "" [0 uses])

(insn 321 318 323 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 323 321 324 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(call_insn 324 323 326 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetM")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 326 324 328 (set (reg/v:SI 81)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 328 326 330 (set (reg:SI 99)
        (reg/v:SI 81)) -1 (nil)
    (nil))

(insn 330 328 331 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 331 330 332 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 332 331 336 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 344)
            (pc))) -1 (nil)
    (nil))

(insn 336 332 338 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 338 336 339 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(call_insn 339 338 341 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetN")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 341 339 343 (set (reg/v:SI 81)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 343 341 344 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 344 343 347 332 "" "" [0 uses])

(insn 347 344 349 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 349 347 350 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(call_insn 350 349 352 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetM")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 352 350 354 (set (reg/v:SI 82)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 354 352 356 (set (reg:SI 100)
        (reg/v:SI 82)) -1 (nil)
    (nil))

(insn 356 354 357 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 357 356 358 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 358 357 362 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 370)
            (pc))) -1 (nil)
    (nil))

(insn 362 358 364 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 364 362 365 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 45)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(call_insn 365 364 367 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetN")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 367 365 369 (set (reg/v:SI 82)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 369 367 370 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 370 369 373 333 "" "" [0 uses])

(insn 373 370 374 (set (reg:SI 101)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 374 373 375 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 79)
            (reg/v:SI 81))) -1 (nil)
    (nil))

(insn 375 374 377 (set (strict_low_part (subreg:QI (reg:SI 101) 0))
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 377 375 378 (set (reg:SI 102)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 378 377 379 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 81)
            (reg/v:SI 82))) -1 (nil)
    (nil))

(insn 379 378 381 (set (strict_low_part (subreg:QI (reg:SI 102) 0))
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 381 379 382 (parallel[ 
            (set (reg:SI 103)
                (ior:SI (reg:SI 101)
                    (reg:SI 102)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 382 381 383 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 383 382 387 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 393)
            (pc))) -1 (nil)
    (nil))

(insn 387 383 389 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 389 387 390 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC59"))) -1 (nil)
    (nil))

(call_insn 390 389 392 (call (mem:QI (symbol_ref:SI ("mexErrMsgTxt")) 0)
        (const_int 16 [0x10])) -1 (nil)
    (nil)
    (nil))

(insn 392 390 393 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 393 392 396 334 "" "" [0 uses])

(insn 396 393 398 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 398 396 400 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 1 [0x1])) -1 (nil)
    (nil))

(insn 400 398 402 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 80)) -1 (nil)
    (nil))

(insn 402 400 403 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 78)) -1 (nil)
    (nil))

(call_insn 403 402 405 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxCreateDoubleMatrix")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 405 403 407 (set (reg:SI 104)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 407 405 409 (set (mem:SI (reg/v:SI 43) 0)
        (reg:SI 104)) -1 (nil)
    (nil))

(insn 409 407 410 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 410 409 411 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v:SI 43) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 411 410 415 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 421)
            (pc))) -1 (nil)
    (nil))

(insn 415 411 417 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 417 415 418 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC60"))) -1 (nil)
    (nil))

(call_insn 418 417 420 (call (mem:QI (symbol_ref:SI ("mexErrMsgTxt")) 0)
        (const_int 16 [0x10])) -1 (nil)
    (nil)
    (nil))

(insn 420 418 421 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 421 420 424 335 "" "" [0 uses])

(insn 424 421 426 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 426 424 428 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 428 426 430 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 1 [0x1])) -1 (nil)
    (nil))

(insn 430 428 431 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 1 [0x1])) -1 (nil)
    (nil))

(call_insn 431 430 433 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxCreateDoubleMatrix")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 433 431 435 (set (reg:SI 105)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 435 433 437 (set (mem:SI (plus:SI (reg/v:SI 43)
                (const_int 4 [0x4])) 0)
        (reg:SI 105)) -1 (nil)
    (nil))

(insn 437 435 438 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 438 437 439 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:SI (reg/v:SI 43)
                    (const_int 4 [0x4])) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 439 438 443 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 449)
            (pc))) -1 (nil)
    (nil))

(insn 443 439 445 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 445 443 446 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC60"))) -1 (nil)
    (nil))

(call_insn 446 445 448 (call (mem:QI (symbol_ref:SI ("mexErrMsgTxt")) 0)
        (const_int 16 [0x10])) -1 (nil)
    (nil)
    (nil))

(insn 448 446 449 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 449 448 452 336 "" "" [0 uses])

(insn 452 449 454 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 454 452 456 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 456 454 458 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 1 [0x1])) -1 (nil)
    (nil))

(insn 458 456 459 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 1 [0x1])) -1 (nil)
    (nil))

(call_insn 459 458 461 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxCreateDoubleMatrix")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 461 459 463 (set (reg:SI 106)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 463 461 465 (set (mem:SI (plus:SI (reg/v:SI 43)
                (const_int 8 [0x8])) 0)
        (reg:SI 106)) -1 (nil)
    (nil))

(insn 465 463 466 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 466 465 467 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:SI (reg/v:SI 43)
                    (const_int 8 [0x8])) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 467 466 471 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 477)
            (pc))) -1 (nil)
    (nil))

(insn 471 467 473 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 473 471 474 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC60"))) -1 (nil)
    (nil))

(call_insn 474 473 476 (call (mem:QI (symbol_ref:SI ("mexErrMsgTxt")) 0)
        (const_int 16 [0x10])) -1 (nil)
    (nil)
    (nil))

(insn 476 474 477 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 477 476 480 337 "" "" [0 uses])

(insn 480 477 482 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 482 480 484 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 484 482 486 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 1 [0x1])) -1 (nil)
    (nil))

(insn 486 484 487 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 1 [0x1])) -1 (nil)
    (nil))

(call_insn 487 486 489 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxCreateDoubleMatrix")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 489 487 491 (set (reg:SI 107)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 491 489 493 (set (mem:SI (plus:SI (reg/v:SI 43)
                (const_int 12 [0xc])) 0)
        (reg:SI 107)) -1 (nil)
    (nil))

(insn 493 491 494 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 494 493 495 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:SI (reg/v:SI 43)
                    (const_int 12 [0xc])) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 495 494 499 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 505)
            (pc))) -1 (nil)
    (nil))

(insn 499 495 501 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 501 499 502 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC60"))) -1 (nil)
    (nil))

(call_insn 502 501 504 (call (mem:QI (symbol_ref:SI ("mexErrMsgTxt")) 0)
        (const_int 16 [0x10])) -1 (nil)
    (nil)
    (nil))

(insn 504 502 505 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 505 504 508 338 "" "" [0 uses])

(insn 508 505 510 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 510 508 512 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 512 510 514 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 1 [0x1])) -1 (nil)
    (nil))

(insn 514 512 515 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 1 [0x1])) -1 (nil)
    (nil))

(call_insn 515 514 517 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxCreateDoubleMatrix")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 517 515 519 (set (reg:SI 108)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 519 517 521 (set (mem:SI (plus:SI (reg/v:SI 43)
                (const_int 16 [0x10])) 0)
        (reg:SI 108)) -1 (nil)
    (nil))

(insn 521 519 522 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 522 521 523 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:SI (reg/v:SI 43)
                    (const_int 16 [0x10])) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 523 522 527 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 533)
            (pc))) -1 (nil)
    (nil))

(insn 527 523 529 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 529 527 530 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC60"))) -1 (nil)
    (nil))

(call_insn 530 529 532 (call (mem:QI (symbol_ref:SI ("mexErrMsgTxt")) 0)
        (const_int 16 [0x10])) -1 (nil)
    (nil)
    (nil))

(insn 532 530 533 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 533 532 536 339 "" "" [0 uses])

(insn 536 533 538 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 538 536 540 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 540 538 542 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 80)) -1 (nil)
    (nil))

(insn 542 540 543 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 78)) -1 (nil)
    (nil))

(call_insn 543 542 545 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxCreateDoubleMatrix")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 545 543 547 (set (reg:SI 109)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 547 545 549 (set (mem:SI (plus:SI (reg/v:SI 43)
                (const_int 20 [0x14])) 0)
        (reg:SI 109)) -1 (nil)
    (nil))

(insn 549 547 550 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 550 549 551 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:SI (reg/v:SI 43)
                    (const_int 20 [0x14])) 0)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 551 550 555 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 561)
            (pc))) -1 (nil)
    (nil))

(insn 555 551 557 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 557 555 558 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC60"))) -1 (nil)
    (nil))

(call_insn 558 557 560 (call (mem:QI (symbol_ref:SI ("mexErrMsgTxt")) 0)
        (const_int 16 [0x10])) -1 (nil)
    (nil)
    (nil))

(insn 560 558 561 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 561 560 564 340 "" "" [0 uses])

(insn 564 561 565 (set (reg:SI 110)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 565 564 566 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 79)
            (reg/v:SI 81))) -1 (nil)
    (nil))

(insn 566 565 568 (set (strict_low_part (subreg:QI (reg:SI 110) 0))
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 568 566 569 (set (reg:SI 111)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 569 568 570 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 79)
            (reg/v:SI 82))) -1 (nil)
    (nil))

(insn 570 569 572 (set (strict_low_part (subreg:QI (reg:SI 111) 0))
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 572 570 573 (parallel[ 
            (set (reg:SI 112)
                (ior:SI (reg:SI 110)
                    (reg:SI 111)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 573 572 574 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 574 573 578 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 584)
            (pc))) -1 (nil)
    (nil))

(insn 578 574 580 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 580 578 581 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC61"))) -1 (nil)
    (nil))

(call_insn 581 580 583 (call (mem:QI (symbol_ref:SI ("mexErrMsgTxt")) 0)
        (const_int 16 [0x10])) -1 (nil)
    (nil)
    (nil))

(insn 583 581 584 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 584 583 587 341 "" "" [0 uses])

(insn 587 584 589 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 589 587 590 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (reg/v:SI 43) 0)) -1 (nil)
    (nil))

(call_insn 590 589 592 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetPr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 592 590 595 (set (reg/v:SI 54)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 595 592 597 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 597 595 598 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (reg/v:SI 43) 0)) -1 (nil)
    (nil))

(call_insn 598 597 600 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetPi")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 600 598 603 (set (reg/v:SI 55)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 603 600 605 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 605 603 606 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 43)
                (const_int 4 [0x4])) 0)) -1 (nil)
    (nil))

(call_insn 606 605 608 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetPr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 608 606 611 (set (reg/v:SI 56)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 611 608 613 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 613 611 614 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 43)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(call_insn 614 613 616 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetPr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 616 614 619 (set (reg/v:SI 57)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 619 616 621 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 621 619 622 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 43)
                (const_int 12 [0xc])) 0)) -1 (nil)
    (nil))

(call_insn 622 621 624 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetPr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 624 622 627 (set (reg/v:SI 58)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 627 624 629 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 629 627 630 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 43)
                (const_int 16 [0x10])) 0)) -1 (nil)
    (nil))

(call_insn 630 629 632 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetPr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 632 630 635 (set (reg/v:SI 59)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 635 632 637 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 637 635 638 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg/v:SI 43)
                (const_int 20 [0x14])) 0)) -1 (nil)
    (nil))

(call_insn 638 637 640 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mxGetPr")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (nil)
    (nil))

(insn 640 638 643 (set (reg/v:SI 86)
        (reg:SI 0 eax)) -1 (nil)
    (nil))

(insn 643 640 644 (set (reg:DF 114)
        (mem:DF (plus:SI (reg/v:SI 48)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(insn 644 643 646 (set (reg:DF 113)
        (minus:DF (reg:DF 114)
            (mem:DF (reg/v:SI 48) 0))) -1 (nil)
    (nil))

(insn 646 644 647 (set (reg/v:DF 115)
        (reg:DF 113)) -1 (nil)
    (nil))

(note 647 646 650 0x4034c400 NOTE_INSN_BLOCK_BEG 0)

(insn 650 647 651 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 651 650 652 (parallel[ 
            (set (reg:DF 116)
                (abs:DF (reg/v:DF 115)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 652 651 653 (set (reg/v:DF 65)
        (reg:DF 116)) -1 (nil)
    (nil))

(jump_insn/i 653 652 654 (set (pc)
        (label_ref 656)) -1 (nil)
    (nil))

(barrier/i 654 653 655)

(insn/i 655 654 656 (clobber (reg/v:DF 65)) -1 (nil)
    (nil))

(code_label/i 656 655 657 342 "" "" [0 uses])

(note 657 656 660 0x4034c400 NOTE_INSN_BLOCK_END 0)

(insn 660 657 661 (set (reg:DF 118)
        (mem:DF (plus:SI (reg/v:SI 49)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(insn 661 660 663 (set (reg:DF 117)
        (minus:DF (reg:DF 118)
            (mem:DF (reg/v:SI 49) 0))) -1 (nil)
    (nil))

(insn 663 661 664 (set (reg/v:DF 119)
        (reg:DF 117)) -1 (nil)
    (nil))

(note 664 663 666 0x4034c920 NOTE_INSN_BLOCK_BEG 0)

(insn/i 666 664 667 (parallel[ 
            (set (reg:DF 120)
                (abs:DF (reg/v:DF 119)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 667 666 668 (set (reg/v:DF 66)
        (reg:DF 120)) -1 (nil)
    (nil))

(jump_insn/i 668 667 669 (set (pc)
        (label_ref 671)) -1 (nil)
    (nil))

(barrier/i 669 668 670)

(insn/i 670 669 671 (clobber (reg/v:DF 66)) -1 (nil)
    (nil))

(code_label/i 671 670 672 343 "" "" [0 uses])

(note 672 671 674 0x4034c920 NOTE_INSN_BLOCK_END 0)

(insn 674 672 676 (set (reg/v:DF 60)
        (mult:DF (reg/v:DF 65)
            (mem:DF (reg/v:SI 52) 0))) -1 (nil)
    (nil))

(insn 676 674 678 (set (reg:DF 121)
        (reg/v:DF 60)) -1 (nil)
    (nil))

(insn 678 676 680 (set (mem:DF (reg/v:SI 56) 0)
        (reg:DF 121)) -1 (nil)
    (nil))

(insn 680 678 682 (set (reg/v:DF 61)
        (mult:DF (reg/v:DF 66)
            (mem:DF (reg/v:SI 53) 0))) -1 (nil)
    (nil))

(insn 682 680 684 (set (reg:DF 122)
        (reg/v:DF 61)) -1 (nil)
    (nil))

(insn 684 682 687 (set (mem:DF (reg/v:SI 57) 0)
        (reg:DF 122)) -1 (nil)
    (nil))

(insn 687 684 688 (set (reg:DF 124)
        (mem:DF (plus:SI (reg/v:SI 48)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(insn 688 687 690 (set (reg:DF 123)
        (minus:DF (reg:DF 124)
            (mem:DF (reg/v:SI 48) 0))) -1 (nil)
    (nil))

(insn 690 688 691 (set (reg/v:DF 125)
        (reg:DF 123)) -1 (nil)
    (nil))

(note 691 690 693 0x4034e260 NOTE_INSN_BLOCK_BEG 0)

(insn/i 693 691 694 (parallel[ 
            (set (reg:DF 127)
                (abs:DF (reg/v:DF 125)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 694 693 695 (set (reg:DF 126)
        (reg:DF 127)) -1 (nil)
    (nil))

(jump_insn/i 695 694 696 (set (pc)
        (label_ref 698)) -1 (nil)
    (nil))

(barrier/i 696 695 697)

(insn/i 697 696 698 (clobber (reg:DF 126)) -1 (nil)
    (nil))

(code_label/i 698 697 699 344 "" "" [0 uses])

(note 699 698 701 0x4034e260 NOTE_INSN_BLOCK_END 0)

(insn 701 699 702 (set (reg/v:DF 62)
        (float_extend:DF (reg/v:SF 77))) -1 (nil)
    (nil))

(insn 702 701 704 (set (reg/v:DF 62)
        (mult:DF (reg/v:DF 62)
            (reg/v:DF 60))) -1 (nil)
    (nil))

(insn 704 702 705 (set (reg:DF 128)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC62")) 0)) -1 (nil)
    (nil))

(insn 705 704 706 (set (reg/v:DF 62)
        (mult:DF (reg/v:DF 62)
            (reg:DF 128))) -1 (nil)
    (nil))

(insn 706 705 708 (set (reg/v:DF 62)
        (div:DF (reg/v:DF 62)
            (reg:DF 126))) -1 (nil)
    (nil))

(insn 708 706 710 (set (reg:DF 129)
        (reg/v:DF 62)) -1 (nil)
    (nil))

(insn 710 708 713 (set (mem:DF (reg/v:SI 58) 0)
        (reg:DF 129)) -1 (nil)
    (nil))

(insn 713 710 714 (set (reg:DF 131)
        (mem:DF (plus:SI (reg/v:SI 49)
                (const_int 8 [0x8])) 0)) -1 (nil)
    (nil))

(insn 714 713 716 (set (reg:DF 130)
        (minus:DF (reg:DF 131)
            (mem:DF (reg/v:SI 49) 0))) -1 (nil)
    (nil))

(insn 716 714 717 (set (reg/v:DF 132)
        (reg:DF 130)) -1 (nil)
    (nil))

(note 717 716 719 0x4034ea40 NOTE_INSN_BLOCK_BEG 0)

(insn/i 719 717 720 (parallel[ 
            (set (reg:DF 134)
                (abs:DF (reg/v:DF 132)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 720 719 721 (set (reg:DF 133)
        (reg:DF 134)) -1 (nil)
    (nil))

(jump_insn/i 721 720 722 (set (pc)
        (label_ref 724)) -1 (nil)
    (nil))

(barrier/i 722 721 723)

(insn/i 723 722 724 (clobber (reg:DF 133)) -1 (nil)
    (nil))

(code_label/i 724 723 725 345 "" "" [0 uses])

(note 725 724 727 0x4034ea40 NOTE_INSN_BLOCK_END 0)

(insn 727 725 728 (set (reg/v:DF 63)
        (float_extend:DF (reg/v:SF 77))) -1 (nil)
    (nil))

(insn 728 727 730 (set (reg/v:DF 63)
        (mult:DF (reg/v:DF 63)
            (reg/v:DF 61))) -1 (nil)
    (nil))

(insn 730 728 731 (set (reg:DF 135)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC62")) 0)) -1 (nil)
    (nil))

(insn 731 730 732 (set (reg/v:DF 63)
        (mult:DF (reg/v:DF 63)
            (reg:DF 135))) -1 (nil)
    (nil))

(insn 732 731 734 (set (reg/v:DF 63)
        (div:DF (reg/v:DF 63)
            (reg:DF 133))) -1 (nil)
    (nil))

(insn 734 732 736 (set (reg:DF 136)
        (reg/v:DF 63)) -1 (nil)
    (nil))

(insn 736 734 739 (set (mem:DF (reg/v:SI 59) 0)
        (reg:DF 136)) -1 (nil)
    (nil))

(insn 739 736 740 (parallel[ 
            (set (reg:SI 137)
                (neg:SI (reg/v:SI 80)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 740 739 742 (set (reg/v:DF 87)
        (float:DF (reg:SI 137))) -1 (nil)
    (nil))

(insn 742 740 743 (set (reg:DF 138)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC63")) 0)) -1 (nil)
    (nil))

(insn 743 742 746 (set (reg/v:DF 87)
        (mult:DF (reg/v:DF 87)
            (reg:DF 138))) -1 (nil)
    (nil))

(insn 746 743 747 (parallel[ 
            (set (reg:SI 139)
                (neg:SI (reg/v:SI 78)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 747 746 749 (set (reg/v:DF 88)
        (float:DF (reg:SI 139))) -1 (nil)
    (nil))

(insn 749 747 750 (set (reg:DF 140)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC63")) 0)) -1 (nil)
    (nil))

(insn 750 749 753 (set (reg/v:DF 88)
        (mult:DF (reg/v:DF 88)
            (reg:DF 140))) -1 (nil)
    (nil))

(insn 753 750 754 (set (reg/v:SI 69)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(note 754 753 775 NOTE_INSN_LOOP_BEG 0)

(jump_insn 775 754 776 (set (pc)
        (label_ref 755)) -1 (nil)
    (nil))

(barrier 776 775 774)

(code_label 774 776 761 350 "" "" [0 uses])

(code_label 761 774 765 349 "" "" [0 uses])

(insn 765 761 767 (set (mem:DF (plus:SI (mult:SI (reg/v:SI 69)
                    (const_int 8 [0x8]))
                (reg/v:SI 54)) 0)
        (const_double:DF (cc0) 0 [0x0] 0 [0x0] 0 [0x0])) -1 (nil)
    (nil))

(insn 767 765 769 (set (mem:DF (plus:SI (mult:SI (reg/v:SI 69)
                    (const_int 8 [0x8]))
                (reg/v:SI 55)) 0)
        (const_double:DF (cc0) 0 [0x0] 0 [0x0] 0 [0x0])) -1 (nil)
    (nil))

(insn 769 767 770 (set (mem:DF (plus:SI (mult:SI (reg/v:SI 69)
                    (const_int 8 [0x8]))
                (reg/v:SI 86)) 0)
        (const_double:DF (cc0) 0 [0x0] 0 [0x0] 0 [0x0])) -1 (nil)
    (nil))

(note 770 769 771 NOTE_INSN_LOOP_CONT 0)

(code_label 771 770 773 348 "" "" [0 uses])

(insn 773 771 755 (parallel[ 
            (set (reg/v:SI 69)
                (plus:SI (reg/v:SI 69)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 755 773 756 346 "" "" [0 uses])

(insn 756 755 757 (parallel[ 
            (set (reg:SI 141)
                (mult:SI (reg/v:SI 80)
                    (reg/v:SI 78)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 757 756 758 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 69)
            (reg:SI 141))) -1 (nil)
    (nil))

(jump_insn 758 757 759 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 761)
            (pc))) -1 (nil)
    (nil))

(jump_insn 759 758 760 (set (pc)
        (label_ref 780)) -1 (nil)
    (nil))

(barrier 760 759 777)

(jump_insn 777 760 778 (set (pc)
        (label_ref 774)) -1 (nil)
    (nil))

(barrier 778 777 779)

(note 779 778 780 NOTE_INSN_LOOP_END 0)

(code_label 780 779 782 347 "" "" [0 uses])

(note 782 780 952 0x403662e0 NOTE_INSN_BLOCK_BEG 0)

(jump_insn 952 782 953 (set (pc)
        (label_ref 998)) -1 (nil)
    (nil))

(barrier 953 952 964)

(insn 964 953 955 (set (reg:SI 167)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 955 964 956 (set (reg:SI 170)
        (reg:SI 167)) -1 (nil)
    (nil))

(insn 956 955 957 (set (reg:SI 19 dirflag)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 957 956 959 (parallel[ 
            (set (reg:SI 168)
                (unspec:SI[ 
                        (mem:BLK (reg:SI 170) 0)
                        (const_int 0 [0x0])
                        (const_int 1 [0x1])
                        (const_int -1 [0xffffffff])
                    ]  0))
            (use (reg:SI 19 dirflag))
            (clobber (reg:SI 170))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 959 957 961 (set (reg:SI 169)
        (not:SI (reg:SI 168))) -1 (nil)
    (nil))

(insn 961 959 966 (parallel[ 
            (set (reg/v:SI 142)
                (plus:SI (reg:SI 169)
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 966 961 967 (set (reg/v:SI 143)
        (const_int 3 [0x3])) -1 (nil)
    (nil))

(insn 967 966 968 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 142)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 968 967 969 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 998)
            (pc))) -1 (nil)
    (nil))

(insn 969 968 970 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 143)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 970 969 972 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 998)
            (pc))) -1 (nil)
    (nil))

(insn 972 970 974 (set (reg:SI 171)
        (symbol_ref:SI ("*.LC64"))) -1 (nil)
    (expr_list:REG_EQUAL (symbol_ref:SI ("*.LC64"))
        (nil)))

(insn 974 972 975 (set (reg:SI 172)
        (reg/v:SI 143)) -1 (nil)
    (nil))

(insn 975 974 976 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 172)
            (reg/v:SI 142))) -1 (nil)
    (nil))

(jump_insn 976 975 978 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 979)
            (pc))) -1 (nil)
    (nil))

(insn 978 976 979 (set (reg:SI 172)
        (reg/v:SI 142)) -1 (nil)
    (nil))

(code_label 979 978 981 365 "" "" [0 uses])

(insn 981 979 983 (parallel[ 
            (set (reg:SI 173)
                (plus:SI (reg:SI 172)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 983 981 985 (set (reg:SI 174)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 985 983 987 (set (reg:SI 175)
        (reg:SI 171)) -1 (nil)
    (nil))

(insn 987 985 988 (set (reg:SI 176)
        (reg:SI 173)) -1 (nil)
    (nil))

(insn 988 987 989 (set (reg:SI 19 dirflag)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 989 988 990 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 176)
            (reg:SI 176))) -1 (nil)
    (nil))

(insn 990 989 991 (parallel[ 
            (set (reg:CC 17 flags)
                (if_then_else:CC (ne (reg:SI 176)
                        (const_int 0 [0x0]))
                    (compare:SI (mem:BLK (reg:SI 174) 0)
                        (mem:BLK (reg:SI 175) 0))
                    (const_int 0 [0x0])))
            (use (const_int 1 [0x1]))
            (use (reg:CC 17 flags))
            (use (reg:SI 19 dirflag))
            (clobber (reg:SI 174))
            (clobber (reg:SI 175))
            (clobber (reg:SI 176))
        ] ) -1 (nil)
    (nil))

(insn 991 990 992 (set (reg:QI 177)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 992 991 993 (set (reg:QI 178)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 993 992 995 (parallel[ 
            (set (subreg:QI (reg:SI 166) 0)
                (minus:QI (reg:QI 177)
                    (reg:QI 178)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 995 993 996 (set (reg:SI 166)
        (sign_extend:SI (subreg:QI (reg:SI 166) 0))) -1 (nil)
    (nil))

(jump_insn 996 995 997 (set (pc)
        (label_ref 1067)) -1 (nil)
    (nil))

(barrier 997 996 998)

(code_label 998 997 999 363 "" "" [0 uses])

(jump_insn 999 998 1000 (set (pc)
        (label_ref 1028)) -1 (nil)
    (nil))

(barrier 1000 999 1011)

(insn 1011 1000 1002 (set (reg:SI 179)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 1002 1011 1003 (set (reg:SI 182)
        (reg:SI 179)) -1 (nil)
    (nil))

(insn 1003 1002 1004 (set (reg:SI 19 dirflag)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 1004 1003 1006 (parallel[ 
            (set (reg:SI 180)
                (unspec:SI[ 
                        (mem:BLK (reg:SI 182) 0)
                        (const_int 0 [0x0])
                        (const_int 1 [0x1])
                        (const_int -1 [0xffffffff])
                    ]  0))
            (use (reg:SI 19 dirflag))
            (clobber (reg:SI 182))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1006 1004 1008 (set (reg:SI 181)
        (not:SI (reg:SI 180))) -1 (nil)
    (nil))

(insn 1008 1006 1012 (parallel[ 
            (set (reg/v:SI 142)
                (plus:SI (reg:SI 181)
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1012 1008 1013 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 142)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 1013 1012 784 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1028)
            (pc))) -1 (nil)
    (nil))

(note 784 1013 786 0x40357f80 NOTE_INSN_BLOCK_BEG 0)

(insn 786 784 788 (parallel[ 
            (set (reg/v:SI 144)
                (zero_extend:SI (mem:QI (reg/v:SI 67) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 788 786 789 (parallel[ 
            (set (reg/v:SI 144)
                (plus:SI (reg/v:SI 144)
                    (const_int -67 [0xffffffbd])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 789 788 790 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 142)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 790 789 791 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 822)
            (pc))) -1 (nil)
    (nil))

(insn 791 790 792 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 144)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 792 791 795 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 822)
            (pc))) -1 (nil)
    (nil))

(insn 795 792 797 (parallel[ 
            (set (reg/v:SI 144)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 1 [0x1])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 797 795 799 (parallel[ 
            (set (reg/v:SI 144)
                (plus:SI (reg/v:SI 144)
                    (const_int -75 [0xffffffb5])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 799 797 800 (set (reg:SI 145)
        (reg/v:SI 144)) -1 (nil)
    (nil))

(insn 800 799 801 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 142)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 801 800 802 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 821)
            (pc))) -1 (nil)
    (nil))

(insn 802 801 803 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 144)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 803 802 806 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 821)
            (pc))) -1 (nil)
    (nil))

(insn 806 803 808 (parallel[ 
            (set (reg/v:SI 144)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 2 [0x2])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 808 806 810 (parallel[ 
            (set (reg/v:SI 144)
                (plus:SI (reg/v:SI 144)
                    (const_int -66 [0xffffffbe])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 810 808 811 (set (reg:SI 146)
        (reg/v:SI 144)) -1 (nil)
    (nil))

(insn 811 810 812 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 142)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 812 811 813 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 820)
            (pc))) -1 (nil)
    (nil))

(insn 813 812 814 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 144)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 814 813 815 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 820)
            (pc))) -1 (nil)
    (nil))

(insn 815 814 817 (parallel[ 
            (set (reg/v:SI 144)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 3 [0x3])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 817 815 819 (parallel[ 
            (set (reg/v:SI 144)
                (plus:SI (reg/v:SI 144)
                    (const_int 0 [0x0])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 819 817 820 (set (reg:SI 147)
        (reg/v:SI 144)) -1 (nil)
    (nil))

(code_label 820 819 821 353 "" "" [0 uses])

(code_label 821 820 822 352 "" "" [0 uses])

(code_label 822 821 823 351 "" "" [0 uses])

(note 823 822 1017 0x40357f80 NOTE_INSN_BLOCK_END 0)

(insn 1017 823 1018 (set (reg:SI 166)
        (reg/v:SI 144)) -1 (nil)
    (nil))

(jump_insn 1018 1017 1019 (set (pc)
        (label_ref 1025)) -1 (nil)
    (nil))

(barrier 1019 1018 1020)

(code_label 1020 1019 824 368 "" "" [0 uses])

(note 824 1020 827 0x4035a420 NOTE_INSN_BLOCK_BEG 0)

(insn 827 824 828 (set (reg/v:SI 148)
        (symbol_ref:SI ("*.LC64"))) -1 (nil)
    (nil))

(insn 828 827 829 (parallel[ 
            (set (reg/v:SI 149)
                (zero_extend:SI (mem:QI (reg/v:SI 67) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 829 828 831 (parallel[ 
            (set (reg:SI 150)
                (zero_extend:SI (mem:QI (reg/v:SI 148) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 831 829 832 (parallel[ 
            (set (reg/v:SI 149)
                (minus:SI (reg/v:SI 149)
                    (reg:SI 150)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 832 831 833 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 142)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 833 832 834 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 868)
            (pc))) -1 (nil)
    (nil))

(insn 834 833 835 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 149)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 835 834 838 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 868)
            (pc))) -1 (nil)
    (nil))

(insn 838 835 839 (parallel[ 
            (set (reg/v:SI 149)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 1 [0x1])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 839 838 841 (parallel[ 
            (set (reg:SI 151)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 148)
                            (const_int 1 [0x1])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 841 839 843 (parallel[ 
            (set (reg/v:SI 149)
                (minus:SI (reg/v:SI 149)
                    (reg:SI 151)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 843 841 844 (set (reg:SI 152)
        (reg/v:SI 149)) -1 (nil)
    (nil))

(insn 844 843 845 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 142)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 845 844 846 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 867)
            (pc))) -1 (nil)
    (nil))

(insn 846 845 847 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 149)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 847 846 850 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 867)
            (pc))) -1 (nil)
    (nil))

(insn 850 847 851 (parallel[ 
            (set (reg/v:SI 149)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 2 [0x2])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 851 850 853 (parallel[ 
            (set (reg:SI 153)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 148)
                            (const_int 2 [0x2])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 853 851 855 (parallel[ 
            (set (reg/v:SI 149)
                (minus:SI (reg/v:SI 149)
                    (reg:SI 153)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 855 853 856 (set (reg:SI 154)
        (reg/v:SI 149)) -1 (nil)
    (nil))

(insn 856 855 857 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 142)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 857 856 858 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 866)
            (pc))) -1 (nil)
    (nil))

(insn 858 857 859 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 149)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 859 858 860 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 866)
            (pc))) -1 (nil)
    (nil))

(insn 860 859 861 (parallel[ 
            (set (reg/v:SI 149)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 3 [0x3])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 861 860 863 (parallel[ 
            (set (reg:SI 155)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 148)
                            (const_int 3 [0x3])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 863 861 865 (parallel[ 
            (set (reg/v:SI 149)
                (minus:SI (reg/v:SI 149)
                    (reg:SI 155)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 865 863 866 (set (reg:SI 156)
        (reg/v:SI 149)) -1 (nil)
    (nil))

(code_label 866 865 867 356 "" "" [0 uses])

(code_label 867 866 868 355 "" "" [0 uses])

(code_label 868 867 869 354 "" "" [0 uses])

(note 869 868 1024 0x4035a420 NOTE_INSN_BLOCK_END 0)

(insn 1024 869 1025 (set (reg:SI 166)
        (reg/v:SI 149)) -1 (nil)
    (nil))

(code_label 1025 1024 1026 369 "" "" [0 uses])

(jump_insn 1026 1025 1027 (set (pc)
        (label_ref 1066)) -1 (nil)
    (nil))

(barrier 1027 1026 1028)

(code_label 1028 1027 1030 366 "" "" [0 uses])

(insn 1030 1028 1031 (set (reg/v:SI 143)
        (const_int 3 [0x3])) -1 (nil)
    (nil))

(insn 1031 1030 1032 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 143)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 1032 1031 1033 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1049)
            (pc))) -1 (nil)
    (nil))

(jump_insn 1033 1032 1034 (set (pc)
        (label_ref 1041)) -1 (nil)
    (nil))

(barrier 1034 1033 870)

(note 870 1034 872 0x403609c0 NOTE_INSN_BLOCK_BEG 0)

(insn 872 870 874 (parallel[ 
            (set (reg/v:SI 157)
                (zero_extend:SI (mem:QI (reg/v:SI 67) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 874 872 875 (parallel[ 
            (set (reg/v:SI 157)
                (plus:SI (reg/v:SI 157)
                    (const_int -67 [0xffffffbd])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 875 874 876 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 143)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 876 875 877 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 908)
            (pc))) -1 (nil)
    (nil))

(insn 877 876 878 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 878 877 881 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 908)
            (pc))) -1 (nil)
    (nil))

(insn 881 878 883 (parallel[ 
            (set (reg/v:SI 157)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 1 [0x1])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 883 881 885 (parallel[ 
            (set (reg/v:SI 157)
                (plus:SI (reg/v:SI 157)
                    (const_int -75 [0xffffffb5])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 885 883 886 (set (reg:SI 158)
        (reg/v:SI 157)) -1 (nil)
    (nil))

(insn 886 885 887 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 143)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 887 886 888 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 907)
            (pc))) -1 (nil)
    (nil))

(insn 888 887 889 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 889 888 892 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 907)
            (pc))) -1 (nil)
    (nil))

(insn 892 889 894 (parallel[ 
            (set (reg/v:SI 157)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 2 [0x2])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 894 892 896 (parallel[ 
            (set (reg/v:SI 157)
                (plus:SI (reg/v:SI 157)
                    (const_int -66 [0xffffffbe])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 896 894 897 (set (reg:SI 159)
        (reg/v:SI 157)) -1 (nil)
    (nil))

(insn 897 896 898 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 143)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 898 897 899 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 906)
            (pc))) -1 (nil)
    (nil))

(insn 899 898 900 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 900 899 901 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 906)
            (pc))) -1 (nil)
    (nil))

(insn 901 900 903 (parallel[ 
            (set (reg/v:SI 157)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 3 [0x3])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 903 901 905 (parallel[ 
            (set (reg/v:SI 157)
                (plus:SI (reg/v:SI 157)
                    (const_int 0 [0x0])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 905 903 906 (set (reg:SI 160)
        (reg/v:SI 157)) -1 (nil)
    (nil))

(code_label 906 905 907 359 "" "" [0 uses])

(code_label 907 906 908 358 "" "" [0 uses])

(code_label 908 907 909 357 "" "" [0 uses])

(note 909 908 1038 0x403609c0 NOTE_INSN_BLOCK_END 0)

(insn 1038 909 1039 (set (reg:SI 166)
        (reg/v:SI 157)) -1 (nil)
    (nil))

(jump_insn 1039 1038 1040 (set (pc)
        (label_ref 1046)) -1 (nil)
    (nil))

(barrier 1040 1039 1041)

(code_label 1041 1040 910 372 "" "" [0 uses])

(note 910 1041 913 0x403642a0 NOTE_INSN_BLOCK_BEG 0)

(insn 913 910 914 (set (reg/v:SI 161)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 914 913 916 (parallel[ 
            (set (reg/v:SI 162)
                (zero_extend:SI (mem:QI (reg/v:SI 161) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 916 914 917 (parallel[ 
            (set (reg/v:SI 162)
                (plus:SI (reg/v:SI 162)
                    (const_int -67 [0xffffffbd])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 917 916 918 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 143)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 918 917 919 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 950)
            (pc))) -1 (nil)
    (nil))

(insn 919 918 920 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 162)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 920 919 923 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 950)
            (pc))) -1 (nil)
    (nil))

(insn 923 920 925 (parallel[ 
            (set (reg/v:SI 162)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 161)
                            (const_int 1 [0x1])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 925 923 927 (parallel[ 
            (set (reg/v:SI 162)
                (plus:SI (reg/v:SI 162)
                    (const_int -75 [0xffffffb5])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 927 925 928 (set (reg:SI 163)
        (reg/v:SI 162)) -1 (nil)
    (nil))

(insn 928 927 929 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 143)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 929 928 930 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 949)
            (pc))) -1 (nil)
    (nil))

(insn 930 929 931 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 162)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 931 930 934 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 949)
            (pc))) -1 (nil)
    (nil))

(insn 934 931 936 (parallel[ 
            (set (reg/v:SI 162)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 161)
                            (const_int 2 [0x2])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 936 934 938 (parallel[ 
            (set (reg/v:SI 162)
                (plus:SI (reg/v:SI 162)
                    (const_int -66 [0xffffffbe])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 938 936 939 (set (reg:SI 164)
        (reg/v:SI 162)) -1 (nil)
    (nil))

(insn 939 938 940 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 143)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 940 939 941 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 948)
            (pc))) -1 (nil)
    (nil))

(insn 941 940 942 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 162)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 942 941 943 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 948)
            (pc))) -1 (nil)
    (nil))

(insn 943 942 945 (parallel[ 
            (set (reg/v:SI 162)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 161)
                            (const_int 3 [0x3])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 945 943 947 (parallel[ 
            (set (reg/v:SI 162)
                (plus:SI (reg/v:SI 162)
                    (const_int 0 [0x0])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 947 945 948 (set (reg:SI 165)
        (reg/v:SI 162)) -1 (nil)
    (nil))

(code_label 948 947 949 362 "" "" [0 uses])

(code_label 949 948 950 361 "" "" [0 uses])

(code_label 950 949 951 360 "" "" [0 uses])

(note 951 950 1045 0x403642a0 NOTE_INSN_BLOCK_END 0)

(insn 1045 951 1046 (set (reg:SI 166)
        (reg/v:SI 162)) -1 (nil)
    (nil))

(code_label 1046 1045 1047 373 "" "" [0 uses])

(jump_insn 1047 1046 1048 (set (pc)
        (label_ref 1065)) -1 (nil)
    (nil))

(barrier 1048 1047 1049)

(code_label 1049 1048 1051 370 "" "" [0 uses])

(insn 1051 1049 1053 (set (reg:SI 183)
        (symbol_ref:SI ("*.LC64"))) -1 (nil)
    (expr_list:REG_EQUAL (symbol_ref:SI ("*.LC64"))
        (nil)))

(insn 1053 1051 1055 (set (reg:SI 184)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 1055 1053 1057 (set (reg:SI 185)
        (reg:SI 183)) -1 (nil)
    (nil))

(insn 1057 1055 1058 (set (reg:SI 186)
        (const_int 4 [0x4])) -1 (nil)
    (nil))

(insn 1058 1057 1059 (set (reg:SI 19 dirflag)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 1059 1058 1060 (parallel[ 
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:SI 184) 0)
                    (mem:BLK (reg:SI 185) 0)))
            (use (reg:SI 186))
            (use (const_int 1 [0x1]))
            (use (reg:SI 19 dirflag))
            (clobber (reg:SI 184))
            (clobber (reg:SI 185))
            (clobber (reg:SI 186))
        ] ) -1 (nil)
    (nil))

(insn 1060 1059 1061 (set (reg:QI 187)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 1061 1060 1062 (set (reg:QI 188)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 1062 1061 1064 (parallel[ 
            (set (subreg:QI (reg:SI 166) 0)
                (minus:QI (reg:QI 187)
                    (reg:QI 188)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1064 1062 1065 (set (reg:SI 166)
        (sign_extend:SI (subreg:QI (reg:SI 166) 0))) -1 (nil)
    (nil))

(code_label 1065 1064 1066 371 "" "" [0 uses])

(code_label 1066 1065 1067 367 "" "" [0 uses])

(code_label 1067 1066 1068 364 "" "" [0 uses])

(note 1068 1067 1071 0x403662e0 NOTE_INSN_BLOCK_END 0)

(insn 1071 1068 1072 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 166)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1072 1071 1073 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1075)
            (pc))) -1 (nil)
    (nil))

(jump_insn 1073 1072 1074 (set (pc)
        (label_ref 2175)) -1 (nil)
    (nil))

(barrier 1074 1073 1075)

(code_label 1075 1074 1077 374 "" "" [0 uses])

(note 1077 1075 1247 0x4037ae20 NOTE_INSN_BLOCK_BEG 0)

(jump_insn 1247 1077 1248 (set (pc)
        (label_ref 1293)) -1 (nil)
    (nil))

(barrier 1248 1247 1259)

(insn 1259 1248 1250 (set (reg:SI 214)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 1250 1259 1251 (set (reg:SI 217)
        (reg:SI 214)) -1 (nil)
    (nil))

(insn 1251 1250 1252 (set (reg:SI 19 dirflag)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 1252 1251 1254 (parallel[ 
            (set (reg:SI 215)
                (unspec:SI[ 
                        (mem:BLK (reg:SI 217) 0)
                        (const_int 0 [0x0])
                        (const_int 1 [0x1])
                        (const_int -1 [0xffffffff])
                    ]  0))
            (use (reg:SI 19 dirflag))
            (clobber (reg:SI 217))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1254 1252 1256 (set (reg:SI 216)
        (not:SI (reg:SI 215))) -1 (nil)
    (nil))

(insn 1256 1254 1261 (parallel[ 
            (set (reg/v:SI 189)
                (plus:SI (reg:SI 216)
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1261 1256 1262 (set (reg/v:SI 190)
        (const_int 6 [0x6])) -1 (nil)
    (nil))

(insn 1262 1261 1263 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 189)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 1263 1262 1264 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1293)
            (pc))) -1 (nil)
    (nil))

(insn 1264 1263 1265 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 190)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 1265 1264 1267 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1293)
            (pc))) -1 (nil)
    (nil))

(insn 1267 1265 1269 (set (reg:SI 218)
        (symbol_ref:SI ("*.LC65"))) -1 (nil)
    (expr_list:REG_EQUAL (symbol_ref:SI ("*.LC65"))
        (nil)))

(insn 1269 1267 1270 (set (reg:SI 219)
        (reg/v:SI 190)) -1 (nil)
    (nil))

(insn 1270 1269 1271 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 219)
            (reg/v:SI 189))) -1 (nil)
    (nil))

(jump_insn 1271 1270 1273 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1274)
            (pc))) -1 (nil)
    (nil))

(insn 1273 1271 1274 (set (reg:SI 219)
        (reg/v:SI 189)) -1 (nil)
    (nil))

(code_label 1274 1273 1276 390 "" "" [0 uses])

(insn 1276 1274 1278 (parallel[ 
            (set (reg:SI 220)
                (plus:SI (reg:SI 219)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1278 1276 1280 (set (reg:SI 221)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 1280 1278 1282 (set (reg:SI 222)
        (reg:SI 218)) -1 (nil)
    (nil))

(insn 1282 1280 1283 (set (reg:SI 223)
        (reg:SI 220)) -1 (nil)
    (nil))

(insn 1283 1282 1284 (set (reg:SI 19 dirflag)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 1284 1283 1285 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 223)
            (reg:SI 223))) -1 (nil)
    (nil))

(insn 1285 1284 1286 (parallel[ 
            (set (reg:CC 17 flags)
                (if_then_else:CC (ne (reg:SI 223)
                        (const_int 0 [0x0]))
                    (compare:SI (mem:BLK (reg:SI 221) 0)
                        (mem:BLK (reg:SI 222) 0))
                    (const_int 0 [0x0])))
            (use (const_int 1 [0x1]))
            (use (reg:CC 17 flags))
            (use (reg:SI 19 dirflag))
            (clobber (reg:SI 221))
            (clobber (reg:SI 222))
            (clobber (reg:SI 223))
        ] ) -1 (nil)
    (nil))

(insn 1286 1285 1287 (set (reg:QI 224)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 1287 1286 1288 (set (reg:QI 225)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 1288 1287 1290 (parallel[ 
            (set (subreg:QI (reg:SI 213) 0)
                (minus:QI (reg:QI 224)
                    (reg:QI 225)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1290 1288 1291 (set (reg:SI 213)
        (sign_extend:SI (subreg:QI (reg:SI 213) 0))) -1 (nil)
    (nil))

(jump_insn 1291 1290 1292 (set (pc)
        (label_ref 1362)) -1 (nil)
    (nil))

(barrier 1292 1291 1293)

(code_label 1293 1292 1294 388 "" "" [0 uses])

(jump_insn 1294 1293 1295 (set (pc)
        (label_ref 1323)) -1 (nil)
    (nil))

(barrier 1295 1294 1306)

(insn 1306 1295 1297 (set (reg:SI 226)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 1297 1306 1298 (set (reg:SI 229)
        (reg:SI 226)) -1 (nil)
    (nil))

(insn 1298 1297 1299 (set (reg:SI 19 dirflag)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 1299 1298 1301 (parallel[ 
            (set (reg:SI 227)
                (unspec:SI[ 
                        (mem:BLK (reg:SI 229) 0)
                        (const_int 0 [0x0])
                        (const_int 1 [0x1])
                        (const_int -1 [0xffffffff])
                    ]  0))
            (use (reg:SI 19 dirflag))
            (clobber (reg:SI 229))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1301 1299 1303 (set (reg:SI 228)
        (not:SI (reg:SI 227))) -1 (nil)
    (nil))

(insn 1303 1301 1307 (parallel[ 
            (set (reg/v:SI 189)
                (plus:SI (reg:SI 228)
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1307 1303 1308 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 189)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 1308 1307 1079 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1323)
            (pc))) -1 (nil)
    (nil))

(note 1079 1308 1081 0x4036dae0 NOTE_INSN_BLOCK_BEG 0)

(insn 1081 1079 1083 (parallel[ 
            (set (reg/v:SI 191)
                (zero_extend:SI (mem:QI (reg/v:SI 67) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1083 1081 1084 (parallel[ 
            (set (reg/v:SI 191)
                (plus:SI (reg/v:SI 191)
                    (const_int -67 [0xffffffbd])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1084 1083 1085 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 189)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1085 1084 1086 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1117)
            (pc))) -1 (nil)
    (nil))

(insn 1086 1085 1087 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 191)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1087 1086 1090 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1117)
            (pc))) -1 (nil)
    (nil))

(insn 1090 1087 1092 (parallel[ 
            (set (reg/v:SI 191)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 1 [0x1])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1092 1090 1094 (parallel[ 
            (set (reg/v:SI 191)
                (plus:SI (reg/v:SI 191)
                    (const_int -71 [0xffffffb9])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1094 1092 1095 (set (reg:SI 192)
        (reg/v:SI 191)) -1 (nil)
    (nil))

(insn 1095 1094 1096 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 189)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 1096 1095 1097 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1116)
            (pc))) -1 (nil)
    (nil))

(insn 1097 1096 1098 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 191)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1098 1097 1101 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1116)
            (pc))) -1 (nil)
    (nil))

(insn 1101 1098 1103 (parallel[ 
            (set (reg/v:SI 191)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 2 [0x2])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1103 1101 1105 (parallel[ 
            (set (reg/v:SI 191)
                (plus:SI (reg/v:SI 191)
                    (const_int -65 [0xffffffbf])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1105 1103 1106 (set (reg:SI 193)
        (reg/v:SI 191)) -1 (nil)
    (nil))

(insn 1106 1105 1107 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 189)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 1107 1106 1108 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1115)
            (pc))) -1 (nil)
    (nil))

(insn 1108 1107 1109 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 191)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1109 1108 1110 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1115)
            (pc))) -1 (nil)
    (nil))

(insn 1110 1109 1112 (parallel[ 
            (set (reg/v:SI 191)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 3 [0x3])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1112 1110 1114 (parallel[ 
            (set (reg/v:SI 191)
                (plus:SI (reg/v:SI 191)
                    (const_int -85 [0xffffffab])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1114 1112 1115 (set (reg:SI 194)
        (reg/v:SI 191)) -1 (nil)
    (nil))

(code_label 1115 1114 1116 378 "" "" [0 uses])

(code_label 1116 1115 1117 377 "" "" [0 uses])

(code_label 1117 1116 1118 376 "" "" [0 uses])

(note 1118 1117 1312 0x4036dae0 NOTE_INSN_BLOCK_END 0)

(insn 1312 1118 1313 (set (reg:SI 213)
        (reg/v:SI 191)) -1 (nil)
    (nil))

(jump_insn 1313 1312 1314 (set (pc)
        (label_ref 1320)) -1 (nil)
    (nil))

(barrier 1314 1313 1315)

(code_label 1315 1314 1119 393 "" "" [0 uses])

(note 1119 1315 1122 0x4036ff80 NOTE_INSN_BLOCK_BEG 0)

(insn 1122 1119 1123 (set (reg/v:SI 195)
        (symbol_ref:SI ("*.LC65"))) -1 (nil)
    (nil))

(insn 1123 1122 1124 (parallel[ 
            (set (reg/v:SI 196)
                (zero_extend:SI (mem:QI (reg/v:SI 67) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1124 1123 1126 (parallel[ 
            (set (reg:SI 197)
                (zero_extend:SI (mem:QI (reg/v:SI 195) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1126 1124 1127 (parallel[ 
            (set (reg/v:SI 196)
                (minus:SI (reg/v:SI 196)
                    (reg:SI 197)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1127 1126 1128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 189)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1128 1127 1129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1163)
            (pc))) -1 (nil)
    (nil))

(insn 1129 1128 1130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 196)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1130 1129 1133 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1163)
            (pc))) -1 (nil)
    (nil))

(insn 1133 1130 1134 (parallel[ 
            (set (reg/v:SI 196)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 1 [0x1])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1134 1133 1136 (parallel[ 
            (set (reg:SI 198)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 195)
                            (const_int 1 [0x1])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1136 1134 1138 (parallel[ 
            (set (reg/v:SI 196)
                (minus:SI (reg/v:SI 196)
                    (reg:SI 198)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1138 1136 1139 (set (reg:SI 199)
        (reg/v:SI 196)) -1 (nil)
    (nil))

(insn 1139 1138 1140 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 189)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 1140 1139 1141 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1162)
            (pc))) -1 (nil)
    (nil))

(insn 1141 1140 1142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 196)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1142 1141 1145 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1162)
            (pc))) -1 (nil)
    (nil))

(insn 1145 1142 1146 (parallel[ 
            (set (reg/v:SI 196)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 2 [0x2])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1146 1145 1148 (parallel[ 
            (set (reg:SI 200)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 195)
                            (const_int 2 [0x2])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1148 1146 1150 (parallel[ 
            (set (reg/v:SI 196)
                (minus:SI (reg/v:SI 196)
                    (reg:SI 200)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1150 1148 1151 (set (reg:SI 201)
        (reg/v:SI 196)) -1 (nil)
    (nil))

(insn 1151 1150 1152 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 189)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 1152 1151 1153 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1161)
            (pc))) -1 (nil)
    (nil))

(insn 1153 1152 1154 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 196)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1154 1153 1155 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1161)
            (pc))) -1 (nil)
    (nil))

(insn 1155 1154 1156 (parallel[ 
            (set (reg/v:SI 196)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 3 [0x3])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1156 1155 1158 (parallel[ 
            (set (reg:SI 202)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 195)
                            (const_int 3 [0x3])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1158 1156 1160 (parallel[ 
            (set (reg/v:SI 196)
                (minus:SI (reg/v:SI 196)
                    (reg:SI 202)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1160 1158 1161 (set (reg:SI 203)
        (reg/v:SI 196)) -1 (nil)
    (nil))

(code_label 1161 1160 1162 381 "" "" [0 uses])

(code_label 1162 1161 1163 380 "" "" [0 uses])

(code_label 1163 1162 1164 379 "" "" [0 uses])

(note 1164 1163 1319 0x4036ff80 NOTE_INSN_BLOCK_END 0)

(insn 1319 1164 1320 (set (reg:SI 213)
        (reg/v:SI 196)) -1 (nil)
    (nil))

(code_label 1320 1319 1321 394 "" "" [0 uses])

(jump_insn 1321 1320 1322 (set (pc)
        (label_ref 1361)) -1 (nil)
    (nil))

(barrier 1322 1321 1323)

(code_label 1323 1322 1325 391 "" "" [0 uses])

(insn 1325 1323 1326 (set (reg/v:SI 190)
        (const_int 6 [0x6])) -1 (nil)
    (nil))

(insn 1326 1325 1327 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 190)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 1327 1326 1328 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1344)
            (pc))) -1 (nil)
    (nil))

(jump_insn 1328 1327 1329 (set (pc)
        (label_ref 1336)) -1 (nil)
    (nil))

(barrier 1329 1328 1165)

(note 1165 1329 1167 0x40376520 NOTE_INSN_BLOCK_BEG 0)

(insn 1167 1165 1169 (parallel[ 
            (set (reg/v:SI 204)
                (zero_extend:SI (mem:QI (reg/v:SI 67) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1169 1167 1170 (parallel[ 
            (set (reg/v:SI 204)
                (plus:SI (reg/v:SI 204)
                    (const_int -67 [0xffffffbd])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1170 1169 1171 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 190)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1171 1170 1172 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1203)
            (pc))) -1 (nil)
    (nil))

(insn 1172 1171 1173 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 204)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1173 1172 1176 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1203)
            (pc))) -1 (nil)
    (nil))

(insn 1176 1173 1178 (parallel[ 
            (set (reg/v:SI 204)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 1 [0x1])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1178 1176 1180 (parallel[ 
            (set (reg/v:SI 204)
                (plus:SI (reg/v:SI 204)
                    (const_int -71 [0xffffffb9])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1180 1178 1181 (set (reg:SI 205)
        (reg/v:SI 204)) -1 (nil)
    (nil))

(insn 1181 1180 1182 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 190)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 1182 1181 1183 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1202)
            (pc))) -1 (nil)
    (nil))

(insn 1183 1182 1184 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 204)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1184 1183 1187 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1202)
            (pc))) -1 (nil)
    (nil))

(insn 1187 1184 1189 (parallel[ 
            (set (reg/v:SI 204)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 2 [0x2])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1189 1187 1191 (parallel[ 
            (set (reg/v:SI 204)
                (plus:SI (reg/v:SI 204)
                    (const_int -65 [0xffffffbf])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1191 1189 1192 (set (reg:SI 206)
        (reg/v:SI 204)) -1 (nil)
    (nil))

(insn 1192 1191 1193 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 190)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 1193 1192 1194 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1201)
            (pc))) -1 (nil)
    (nil))

(insn 1194 1193 1195 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 204)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1195 1194 1196 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1201)
            (pc))) -1 (nil)
    (nil))

(insn 1196 1195 1198 (parallel[ 
            (set (reg/v:SI 204)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 3 [0x3])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1198 1196 1200 (parallel[ 
            (set (reg/v:SI 204)
                (plus:SI (reg/v:SI 204)
                    (const_int -85 [0xffffffab])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1200 1198 1201 (set (reg:SI 207)
        (reg/v:SI 204)) -1 (nil)
    (nil))

(code_label 1201 1200 1202 384 "" "" [0 uses])

(code_label 1202 1201 1203 383 "" "" [0 uses])

(code_label 1203 1202 1204 382 "" "" [0 uses])

(note 1204 1203 1333 0x40376520 NOTE_INSN_BLOCK_END 0)

(insn 1333 1204 1334 (set (reg:SI 213)
        (reg/v:SI 204)) -1 (nil)
    (nil))

(jump_insn 1334 1333 1335 (set (pc)
        (label_ref 1341)) -1 (nil)
    (nil))

(barrier 1335 1334 1336)

(code_label 1336 1335 1205 397 "" "" [0 uses])

(note 1205 1336 1208 0x40379e00 NOTE_INSN_BLOCK_BEG 0)

(insn 1208 1205 1209 (set (reg/v:SI 208)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 1209 1208 1211 (parallel[ 
            (set (reg/v:SI 209)
                (zero_extend:SI (mem:QI (reg/v:SI 208) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1211 1209 1212 (parallel[ 
            (set (reg/v:SI 209)
                (plus:SI (reg/v:SI 209)
                    (const_int -67 [0xffffffbd])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1212 1211 1213 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 190)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1213 1212 1214 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1245)
            (pc))) -1 (nil)
    (nil))

(insn 1214 1213 1215 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 209)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1215 1214 1218 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1245)
            (pc))) -1 (nil)
    (nil))

(insn 1218 1215 1220 (parallel[ 
            (set (reg/v:SI 209)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 208)
                            (const_int 1 [0x1])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1220 1218 1222 (parallel[ 
            (set (reg/v:SI 209)
                (plus:SI (reg/v:SI 209)
                    (const_int -71 [0xffffffb9])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1222 1220 1223 (set (reg:SI 210)
        (reg/v:SI 209)) -1 (nil)
    (nil))

(insn 1223 1222 1224 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 190)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 1224 1223 1225 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1244)
            (pc))) -1 (nil)
    (nil))

(insn 1225 1224 1226 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 209)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1226 1225 1229 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1244)
            (pc))) -1 (nil)
    (nil))

(insn 1229 1226 1231 (parallel[ 
            (set (reg/v:SI 209)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 208)
                            (const_int 2 [0x2])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1231 1229 1233 (parallel[ 
            (set (reg/v:SI 209)
                (plus:SI (reg/v:SI 209)
                    (const_int -65 [0xffffffbf])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1233 1231 1234 (set (reg:SI 211)
        (reg/v:SI 209)) -1 (nil)
    (nil))

(insn 1234 1233 1235 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 190)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 1235 1234 1236 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1243)
            (pc))) -1 (nil)
    (nil))

(insn 1236 1235 1237 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 209)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1237 1236 1238 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1243)
            (pc))) -1 (nil)
    (nil))

(insn 1238 1237 1240 (parallel[ 
            (set (reg/v:SI 209)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 208)
                            (const_int 3 [0x3])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1240 1238 1242 (parallel[ 
            (set (reg/v:SI 209)
                (plus:SI (reg/v:SI 209)
                    (const_int -85 [0xffffffab])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1242 1240 1243 (set (reg:SI 212)
        (reg/v:SI 209)) -1 (nil)
    (nil))

(code_label 1243 1242 1244 387 "" "" [0 uses])

(code_label 1244 1243 1245 386 "" "" [0 uses])

(code_label 1245 1244 1246 385 "" "" [0 uses])

(note 1246 1245 1340 0x40379e00 NOTE_INSN_BLOCK_END 0)

(insn 1340 1246 1341 (set (reg:SI 213)
        (reg/v:SI 209)) -1 (nil)
    (nil))

(code_label 1341 1340 1342 398 "" "" [0 uses])

(jump_insn 1342 1341 1343 (set (pc)
        (label_ref 1360)) -1 (nil)
    (nil))

(barrier 1343 1342 1344)

(code_label 1344 1343 1346 395 "" "" [0 uses])

(insn 1346 1344 1348 (set (reg:SI 230)
        (symbol_ref:SI ("*.LC65"))) -1 (nil)
    (expr_list:REG_EQUAL (symbol_ref:SI ("*.LC65"))
        (nil)))

(insn 1348 1346 1350 (set (reg:SI 231)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 1350 1348 1352 (set (reg:SI 232)
        (reg:SI 230)) -1 (nil)
    (nil))

(insn 1352 1350 1353 (set (reg:SI 233)
        (const_int 7 [0x7])) -1 (nil)
    (nil))

(insn 1353 1352 1354 (set (reg:SI 19 dirflag)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 1354 1353 1355 (parallel[ 
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:SI 231) 0)
                    (mem:BLK (reg:SI 232) 0)))
            (use (reg:SI 233))
            (use (const_int 1 [0x1]))
            (use (reg:SI 19 dirflag))
            (clobber (reg:SI 231))
            (clobber (reg:SI 232))
            (clobber (reg:SI 233))
        ] ) -1 (nil)
    (nil))

(insn 1355 1354 1356 (set (reg:QI 234)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 1356 1355 1357 (set (reg:QI 235)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 1357 1356 1359 (parallel[ 
            (set (subreg:QI (reg:SI 213) 0)
                (minus:QI (reg:QI 234)
                    (reg:QI 235)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1359 1357 1360 (set (reg:SI 213)
        (sign_extend:SI (subreg:QI (reg:SI 213) 0))) -1 (nil)
    (nil))

(code_label 1360 1359 1361 396 "" "" [0 uses])

(code_label 1361 1360 1362 392 "" "" [0 uses])

(code_label 1362 1361 1363 389 "" "" [0 uses])

(note 1363 1362 1366 0x4037ae20 NOTE_INSN_BLOCK_END 0)

(insn 1366 1363 1367 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 213)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1367 1366 1368 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1370)
            (pc))) -1 (nil)
    (nil))

(jump_insn 1368 1367 1369 (set (pc)
        (label_ref 2174)) -1 (nil)
    (nil))

(barrier 1369 1368 1370)

(code_label 1370 1369 1372 399 "" "" [0 uses])

(note 1372 1370 1551 0x40392a60 NOTE_INSN_BLOCK_BEG 0)

(jump_insn 1551 1372 1552 (set (pc)
        (label_ref 1597)) -1 (nil)
    (nil))

(barrier 1552 1551 1563)

(insn 1563 1552 1554 (set (reg:SI 267)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 1554 1563 1555 (set (reg:SI 270)
        (reg:SI 267)) -1 (nil)
    (nil))

(insn 1555 1554 1556 (set (reg:SI 19 dirflag)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 1556 1555 1558 (parallel[ 
            (set (reg:SI 268)
                (unspec:SI[ 
                        (mem:BLK (reg:SI 270) 0)
                        (const_int 0 [0x0])
                        (const_int 1 [0x1])
                        (const_int -1 [0xffffffff])
                    ]  0))
            (use (reg:SI 19 dirflag))
            (clobber (reg:SI 270))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1558 1556 1560 (set (reg:SI 269)
        (not:SI (reg:SI 268))) -1 (nil)
    (nil))

(insn 1560 1558 1565 (parallel[ 
            (set (reg/v:SI 236)
                (plus:SI (reg:SI 269)
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1565 1560 1566 (set (reg/v:SI 237)
        (const_int 2 [0x2])) -1 (nil)
    (nil))

(insn 1566 1565 1567 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 236)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 1567 1566 1568 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1597)
            (pc))) -1 (nil)
    (nil))

(insn 1568 1567 1569 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 237)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 1569 1568 1571 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1597)
            (pc))) -1 (nil)
    (nil))

(insn 1571 1569 1573 (set (reg:SI 271)
        (symbol_ref:SI ("*.LC66"))) -1 (nil)
    (expr_list:REG_EQUAL (symbol_ref:SI ("*.LC66"))
        (nil)))

(insn 1573 1571 1574 (set (reg:SI 272)
        (reg/v:SI 237)) -1 (nil)
    (nil))

(insn 1574 1573 1575 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 272)
            (reg/v:SI 236))) -1 (nil)
    (nil))

(jump_insn 1575 1574 1577 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1578)
            (pc))) -1 (nil)
    (nil))

(insn 1577 1575 1578 (set (reg:SI 272)
        (reg/v:SI 236)) -1 (nil)
    (nil))

(code_label 1578 1577 1580 415 "" "" [0 uses])

(insn 1580 1578 1582 (parallel[ 
            (set (reg:SI 273)
                (plus:SI (reg:SI 272)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1582 1580 1584 (set (reg:SI 274)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 1584 1582 1586 (set (reg:SI 275)
        (reg:SI 271)) -1 (nil)
    (nil))

(insn 1586 1584 1587 (set (reg:SI 276)
        (reg:SI 273)) -1 (nil)
    (nil))

(insn 1587 1586 1588 (set (reg:SI 19 dirflag)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 1588 1587 1589 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 276)
            (reg:SI 276))) -1 (nil)
    (nil))

(insn 1589 1588 1590 (parallel[ 
            (set (reg:CC 17 flags)
                (if_then_else:CC (ne (reg:SI 276)
                        (const_int 0 [0x0]))
                    (compare:SI (mem:BLK (reg:SI 274) 0)
                        (mem:BLK (reg:SI 275) 0))
                    (const_int 0 [0x0])))
            (use (const_int 1 [0x1]))
            (use (reg:CC 17 flags))
            (use (reg:SI 19 dirflag))
            (clobber (reg:SI 274))
            (clobber (reg:SI 275))
            (clobber (reg:SI 276))
        ] ) -1 (nil)
    (nil))

(insn 1590 1589 1591 (set (reg:QI 277)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 1591 1590 1592 (set (reg:QI 278)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 1592 1591 1594 (parallel[ 
            (set (subreg:QI (reg:SI 266) 0)
                (minus:QI (reg:QI 277)
                    (reg:QI 278)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1594 1592 1595 (set (reg:SI 266)
        (sign_extend:SI (subreg:QI (reg:SI 266) 0))) -1 (nil)
    (nil))

(jump_insn 1595 1594 1596 (set (pc)
        (label_ref 1666)) -1 (nil)
    (nil))

(barrier 1596 1595 1597)

(code_label 1597 1596 1598 413 "" "" [0 uses])

(jump_insn 1598 1597 1599 (set (pc)
        (label_ref 1627)) -1 (nil)
    (nil))

(barrier 1599 1598 1610)

(insn 1610 1599 1601 (set (reg:SI 279)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 1601 1610 1602 (set (reg:SI 282)
        (reg:SI 279)) -1 (nil)
    (nil))

(insn 1602 1601 1603 (set (reg:SI 19 dirflag)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 1603 1602 1605 (parallel[ 
            (set (reg:SI 280)
                (unspec:SI[ 
                        (mem:BLK (reg:SI 282) 0)
                        (const_int 0 [0x0])
                        (const_int 1 [0x1])
                        (const_int -1 [0xffffffff])
                    ]  0))
            (use (reg:SI 19 dirflag))
            (clobber (reg:SI 282))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1605 1603 1607 (set (reg:SI 281)
        (not:SI (reg:SI 280))) -1 (nil)
    (nil))

(insn 1607 1605 1611 (parallel[ 
            (set (reg/v:SI 236)
                (plus:SI (reg:SI 281)
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1611 1607 1612 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 236)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 1612 1611 1374 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1627)
            (pc))) -1 (nil)
    (nil))

(note 1374 1612 1376 0x40385680 NOTE_INSN_BLOCK_BEG 0)

(insn 1376 1374 1378 (parallel[ 
            (set (reg/v:SI 238)
                (zero_extend:SI (mem:QI (reg/v:SI 67) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1378 1376 1379 (parallel[ 
            (set (reg/v:SI 238)
                (plus:SI (reg/v:SI 238)
                    (const_int -75 [0xffffffb5])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1379 1378 1380 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 236)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1380 1379 1381 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1415)
            (pc))) -1 (nil)
    (nil))

(insn 1381 1380 1382 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 238)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1382 1381 1385 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1415)
            (pc))) -1 (nil)
    (nil))

(insn 1385 1382 1387 (parallel[ 
            (set (reg/v:SI 238)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 1 [0x1])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1387 1385 1389 (parallel[ 
            (set (reg/v:SI 238)
                (plus:SI (reg/v:SI 238)
                    (const_int -66 [0xffffffbe])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1389 1387 1390 (set (reg:SI 239)
        (reg/v:SI 238)) -1 (nil)
    (nil))

(insn 1390 1389 1391 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 236)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 1391 1390 1392 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1414)
            (pc))) -1 (nil)
    (nil))

(insn 1392 1391 1393 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 238)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1393 1392 1396 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1414)
            (pc))) -1 (nil)
    (nil))

(insn 1396 1393 1398 (parallel[ 
            (set (reg/v:SI 238)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 2 [0x2])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1398 1396 1400 (parallel[ 
            (set (reg/v:SI 238)
                (plus:SI (reg/v:SI 238)
                    (const_int 0 [0x0])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1400 1398 1401 (set (reg:SI 240)
        (reg/v:SI 238)) -1 (nil)
    (nil))

(insn 1401 1400 1402 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 236)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 1402 1401 1403 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1413)
            (pc))) -1 (nil)
    (nil))

(insn 1403 1402 1404 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 238)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1404 1403 1405 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1413)
            (pc))) -1 (nil)
    (nil))

(insn 1405 1404 1407 (parallel[ 
            (set (reg/v:SI 238)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 3 [0x3])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1407 1405 1408 (set (reg:SI 241)
        (const:SI (plus:SI (symbol_ref:SI ("*.LC66"))
                (const_int 3 [0x3])))) -1 (nil)
    (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LC66"))
                (const_int 3 [0x3])))
        (nil)))

(insn 1408 1407 1410 (parallel[ 
            (set (reg:SI 242)
                (zero_extend:SI (mem:QI (reg:SI 241) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1410 1408 1412 (parallel[ 
            (set (reg/v:SI 238)
                (minus:SI (reg/v:SI 238)
                    (reg:SI 242)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1412 1410 1413 (set (reg:SI 243)
        (reg/v:SI 238)) -1 (nil)
    (nil))

(code_label 1413 1412 1414 403 "" "" [0 uses])

(code_label 1414 1413 1415 402 "" "" [0 uses])

(code_label 1415 1414 1416 401 "" "" [0 uses])

(note 1416 1415 1616 0x40385680 NOTE_INSN_BLOCK_END 0)

(insn 1616 1416 1617 (set (reg:SI 266)
        (reg/v:SI 238)) -1 (nil)
    (nil))

(jump_insn 1617 1616 1618 (set (pc)
        (label_ref 1624)) -1 (nil)
    (nil))

(barrier 1618 1617 1619)

(code_label 1619 1618 1417 418 "" "" [0 uses])

(note 1417 1619 1420 0x40387b20 NOTE_INSN_BLOCK_BEG 0)

(insn 1420 1417 1421 (set (reg/v:SI 244)
        (symbol_ref:SI ("*.LC66"))) -1 (nil)
    (nil))

(insn 1421 1420 1422 (parallel[ 
            (set (reg/v:SI 245)
                (zero_extend:SI (mem:QI (reg/v:SI 67) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1422 1421 1424 (parallel[ 
            (set (reg:SI 246)
                (zero_extend:SI (mem:QI (reg/v:SI 244) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1424 1422 1425 (parallel[ 
            (set (reg/v:SI 245)
                (minus:SI (reg/v:SI 245)
                    (reg:SI 246)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1425 1424 1426 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 236)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1426 1425 1427 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1461)
            (pc))) -1 (nil)
    (nil))

(insn 1427 1426 1428 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 245)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1428 1427 1431 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1461)
            (pc))) -1 (nil)
    (nil))

(insn 1431 1428 1432 (parallel[ 
            (set (reg/v:SI 245)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 1 [0x1])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1432 1431 1434 (parallel[ 
            (set (reg:SI 247)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 244)
                            (const_int 1 [0x1])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1434 1432 1436 (parallel[ 
            (set (reg/v:SI 245)
                (minus:SI (reg/v:SI 245)
                    (reg:SI 247)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1436 1434 1437 (set (reg:SI 248)
        (reg/v:SI 245)) -1 (nil)
    (nil))

(insn 1437 1436 1438 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 236)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 1438 1437 1439 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1460)
            (pc))) -1 (nil)
    (nil))

(insn 1439 1438 1440 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 245)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1440 1439 1443 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1460)
            (pc))) -1 (nil)
    (nil))

(insn 1443 1440 1444 (parallel[ 
            (set (reg/v:SI 245)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 2 [0x2])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1444 1443 1446 (parallel[ 
            (set (reg:SI 249)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 244)
                            (const_int 2 [0x2])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1446 1444 1448 (parallel[ 
            (set (reg/v:SI 245)
                (minus:SI (reg/v:SI 245)
                    (reg:SI 249)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1448 1446 1449 (set (reg:SI 250)
        (reg/v:SI 245)) -1 (nil)
    (nil))

(insn 1449 1448 1450 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 236)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 1450 1449 1451 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1459)
            (pc))) -1 (nil)
    (nil))

(insn 1451 1450 1452 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 245)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1452 1451 1453 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1459)
            (pc))) -1 (nil)
    (nil))

(insn 1453 1452 1454 (parallel[ 
            (set (reg/v:SI 245)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 3 [0x3])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1454 1453 1456 (parallel[ 
            (set (reg:SI 251)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 244)
                            (const_int 3 [0x3])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1456 1454 1458 (parallel[ 
            (set (reg/v:SI 245)
                (minus:SI (reg/v:SI 245)
                    (reg:SI 251)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1458 1456 1459 (set (reg:SI 252)
        (reg/v:SI 245)) -1 (nil)
    (nil))

(code_label 1459 1458 1460 406 "" "" [0 uses])

(code_label 1460 1459 1461 405 "" "" [0 uses])

(code_label 1461 1460 1462 404 "" "" [0 uses])

(note 1462 1461 1623 0x40387b20 NOTE_INSN_BLOCK_END 0)

(insn 1623 1462 1624 (set (reg:SI 266)
        (reg/v:SI 245)) -1 (nil)
    (nil))

(code_label 1624 1623 1625 419 "" "" [0 uses])

(jump_insn 1625 1624 1626 (set (pc)
        (label_ref 1665)) -1 (nil)
    (nil))

(barrier 1626 1625 1627)

(code_label 1627 1626 1629 416 "" "" [0 uses])

(insn 1629 1627 1630 (set (reg/v:SI 237)
        (const_int 2 [0x2])) -1 (nil)
    (nil))

(insn 1630 1629 1631 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 237)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 1631 1630 1632 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1648)
            (pc))) -1 (nil)
    (nil))

(jump_insn 1632 1631 1633 (set (pc)
        (label_ref 1640)) -1 (nil)
    (nil))

(barrier 1633 1632 1463)

(note 1463 1633 1465 0x4038d120 NOTE_INSN_BLOCK_BEG 0)

(insn 1465 1463 1467 (parallel[ 
            (set (reg/v:SI 253)
                (zero_extend:SI (mem:QI (reg/v:SI 67) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1467 1465 1468 (parallel[ 
            (set (reg/v:SI 253)
                (plus:SI (reg/v:SI 253)
                    (const_int -75 [0xffffffb5])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1468 1467 1469 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 237)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1469 1468 1470 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1504)
            (pc))) -1 (nil)
    (nil))

(insn 1470 1469 1471 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 253)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1471 1470 1474 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1504)
            (pc))) -1 (nil)
    (nil))

(insn 1474 1471 1476 (parallel[ 
            (set (reg/v:SI 253)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 1 [0x1])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1476 1474 1478 (parallel[ 
            (set (reg/v:SI 253)
                (plus:SI (reg/v:SI 253)
                    (const_int -66 [0xffffffbe])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1478 1476 1479 (set (reg:SI 254)
        (reg/v:SI 253)) -1 (nil)
    (nil))

(insn 1479 1478 1480 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 237)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 1480 1479 1481 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1503)
            (pc))) -1 (nil)
    (nil))

(insn 1481 1480 1482 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 253)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1482 1481 1485 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1503)
            (pc))) -1 (nil)
    (nil))

(insn 1485 1482 1487 (parallel[ 
            (set (reg/v:SI 253)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 2 [0x2])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1487 1485 1489 (parallel[ 
            (set (reg/v:SI 253)
                (plus:SI (reg/v:SI 253)
                    (const_int 0 [0x0])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1489 1487 1490 (set (reg:SI 255)
        (reg/v:SI 253)) -1 (nil)
    (nil))

(insn 1490 1489 1491 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 237)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 1491 1490 1492 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1502)
            (pc))) -1 (nil)
    (nil))

(insn 1492 1491 1493 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 253)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1493 1492 1494 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1502)
            (pc))) -1 (nil)
    (nil))

(insn 1494 1493 1496 (parallel[ 
            (set (reg/v:SI 253)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 67)
                            (const_int 3 [0x3])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1496 1494 1497 (set (reg:SI 256)
        (const:SI (plus:SI (symbol_ref:SI ("*.LC66"))
                (const_int 3 [0x3])))) -1 (nil)
    (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LC66"))
                (const_int 3 [0x3])))
        (nil)))

(insn 1497 1496 1499 (parallel[ 
            (set (reg:SI 257)
                (zero_extend:SI (mem:QI (reg:SI 256) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1499 1497 1501 (parallel[ 
            (set (reg/v:SI 253)
                (minus:SI (reg/v:SI 253)
                    (reg:SI 257)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1501 1499 1502 (set (reg:SI 258)
        (reg/v:SI 253)) -1 (nil)
    (nil))

(code_label 1502 1501 1503 409 "" "" [0 uses])

(code_label 1503 1502 1504 408 "" "" [0 uses])

(code_label 1504 1503 1505 407 "" "" [0 uses])

(note 1505 1504 1637 0x4038d120 NOTE_INSN_BLOCK_END 0)

(insn 1637 1505 1638 (set (reg:SI 266)
        (reg/v:SI 253)) -1 (nil)
    (nil))

(jump_insn 1638 1637 1639 (set (pc)
        (label_ref 1645)) -1 (nil)
    (nil))

(barrier 1639 1638 1640)

(code_label 1640 1639 1506 422 "" "" [0 uses])

(note 1506 1640 1509 0x40391a60 NOTE_INSN_BLOCK_BEG 0)

(insn 1509 1506 1510 (set (reg/v:SI 259)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 1510 1509 1512 (parallel[ 
            (set (reg/v:SI 260)
                (zero_extend:SI (mem:QI (reg/v:SI 259) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1512 1510 1513 (parallel[ 
            (set (reg/v:SI 260)
                (plus:SI (reg/v:SI 260)
                    (const_int -75 [0xffffffb5])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1513 1512 1514 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 237)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1514 1513 1515 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1549)
            (pc))) -1 (nil)
    (nil))

(insn 1515 1514 1516 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 260)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1516 1515 1519 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1549)
            (pc))) -1 (nil)
    (nil))

(insn 1519 1516 1521 (parallel[ 
            (set (reg/v:SI 260)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 259)
                            (const_int 1 [0x1])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1521 1519 1523 (parallel[ 
            (set (reg/v:SI 260)
                (plus:SI (reg/v:SI 260)
                    (const_int -66 [0xffffffbe])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1523 1521 1524 (set (reg:SI 261)
        (reg/v:SI 260)) -1 (nil)
    (nil))

(insn 1524 1523 1525 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 237)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 1525 1524 1526 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1548)
            (pc))) -1 (nil)
    (nil))

(insn 1526 1525 1527 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 260)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1527 1526 1530 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1548)
            (pc))) -1 (nil)
    (nil))

(insn 1530 1527 1532 (parallel[ 
            (set (reg/v:SI 260)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 259)
                            (const_int 2 [0x2])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1532 1530 1534 (parallel[ 
            (set (reg/v:SI 260)
                (plus:SI (reg/v:SI 260)
                    (const_int 0 [0x0])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1534 1532 1535 (set (reg:SI 262)
        (reg/v:SI 260)) -1 (nil)
    (nil))

(insn 1535 1534 1536 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 237)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 1536 1535 1537 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1547)
            (pc))) -1 (nil)
    (nil))

(insn 1537 1536 1538 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 260)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1538 1537 1539 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1547)
            (pc))) -1 (nil)
    (nil))

(insn 1539 1538 1541 (parallel[ 
            (set (reg/v:SI 260)
                (zero_extend:SI (mem:QI (plus:SI (reg/v:SI 259)
                            (const_int 3 [0x3])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1541 1539 1542 (set (reg:SI 263)
        (const:SI (plus:SI (symbol_ref:SI ("*.LC66"))
                (const_int 3 [0x3])))) -1 (nil)
    (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LC66"))
                (const_int 3 [0x3])))
        (nil)))

(insn 1542 1541 1544 (parallel[ 
            (set (reg:SI 264)
                (zero_extend:SI (mem:QI (reg:SI 263) 0)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1544 1542 1546 (parallel[ 
            (set (reg/v:SI 260)
                (minus:SI (reg/v:SI 260)
                    (reg:SI 264)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1546 1544 1547 (set (reg:SI 265)
        (reg/v:SI 260)) -1 (nil)
    (nil))

(code_label 1547 1546 1548 412 "" "" [0 uses])

(code_label 1548 1547 1549 411 "" "" [0 uses])

(code_label 1549 1548 1550 410 "" "" [0 uses])

(note 1550 1549 1644 0x40391a60 NOTE_INSN_BLOCK_END 0)

(insn 1644 1550 1645 (set (reg:SI 266)
        (reg/v:SI 260)) -1 (nil)
    (nil))

(code_label 1645 1644 1646 423 "" "" [0 uses])

(jump_insn 1646 1645 1647 (set (pc)
        (label_ref 1664)) -1 (nil)
    (nil))

(barrier 1647 1646 1648)

(code_label 1648 1647 1650 420 "" "" [0 uses])

(insn 1650 1648 1652 (set (reg:SI 283)
        (symbol_ref:SI ("*.LC66"))) -1 (nil)
    (expr_list:REG_EQUAL (symbol_ref:SI ("*.LC66"))
        (nil)))

(insn 1652 1650 1654 (set (reg:SI 284)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(insn 1654 1652 1656 (set (reg:SI 285)
        (reg:SI 283)) -1 (nil)
    (nil))

(insn 1656 1654 1657 (set (reg:SI 286)
        (const_int 3 [0x3])) -1 (nil)
    (nil))

(insn 1657 1656 1658 (set (reg:SI 19 dirflag)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 1658 1657 1659 (parallel[ 
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:SI 284) 0)
                    (mem:BLK (reg:SI 285) 0)))
            (use (reg:SI 286))
            (use (const_int 1 [0x1]))
            (use (reg:SI 19 dirflag))
            (clobber (reg:SI 284))
            (clobber (reg:SI 285))
            (clobber (reg:SI 286))
        ] ) -1 (nil)
    (nil))

(insn 1659 1658 1660 (set (reg:QI 287)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 1660 1659 1661 (set (reg:QI 288)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 1661 1660 1663 (parallel[ 
            (set (subreg:QI (reg:SI 266) 0)
                (minus:QI (reg:QI 287)
                    (reg:QI 288)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1663 1661 1664 (set (reg:SI 266)
        (sign_extend:SI (subreg:QI (reg:SI 266) 0))) -1 (nil)
    (nil))

(code_label 1664 1663 1665 421 "" "" [0 uses])

(code_label 1665 1664 1666 417 "" "" [0 uses])

(code_label 1666 1665 1667 414 "" "" [0 uses])

(note 1667 1666 1671 0x40392a60 NOTE_INSN_BLOCK_END 0)

(insn 1671 1667 1672 (set (reg:SI 289)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 1672 1671 1673 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 266)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 1673 1672 1675 (set (strict_low_part (subreg:QI (reg:SI 289) 0))
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 1675 1673 1676 (set (reg:SI 290)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(insn 1676 1675 1677 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 44)
            (const_int 7 [0x7]))) -1 (nil)
    (nil))

(insn 1677 1676 1679 (set (strict_low_part (subreg:QI (reg:SI 290) 0))
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 1679 1677 1680 (parallel[ 
            (set (reg:SI 291)
                (ior:SI (reg:SI 289)
                    (reg:SI 290)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1680 1679 1681 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 291)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1681 1680 1686 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 2163)
            (pc))) -1 (nil)
    (nil))

(insn 1686 1681 1687 (set (reg/v:SI 71)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(note 1687 1686 2154 NOTE_INSN_LOOP_BEG 0)

(jump_insn 2154 1687 2155 (set (pc)
        (label_ref 1688)) -1 (nil)
    (nil))

(barrier 2155 2154 2153)

(code_label 2153 2155 1693 458 "" "" [0 uses])

(code_label 1693 2153 1698 428 "" "" [0 uses])

(insn 1698 1693 1699 (set (reg:DF 293)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC62")) 0)) -1 (nil)
    (nil))

(insn 1699 1698 1701 (set (reg:DF 292)
        (mult:DF (reg/v:DF 60)
            (reg:DF 293))) -1 (nil)
    (nil))

(insn 1701 1699 1702 (set (reg:DF 295)
        (mem:DF (plus:SI (mult:SI (reg/v:SI 71)
                    (const_int 8 [0x8]))
                (reg/v:SI 46)) 0)) -1 (nil)
    (nil))

(insn 1702 1701 1703 (set (reg:DF 294)
        (minus:DF (reg:DF 295)
            (reg:DF 292))) -1 (nil)
    (nil))

(insn 1703 1702 1704 (set (reg:DF 296)
        (minus:DF (reg:DF 294)
            (reg/v:DF 87))) -1 (nil)
    (nil))

(insn 1704 1703 1706 (set (reg:DF 297)
        (div:DF (reg:DF 296)
            (reg/v:DF 65))) -1 (nil)
    (nil))

(insn 1706 1704 1707 (set (reg/v:DF 298)
        (reg:DF 297)) -1 (nil)
    (nil))

(note 1707 1706 1709 0x403943e0 NOTE_INSN_BLOCK_BEG 0)

(note/i 1709 1707 1710 0x40394400 NOTE_INSN_BLOCK_BEG 0)

(insn/i 1710 1709 1711 (parallel[ 
            (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -2 [0xfffffffe])) 0)
                (asm_operands/v ("fnstcw %0") ("=m") 0[ ] 
                    [ ]  ("/usr/include/bits/mathinline.h") 504))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1711 1710 1712 (set (reg:HI 301)
        (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -2 [0xfffffffe])) 0)) -1 (nil)
    (nil))

(insn/i 1712 1711 1713 (parallel[ 
            (set (reg:HI 302)
                (and:HI (reg:HI 301)
                    (const_int 62463 [0xf3ff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1713 1712 1714 (parallel[ 
            (set (reg:HI 303)
                (ior:HI (reg:HI 302)
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1714 1713 1715 (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) 0)
        (reg:HI 303)) -1 (nil)
    (nil))

(insn/i 1715 1714 1716 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -4 [0xfffffffc])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 504)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1716 1715 1717 (parallel[ 
            (set (reg/v:XF 300)
                (asm_operands/v ("frndint") ("=t") 0[ 
                        (reg/v:DF 298)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 504))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1717 1716 1718 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -2 [0xfffffffe])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 504)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1718 1717 1719 (parallel[ 
            (set (reg:DF 304)
                (float_truncate:DF (reg/v:XF 300)))
            (clobber (mem:DF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -16 [0xfffffff0])) 0))
        ] ) -1 (nil)
    (nil))

(insn/i 1719 1718 1720 (set (reg:DF 299)
        (reg:DF 304)) -1 (nil)
    (nil))

(jump_insn/i 1720 1719 1721 (set (pc)
        (label_ref 1724)) -1 (nil)
    (nil))

(barrier/i 1721 1720 1722)

(note/i 1722 1721 1723 0x40394400 NOTE_INSN_BLOCK_END 0)

(insn/i 1723 1722 1724 (clobber (reg:DF 299)) -1 (nil)
    (nil))

(code_label/i 1724 1723 1725 429 "" "" [0 uses])

(note 1725 1724 1727 0x403943e0 NOTE_INSN_BLOCK_END 0)

(insn 1727 1725 1729 (parallel[ 
            (set (reg/v:SI 73)
                (fix:SI (reg:DF 299)))
            (clobber (mem:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -20 [0xffffffec])) 0))
            (clobber (mem:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -24 [0xffffffe8])) 0))
            (clobber (scratch:SI))
        ] ) -1 (nil)
    (nil))

(insn 1729 1727 1730 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 73)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1730 1729 1734 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1735)
            (pc))) -1 (nil)
    (nil))

(insn 1734 1730 1735 (set (reg/v:SI 73)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(code_label 1735 1734 1738 430 "" "" [0 uses])

(insn 1738 1735 1739 (set (reg:DF 306)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC62")) 0)) -1 (nil)
    (nil))

(insn 1739 1738 1740 (set (reg:DF 305)
        (mult:DF (reg/v:DF 60)
            (reg:DF 306))) -1 (nil)
    (nil))

(insn 1740 1739 1741 (set (reg:DF 307)
        (plus:DF (reg:DF 305)
            (mem:DF (plus:SI (mult:SI (reg/v:SI 71)
                        (const_int 8 [0x8]))
                    (reg/v:SI 46)) 0))) -1 (nil)
    (nil))

(insn 1741 1740 1742 (set (reg:DF 308)
        (minus:DF (reg:DF 307)
            (reg/v:DF 87))) -1 (nil)
    (nil))

(insn 1742 1741 1744 (set (reg:DF 309)
        (div:DF (reg:DF 308)
            (reg/v:DF 65))) -1 (nil)
    (nil))

(insn 1744 1742 1745 (set (reg/v:DF 310)
        (reg:DF 309)) -1 (nil)
    (nil))

(note 1745 1744 1747 0x40394d40 NOTE_INSN_BLOCK_BEG 0)

(note/i 1747 1745 1748 0x40394d60 NOTE_INSN_BLOCK_BEG 0)

(insn/i 1748 1747 1749 (parallel[ 
            (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -2 [0xfffffffe])) 0)
                (asm_operands/v ("fnstcw %0") ("=m") 0[ ] 
                    [ ]  ("/usr/include/bits/mathinline.h") 493))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1749 1748 1750 (set (reg:HI 313)
        (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -2 [0xfffffffe])) 0)) -1 (nil)
    (nil))

(insn/i 1750 1749 1751 (parallel[ 
            (set (reg:HI 314)
                (and:HI (reg:HI 313)
                    (const_int 62463 [0xf3ff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1751 1750 1752 (parallel[ 
            (set (reg:HI 315)
                (ior:HI (reg:HI 314)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1752 1751 1753 (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) 0)
        (reg:HI 315)) -1 (nil)
    (nil))

(insn/i 1753 1752 1754 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -4 [0xfffffffc])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 493)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1754 1753 1755 (parallel[ 
            (set (reg/v:XF 312)
                (asm_operands/v ("frndint") ("=t") 0[ 
                        (reg/v:DF 310)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 493))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1755 1754 1756 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -2 [0xfffffffe])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 493)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1756 1755 1757 (parallel[ 
            (set (reg:DF 316)
                (float_truncate:DF (reg/v:XF 312)))
            (clobber (mem:DF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -16 [0xfffffff0])) 0))
        ] ) -1 (nil)
    (nil))

(insn/i 1757 1756 1758 (set (reg:DF 311)
        (reg:DF 316)) -1 (nil)
    (nil))

(jump_insn/i 1758 1757 1759 (set (pc)
        (label_ref 1762)) -1 (nil)
    (nil))

(barrier/i 1759 1758 1760)

(note/i 1760 1759 1761 0x40394d60 NOTE_INSN_BLOCK_END 0)

(insn/i 1761 1760 1762 (clobber (reg:DF 311)) -1 (nil)
    (nil))

(code_label/i 1762 1761 1763 431 "" "" [0 uses])

(note 1763 1762 1765 0x40394d40 NOTE_INSN_BLOCK_END 0)

(insn 1765 1763 1767 (parallel[ 
            (set (reg/v:SI 75)
                (fix:SI (reg:DF 311)))
            (clobber (mem:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -20 [0xffffffec])) 0))
            (clobber (mem:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -24 [0xffffffe8])) 0))
            (clobber (scratch:SI))
        ] ) -1 (nil)
    (nil))

(insn 1767 1765 1768 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 75)
            (reg/v:SI 80))) -1 (nil)
    (nil))

(jump_insn 1768 1767 1772 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1773)
            (pc))) -1 (nil)
    (nil))

(insn 1772 1768 1773 (parallel[ 
            (set (reg/v:SI 75)
                (plus:SI (reg/v:SI 80)
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 1773 1772 1776 432 "" "" [0 uses])

(insn 1776 1773 1777 (set (reg/v:SI 69)
        (reg/v:SI 73)) -1 (nil)
    (nil))

(note 1777 1776 2141 NOTE_INSN_LOOP_BEG 0)

(jump_insn 2141 1777 2142 (set (pc)
        (label_ref 1778)) -1 (nil)
    (nil))

(barrier 2142 2141 2140)

(code_label 2140 2142 1785 457 "" "" [0 uses])

(code_label 1785 2140 1790 436 "" "" [0 uses])

(insn 1790 1785 1791 (set (reg:DF 319)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC62")) 0)) -1 (nil)
    (nil))

(insn 1791 1790 1793 (set (reg:DF 318)
        (mult:DF (reg/v:DF 61)
            (reg:DF 319))) -1 (nil)
    (nil))

(insn 1793 1791 1794 (set (reg:DF 321)
        (mem:DF (plus:SI (mult:SI (reg/v:SI 71)
                    (const_int 8 [0x8]))
                (reg/v:SI 47)) 0)) -1 (nil)
    (nil))

(insn 1794 1793 1795 (set (reg:DF 320)
        (minus:DF (reg:DF 321)
            (reg:DF 318))) -1 (nil)
    (nil))

(insn 1795 1794 1796 (set (reg:DF 322)
        (minus:DF (reg:DF 320)
            (reg/v:DF 88))) -1 (nil)
    (nil))

(insn 1796 1795 1798 (set (reg:DF 323)
        (div:DF (reg:DF 322)
            (reg/v:DF 66))) -1 (nil)
    (nil))

(insn 1798 1796 1799 (set (reg/v:DF 324)
        (reg:DF 323)) -1 (nil)
    (nil))

(note 1799 1798 1801 0x403959a0 NOTE_INSN_BLOCK_BEG 0)

(note/i 1801 1799 1802 0x403959c0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 1802 1801 1803 (parallel[ 
            (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -2 [0xfffffffe])) 0)
                (asm_operands/v ("fnstcw %0") ("=m") 0[ ] 
                    [ ]  ("/usr/include/bits/mathinline.h") 504))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1803 1802 1804 (set (reg:HI 327)
        (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -2 [0xfffffffe])) 0)) -1 (nil)
    (nil))

(insn/i 1804 1803 1805 (parallel[ 
            (set (reg:HI 328)
                (and:HI (reg:HI 327)
                    (const_int 62463 [0xf3ff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1805 1804 1806 (parallel[ 
            (set (reg:HI 329)
                (ior:HI (reg:HI 328)
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1806 1805 1807 (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) 0)
        (reg:HI 329)) -1 (nil)
    (nil))

(insn/i 1807 1806 1808 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -4 [0xfffffffc])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 504)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1808 1807 1809 (parallel[ 
            (set (reg/v:XF 326)
                (asm_operands/v ("frndint") ("=t") 0[ 
                        (reg/v:DF 324)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 504))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1809 1808 1810 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -2 [0xfffffffe])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 504)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1810 1809 1811 (parallel[ 
            (set (reg:DF 330)
                (float_truncate:DF (reg/v:XF 326)))
            (clobber (mem:DF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -16 [0xfffffff0])) 0))
        ] ) -1 (nil)
    (nil))

(insn/i 1811 1810 1812 (set (reg:DF 325)
        (reg:DF 330)) -1 (nil)
    (nil))

(jump_insn/i 1812 1811 1813 (set (pc)
        (label_ref 1816)) -1 (nil)
    (nil))

(barrier/i 1813 1812 1814)

(note/i 1814 1813 1815 0x403959c0 NOTE_INSN_BLOCK_END 0)

(insn/i 1815 1814 1816 (clobber (reg:DF 325)) -1 (nil)
    (nil))

(code_label/i 1816 1815 1817 437 "" "" [0 uses])

(note 1817 1816 1819 0x403959a0 NOTE_INSN_BLOCK_END 0)

(insn 1819 1817 1821 (parallel[ 
            (set (reg/v:SI 74)
                (fix:SI (reg:DF 325)))
            (clobber (mem:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -20 [0xffffffec])) 0))
            (clobber (mem:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -24 [0xffffffe8])) 0))
            (clobber (scratch:SI))
        ] ) -1 (nil)
    (nil))

(insn 1821 1819 1822 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 74)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 1822 1821 1826 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1827)
            (pc))) -1 (nil)
    (nil))

(insn 1826 1822 1827 (set (reg/v:SI 74)
        (const_int 0 [0x0])) -1 (nil)
    (nil))

(code_label 1827 1826 1830 438 "" "" [0 uses])

(insn 1830 1827 1831 (set (reg:DF 332)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC62")) 0)) -1 (nil)
    (nil))

(insn 1831 1830 1832 (set (reg:DF 331)
        (mult:DF (reg/v:DF 61)
            (reg:DF 332))) -1 (nil)
    (nil))

(insn 1832 1831 1833 (set (reg:DF 333)
        (plus:DF (reg:DF 331)
            (mem:DF (plus:SI (mult:SI (reg/v:SI 71)
                        (const_int 8 [0x8]))
                    (reg/v:SI 47)) 0))) -1 (nil)
    (nil))

(insn 1833 1832 1834 (set (reg:DF 334)
        (minus:DF (reg:DF 333)
            (reg/v:DF 88))) -1 (nil)
    (nil))

(insn 1834 1833 1836 (set (reg:DF 335)
        (div:DF (reg:DF 334)
            (reg/v:DF 66))) -1 (nil)
    (nil))

(insn 1836 1834 1837 (set (reg/v:DF 336)
        (reg:DF 335)) -1 (nil)
    (nil))

(note 1837 1836 1839 0x40398300 NOTE_INSN_BLOCK_BEG 0)

(note/i 1839 1837 1840 0x40398320 NOTE_INSN_BLOCK_BEG 0)

(insn/i 1840 1839 1841 (parallel[ 
            (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -2 [0xfffffffe])) 0)
                (asm_operands/v ("fnstcw %0") ("=m") 0[ ] 
                    [ ]  ("/usr/include/bits/mathinline.h") 493))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1841 1840 1842 (set (reg:HI 339)
        (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -2 [0xfffffffe])) 0)) -1 (nil)
    (nil))

(insn/i 1842 1841 1843 (parallel[ 
            (set (reg:HI 340)
                (and:HI (reg:HI 339)
                    (const_int 62463 [0xf3ff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1843 1842 1844 (parallel[ 
            (set (reg:HI 341)
                (ior:HI (reg:HI 340)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1844 1843 1845 (set (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                (const_int -4 [0xfffffffc])) 0)
        (reg:HI 341)) -1 (nil)
    (nil))

(insn/i 1845 1844 1846 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -4 [0xfffffffc])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 493)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1846 1845 1847 (parallel[ 
            (set (reg/v:XF 338)
                (asm_operands/v ("frndint") ("=t") 0[ 
                        (reg/v:DF 336)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 493))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1847 1846 1848 (parallel[ 
            (asm_operands/v ("fldcw %0") ("") 0[ 
                    (mem/v/f:HI (plus:SI (reg:SI 38 virtual-stack-vars)
                            (const_int -2 [0xfffffffe])) 0)
                ] 
                [ 
                    (asm_input:HI ("m"))
                ]  ("/usr/include/bits/mathinline.h") 493)
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1848 1847 1849 (parallel[ 
            (set (reg:DF 342)
                (float_truncate:DF (reg/v:XF 338)))
            (clobber (mem:DF (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -16 [0xfffffff0])) 0))
        ] ) -1 (nil)
    (nil))

(insn/i 1849 1848 1850 (set (reg:DF 337)
        (reg:DF 342)) -1 (nil)
    (nil))

(jump_insn/i 1850 1849 1851 (set (pc)
        (label_ref 1854)) -1 (nil)
    (nil))

(barrier/i 1851 1850 1852)

(note/i 1852 1851 1853 0x40398320 NOTE_INSN_BLOCK_END 0)

(insn/i 1853 1852 1854 (clobber (reg:DF 337)) -1 (nil)
    (nil))

(code_label/i 1854 1853 1855 439 "" "" [0 uses])

(note 1855 1854 1857 0x40398300 NOTE_INSN_BLOCK_END 0)

(insn 1857 1855 1859 (parallel[ 
            (set (reg/v:SI 76)
                (fix:SI (reg:DF 337)))
            (clobber (mem:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -20 [0xffffffec])) 0))
            (clobber (mem:SI (plus:SI (reg:SI 38 virtual-stack-vars)
                        (const_int -24 [0xffffffe8])) 0))
            (clobber (scratch:SI))
        ] ) -1 (nil)
    (nil))

(insn 1859 1857 1860 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 76)
            (reg/v:SI 78))) -1 (nil)
    (nil))

(jump_insn 1860 1859 1864 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1865)
            (pc))) -1 (nil)
    (nil))

(insn 1864 1860 1865 (parallel[ 
            (set (reg/v:SI 76)
                (plus:SI (reg/v:SI 78)
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 1865 1864 1868 440 "" "" [0 uses])

(insn 1868 1865 1869 (set (reg/v:SI 70)
        (reg/v:SI 74)) -1 (nil)
    (nil))

(note 1869 1868 2128 NOTE_INSN_LOOP_BEG 0)

(jump_insn 2128 1869 2129 (set (pc)
        (label_ref 1870)) -1 (nil)
    (nil))

(barrier 2129 2128 2127)

(code_label 2127 2129 1877 456 "" "" [0 uses])

(code_label 1877 2127 1882 444 "" "" [0 uses])

(insn 1882 1877 1883 (set (reg:DF 345)
        (mem:DF (plus:SI (mult:SI (reg/v:SI 69)
                    (const_int 8 [0x8]))
                (reg/v:SI 48)) 0)) -1 (nil)
    (nil))

(insn 1883 1882 1885 (set (reg:DF 344)
        (minus:DF (reg:DF 345)
            (mem:DF (plus:SI (mult:SI (reg/v:SI 71)
                        (const_int 8 [0x8]))
                    (reg/v:SI 46)) 0))) -1 (nil)
    (nil))

(insn 1885 1883 1886 (set (reg/v:DF 346)
        (reg:DF 344)) -1 (nil)
    (nil))

(note 1886 1885 1888 0x40398e80 NOTE_INSN_BLOCK_BEG 0)

(insn/i 1888 1886 1889 (parallel[ 
            (set (reg:DF 347)
                (abs:DF (reg/v:DF 346)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1889 1888 1890 (set (reg/v:DF 84)
        (reg:DF 347)) -1 (nil)
    (nil))

(jump_insn/i 1890 1889 1891 (set (pc)
        (label_ref 1893)) -1 (nil)
    (nil))

(barrier/i 1891 1890 1892)

(insn/i 1892 1891 1893 (clobber (reg/v:DF 84)) -1 (nil)
    (nil))

(code_label/i 1893 1892 1894 445 "" "" [0 uses])

(note 1894 1893 1897 0x40398e80 NOTE_INSN_BLOCK_END 0)

(insn 1897 1894 1898 (set (reg:DF 349)
        (mem:DF (plus:SI (mult:SI (reg/v:SI 70)
                    (const_int 8 [0x8]))
                (reg/v:SI 49)) 0)) -1 (nil)
    (nil))

(insn 1898 1897 1900 (set (reg:DF 348)
        (minus:DF (reg:DF 349)
            (mem:DF (plus:SI (mult:SI (reg/v:SI 71)
                        (const_int 8 [0x8]))
                    (reg/v:SI 47)) 0))) -1 (nil)
    (nil))

(insn 1900 1898 1901 (set (reg/v:DF 350)
        (reg:DF 348)) -1 (nil)
    (nil))

(note 1901 1900 1903 0x4039a360 NOTE_INSN_BLOCK_BEG 0)

(insn/i 1903 1901 1904 (parallel[ 
            (set (reg:DF 351)
                (abs:DF (reg/v:DF 350)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1904 1903 1905 (set (reg/v:DF 85)
        (reg:DF 351)) -1 (nil)
    (nil))

(jump_insn/i 1905 1904 1906 (set (pc)
        (label_ref 1908)) -1 (nil)
    (nil))

(barrier/i 1906 1905 1907)

(insn/i 1907 1906 1908 (clobber (reg/v:DF 85)) -1 (nil)
    (nil))

(code_label/i 1908 1907 1909 446 "" "" [0 uses])

(note 1909 1908 1912 0x4039a360 NOTE_INSN_BLOCK_END 0)

(insn 1912 1909 1913 (set (reg:DF 353)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC62")) 0)) -1 (nil)
    (nil))

(insn 1913 1912 1914 (set (reg:DF 352)
        (mult:DF (reg/v:DF 60)
            (reg:DF 353))) -1 (nil)
    (nil))

(jump_insn 1914 1913 1915 (parallel[ 
            (set (pc)
                (if_then_else (gt:CCFPU (reg/v:DF 84)
                        (reg:DF 352))
                    (label_ref 1917)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn 1915 1914 1916 (set (pc)
        (label_ref 1933)) -1 (nil)
    (nil))

(barrier 1916 1915 1917)

(code_label 1917 1916 1922 448 "" "" [0 uses])

(insn 1922 1917 1924 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1924 1922 1926 (set (mem/f:DF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:DF 60)) -1 (nil)
    (nil))

(insn 1926 1924 1928 (set (mem/f:DF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:DF 84)) -1 (nil)
    (nil))

(insn 1928 1926 1929 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC67"))) -1 (nil)
    (nil))

(call_insn 1929 1928 1932 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mexPrintf")) 0)
            (const_int 32 [0x20]))) -1 (nil)
    (nil)
    (nil))

(insn 1932 1929 1933 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 1933 1932 1936 447 "" "" [0 uses])

(insn 1936 1933 1937 (set (reg:DF 355)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC62")) 0)) -1 (nil)
    (nil))

(insn 1937 1936 1938 (set (reg:DF 354)
        (mult:DF (reg/v:DF 61)
            (reg:DF 355))) -1 (nil)
    (nil))

(jump_insn 1938 1937 1939 (parallel[ 
            (set (pc)
                (if_then_else (gt:CCFPU (reg/v:DF 85)
                        (reg:DF 354))
                    (label_ref 1941)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) -1 (nil)
    (nil))

(jump_insn 1939 1938 1940 (set (pc)
        (label_ref 1957)) -1 (nil)
    (nil))

(barrier 1940 1939 1941)

(code_label 1941 1940 1946 450 "" "" [0 uses])

(insn 1946 1941 1948 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1948 1946 1950 (set (mem/f:DF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:DF 61)) -1 (nil)
    (nil))

(insn 1950 1948 1952 (set (mem/f:DF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:DF 85)) -1 (nil)
    (nil))

(insn 1952 1950 1953 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC68"))) -1 (nil)
    (nil))

(call_insn 1953 1952 1956 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("mexPrintf")) 0)
            (const_int 32 [0x20]))) -1 (nil)
    (nil)
    (nil))

(insn 1956 1953 1957 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 1957 1956 1960 449 "" "" [0 uses])

(insn 1960 1957 1962 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1962 1960 1963 (set (reg:DF 357)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC69")) 0)) -1 (nil)
    (nil))

(insn 1963 1962 1964 (set (reg:DF 356)
        (mult:DF (reg/v:DF 84)
            (reg:DF 357))) -1 (nil)
    (nil))

(insn 1964 1963 1965 (set (reg:DF 358)
        (mult:DF (reg:DF 356)
            (reg/v:DF 84))) -1 (nil)
    (nil))

(insn 1965 1964 1966 (set (reg:DF 359)
        (div:DF (reg:DF 358)
            (reg/v:DF 60))) -1 (nil)
    (nil))

(insn 1966 1965 1968 (set (reg:DF 360)
        (div:DF (reg:DF 359)
            (reg/v:DF 60))) -1 (nil)
    (nil))

(insn 1968 1966 1969 (set (reg:DF 362)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC70")) 0)) -1 (nil)
    (nil))

(insn 1969 1968 1971 (set (reg:DF 361)
        (minus:DF (reg:DF 362)
            (reg:DF 360))) -1 (nil)
    (nil))

(insn 1971 1969 1972 (set (reg/v:DF 363)
        (reg:DF 361)) -1 (nil)
    (nil))

(note 1972 1971 1974 0x4039cac0 NOTE_INSN_BLOCK_BEG 0)

(note/i 1974 1972 1975 0x4039cae0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 1975 1974 1976 (parallel[ 
            (set (reg/v:DF 365)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:DF 363)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 441))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 1976 1975 1977 (set (reg:DF 364)
        (reg/v:DF 365)) -1 (nil)
    (nil))

(jump_insn/i 1977 1976 1978 (set (pc)
        (label_ref 1981)) -1 (nil)
    (nil))

(barrier/i 1978 1977 1979)

(note/i 1979 1978 1980 0x4039cae0 NOTE_INSN_BLOCK_END 0)

(insn/i 1980 1979 1981 (clobber (reg:DF 364)) -1 (nil)
    (nil))

(code_label/i 1981 1980 1982 451 "" "" [0 uses])

(note 1982 1981 1983 0x4039cac0 NOTE_INSN_BLOCK_END 0)

(insn 1983 1982 1985 (set (reg:DF 366)
        (mult:DF (reg/v:DF 62)
            (reg:DF 364))) -1 (nil)
    (nil))

(insn 1985 1983 1986 (set (mem/f:DF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:DF 366)) -1 (nil)
    (nil))

(call_insn 1986 1985 1988 (set (reg:DF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("bessi0")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 1988 1986 1990 (set (reg:DF 367)
        (reg:DF 8 st(0))) -1 (nil)
    (nil))

(insn 1990 1988 1992 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1992 1990 1993 (set (reg:DF 369)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC69")) 0)) -1 (nil)
    (nil))

(insn 1993 1992 1994 (set (reg:DF 368)
        (mult:DF (reg/v:DF 85)
            (reg:DF 369))) -1 (nil)
    (nil))

(insn 1994 1993 1995 (set (reg:DF 370)
        (mult:DF (reg:DF 368)
            (reg/v:DF 85))) -1 (nil)
    (nil))

(insn 1995 1994 1996 (set (reg:DF 371)
        (div:DF (reg:DF 370)
            (reg/v:DF 61))) -1 (nil)
    (nil))

(insn 1996 1995 1998 (set (reg:DF 372)
        (div:DF (reg:DF 371)
            (reg/v:DF 61))) -1 (nil)
    (nil))

(insn 1998 1996 1999 (set (reg:DF 374)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC70")) 0)) -1 (nil)
    (nil))

(insn 1999 1998 2001 (set (reg:DF 373)
        (minus:DF (reg:DF 374)
            (reg:DF 372))) -1 (nil)
    (nil))

(insn 2001 1999 2002 (set (reg/v:DF 375)
        (reg:DF 373)) -1 (nil)
    (nil))

(note 2002 2001 2004 0x4039ce80 NOTE_INSN_BLOCK_BEG 0)

(note/i 2004 2002 2005 0x4039cea0 NOTE_INSN_BLOCK_BEG 0)

(insn/i 2005 2004 2006 (parallel[ 
            (set (reg/v:DF 377)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:DF 375)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 441))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 2006 2005 2007 (set (reg:DF 376)
        (reg/v:DF 377)) -1 (nil)
    (nil))

(jump_insn/i 2007 2006 2008 (set (pc)
        (label_ref 2011)) -1 (nil)
    (nil))

(barrier/i 2008 2007 2009)

(note/i 2009 2008 2010 0x4039cea0 NOTE_INSN_BLOCK_END 0)

(insn/i 2010 2009 2011 (clobber (reg:DF 376)) -1 (nil)
    (nil))

(code_label/i 2011 2010 2012 452 "" "" [0 uses])

(note 2012 2011 2013 0x4039ce80 NOTE_INSN_BLOCK_END 0)

(insn 2013 2012 2015 (set (reg:DF 378)
        (mult:DF (reg/v:DF 63)
            (reg:DF 376))) -1 (nil)
    (nil))

(insn 2015 2013 2016 (set (mem/f:DF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:DF 378)) -1 (nil)
    (nil))

(call_insn 2016 2015 2018 (set (reg:DF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("bessi0")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 2018 2016 2019 (set (reg:DF 379)
        (reg:DF 8 st(0))) -1 (nil)
    (nil))

(insn 2019 2018 2021 (parallel[ 
            (set (reg:SI 380)
                (mult:SI (reg/v:SI 78)
                    (reg/v:SI 69)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 2021 2019 2022 (parallel[ 
            (set (reg:SI 381)
                (plus:SI (reg:SI 380)
                    (reg/v:SI 70)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 2022 2021 2024 (parallel[ 
            (set (reg:SI 382)
                (mult:SI (reg/v:SI 78)
                    (reg/v:SI 69)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 2024 2022 2026 (parallel[ 
            (set (reg:SI 383)
                (plus:SI (reg:SI 382)
                    (reg/v:SI 70)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 2026 2024 2027 (set (reg:DF 385)
        (mem:DF (plus:SI (mult:SI (reg/v:SI 71)
                    (const_int 8 [0x8]))
                (reg/v:SI 50)) 0)) -1 (nil)
    (nil))

(insn 2027 2026 2028 (set (reg:DF 384)
        (div:DF (reg:DF 385)
            (reg/v:DF 60))) -1 (nil)
    (nil))

(insn 2028 2027 2029 (set (reg:DF 386)
        (div:DF (reg:DF 384)
            (reg/v:DF 61))) -1 (nil)
    (nil))

(insn 2029 2028 2030 (set (reg:DF 387)
        (mult:DF (reg:DF 386)
            (reg:DF 367))) -1 (nil)
    (nil))

(insn 2030 2029 2031 (set (reg:DF 388)
        (mult:DF (reg:DF 387)
            (reg:DF 379))) -1 (nil)
    (nil))

(insn 2031 2030 2033 (set (reg:DF 389)
        (plus:DF (reg:DF 388)
            (mem:DF (plus:SI (mult:SI (reg:SI 383)
                        (const_int 8 [0x8]))
                    (reg/v:SI 54)) 0))) -1 (nil)
    (nil))

(insn 2033 2031 2036 (set (mem:DF (plus:SI (mult:SI (reg:SI 381)
                    (const_int 8 [0x8]))
                (reg/v:SI 54)) 0)
        (reg:DF 389)) -1 (nil)
    (nil))

(insn 2036 2033 2037 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 2037 2036 2038 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 83)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 2038 2037 2043 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 2120)
            (pc))) -1 (nil)
    (nil))

(insn 2043 2038 2045 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -8 [0xfffffff8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 2045 2043 2046 (set (reg:DF 391)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC69")) 0)) -1 (nil)
    (nil))

(insn 2046 2045 2047 (set (reg:DF 390)
        (mult:DF (reg/v:DF 84)
            (reg:DF 391))) -1 (nil)
    (nil))

(insn 2047 2046 2048 (set (reg:DF 392)
        (mult:DF (reg:DF 390)
            (reg/v:DF 84))) -1 (nil)
    (nil))

(insn 2048 2047 2049 (set (reg:DF 393)
        (div:DF (reg:DF 392)
            (reg/v:DF 60))) -1 (nil)
    (nil))

(insn 2049 2048 2051 (set (reg:DF 394)
        (div:DF (reg:DF 393)
            (reg/v:DF 60))) -1 (nil)
    (nil))

(insn 2051 2049 2052 (set (reg:DF 396)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC70")) 0)) -1 (nil)
    (nil))

(insn 2052 2051 2054 (set (reg:DF 395)
        (minus:DF (reg:DF 396)
            (reg:DF 394))) -1 (nil)
    (nil))

(insn 2054 2052 2055 (set (reg/v:DF 397)
        (reg:DF 395)) -1 (nil)
    (nil))

(note 2055 2054 2057 0x4039de40 NOTE_INSN_BLOCK_BEG 0)

(note/i 2057 2055 2058 0x4039de60 NOTE_INSN_BLOCK_BEG 0)

(insn/i 2058 2057 2059 (parallel[ 
            (set (reg/v:DF 399)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:DF 397)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 441))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 2059 2058 2060 (set (reg:DF 398)
        (reg/v:DF 399)) -1 (nil)
    (nil))

(jump_insn/i 2060 2059 2061 (set (pc)
        (label_ref 2064)) -1 (nil)
    (nil))

(barrier/i 2061 2060 2062)

(note/i 2062 2061 2063 0x4039de60 NOTE_INSN_BLOCK_END 0)

(insn/i 2063 2062 2064 (clobber (reg:DF 398)) -1 (nil)
    (nil))

(code_label/i 2064 2063 2065 454 "" "" [0 uses])

(note 2065 2064 2066 0x4039de40 NOTE_INSN_BLOCK_END 0)

(insn 2066 2065 2068 (set (reg:DF 400)
        (mult:DF (reg/v:DF 62)
            (reg:DF 398))) -1 (nil)
    (nil))

(insn 2068 2066 2069 (set (mem/f:DF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:DF 400)) -1 (nil)
    (nil))

(call_insn 2069 2068 2071 (set (reg:DF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("bessi0")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 2071 2069 2073 (set (reg:DF 401)
        (reg:DF 8 st(0))) -1 (nil)
    (nil))

(insn 2073 2071 2075 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 2075 2073 2076 (set (reg:DF 403)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC69")) 0)) -1 (nil)
    (nil))

(insn 2076 2075 2077 (set (reg:DF 402)
        (mult:DF (reg/v:DF 85)
            (reg:DF 403))) -1 (nil)
    (nil))

(insn 2077 2076 2078 (set (reg:DF 404)
        (mult:DF (reg:DF 402)
            (reg/v:DF 85))) -1 (nil)
    (nil))

(insn 2078 2077 2079 (set (reg:DF 405)
        (div:DF (reg:DF 404)
            (reg/v:DF 61))) -1 (nil)
    (nil))

(insn 2079 2078 2081 (set (reg:DF 406)
        (div:DF (reg:DF 405)
            (reg/v:DF 61))) -1 (nil)
    (nil))

(insn 2081 2079 2082 (set (reg:DF 408)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC70")) 0)) -1 (nil)
    (nil))

(insn 2082 2081 2084 (set (reg:DF 407)
        (minus:DF (reg:DF 408)
            (reg:DF 406))) -1 (nil)
    (nil))

(insn 2084 2082 2085 (set (reg/v:DF 409)
        (reg:DF 407)) -1 (nil)
    (nil))

(note 2085 2084 2087 0x4039e200 NOTE_INSN_BLOCK_BEG 0)

(note/i 2087 2085 2088 0x4039e220 NOTE_INSN_BLOCK_BEG 0)

(insn/i 2088 2087 2089 (parallel[ 
            (set (reg/v:DF 411)
                (asm_operands/v ("fsqrt") ("=t") 0[ 
                        (reg/v:DF 409)
                    ] 
                    [ 
                        (asm_input:DF ("0"))
                    ]  ("/usr/include/bits/mathinline.h") 441))
            (clobber (reg:QI 19 dirflag))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ] ) -1 (nil)
    (nil))

(insn/i 2089 2088 2090 (set (reg:DF 410)
        (reg/v:DF 411)) -1 (nil)
    (nil))

(jump_insn/i 2090 2089 2091 (set (pc)
        (label_ref 2094)) -1 (nil)
    (nil))

(barrier/i 2091 2090 2092)

(note/i 2092 2091 2093 0x4039e220 NOTE_INSN_BLOCK_END 0)

(insn/i 2093 2092 2094 (clobber (reg:DF 410)) -1 (nil)
    (nil))

(code_label/i 2094 2093 2095 455 "" "" [0 uses])

(note 2095 2094 2096 0x4039e200 NOTE_INSN_BLOCK_END 0)

(insn 2096 2095 2098 (set (reg:DF 412)
        (mult:DF (reg/v:DF 63)
            (reg:DF 410))) -1 (nil)
    (nil))

(insn 2098 2096 2099 (set (mem/f:DF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:DF 412)) -1 (nil)
    (nil))

(call_insn 2099 2098 2101 (set (reg:DF 8 st(0))
        (call (mem:QI (symbol_ref:SI ("bessi0")) 0)
            (const_int 16 [0x10]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 2101 2099 2102 (set (reg:DF 413)
        (reg:DF 8 st(0))) -1 (nil)
    (nil))

(insn 2102 2101 2104 (parallel[ 
            (set (reg:SI 414)
                (mult:SI (reg/v:SI 78)
                    (reg/v:SI 69)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 2104 2102 2105 (parallel[ 
            (set (reg:SI 415)
                (plus:SI (reg:SI 414)
                    (reg/v:SI 70)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 2105 2104 2107 (parallel[ 
            (set (reg:SI 416)
                (mult:SI (reg/v:SI 78)
                    (reg/v:SI 69)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 2107 2105 2109 (parallel[ 
            (set (reg:SI 417)
                (plus:SI (reg:SI 416)
                    (reg/v:SI 70)))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 2109 2107 2110 (set (reg:DF 419)
        (mem:DF (plus:SI (mult:SI (reg/v:SI 71)
                    (const_int 8 [0x8]))
                (reg/v:SI 51)) 0)) -1 (nil)
    (nil))

(insn 2110 2109 2111 (set (reg:DF 418)
        (div:DF (reg:DF 419)
            (reg/v:DF 60))) -1 (nil)
    (nil))

(insn 2111 2110 2112 (set (reg:DF 420)
        (div:DF (reg:DF 418)
            (reg/v:DF 61))) -1 (nil)
    (nil))

(insn 2112 2111 2113 (set (reg:DF 421)
        (mult:DF (reg:DF 420)
            (reg:DF 401))) -1 (nil)
    (nil))

(insn 2113 2112 2114 (set (reg:DF 422)
        (mult:DF (reg:DF 421)
            (reg:DF 413))) -1 (nil)
    (nil))

(insn 2114 2113 2116 (set (reg:DF 423)
        (plus:DF (reg:DF 422)
            (mem:DF (plus:SI (mult:SI (reg:SI 417)
                        (const_int 8 [0x8]))
                    (reg/v:SI 55)) 0))) -1 (nil)
    (nil))

(insn 2116 2114 2119 (set (mem:DF (plus:SI (mult:SI (reg:SI 415)
                    (const_int 8 [0x8]))
                (reg/v:SI 55)) 0)
        (reg:DF 423)) -1 (nil)
    (nil))

(insn 2119 2116 2120 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 2120 2119 2123 453 "" "" [0 uses])

(note 2123 2120 2124 NOTE_INSN_LOOP_CONT 0)

(code_label 2124 2123 2126 443 "" "" [0 uses])

(insn 2126 2124 1870 (parallel[ 
            (set (reg/v:SI 70)
                (plus:SI (reg/v:SI 70)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 1870 2126 1872 441 "" "" [0 uses])

(insn 1872 1870 1873 (parallel[ 
            (set (reg:SI 343)
                (plus:SI (reg/v:SI 76)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1873 1872 1874 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 70)
            (reg:SI 343))) -1 (nil)
    (nil))

(jump_insn 1874 1873 1875 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1877)
            (pc))) -1 (nil)
    (nil))

(jump_insn 1875 1874 1876 (set (pc)
        (label_ref 2133)) -1 (nil)
    (nil))

(barrier 1876 1875 2130)

(jump_insn 2130 1876 2131 (set (pc)
        (label_ref 2127)) -1 (nil)
    (nil))

(barrier 2131 2130 2132)

(note 2132 2131 2133 NOTE_INSN_LOOP_END 0)

(code_label 2133 2132 2136 442 "" "" [0 uses])

(note 2136 2133 2137 NOTE_INSN_LOOP_CONT 0)

(code_label 2137 2136 2139 435 "" "" [0 uses])

(insn 2139 2137 1778 (parallel[ 
            (set (reg/v:SI 69)
                (plus:SI (reg/v:SI 69)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 1778 2139 1780 433 "" "" [0 uses])

(insn 1780 1778 1781 (parallel[ 
            (set (reg:SI 317)
                (plus:SI (reg/v:SI 75)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 1781 1780 1782 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 69)
            (reg:SI 317))) -1 (nil)
    (nil))

(jump_insn 1782 1781 1783 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1785)
            (pc))) -1 (nil)
    (nil))

(jump_insn 1783 1782 1784 (set (pc)
        (label_ref 2146)) -1 (nil)
    (nil))

(barrier 1784 1783 2143)

(jump_insn 2143 1784 2144 (set (pc)
        (label_ref 2140)) -1 (nil)
    (nil))

(barrier 2144 2143 2145)

(note 2145 2144 2146 NOTE_INSN_LOOP_END 0)

(code_label 2146 2145 2149 434 "" "" [0 uses])

(note 2149 2146 2150 NOTE_INSN_LOOP_CONT 0)

(code_label 2150 2149 2152 427 "" "" [0 uses])

(insn 2152 2150 1688 (parallel[ 
            (set (reg/v:SI 71)
                (plus:SI (reg/v:SI 71)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 1688 2152 1689 425 "" "" [0 uses])

(insn 1689 1688 1690 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 71)
            (reg/v:SI 79))) -1 (nil)
    (nil))

(jump_insn 1690 1689 1691 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 1693)
            (pc))) -1 (nil)
    (nil))

(jump_insn 1691 1690 1692 (set (pc)
        (label_ref 2159)) -1 (nil)
    (nil))

(barrier 1692 1691 2156)

(jump_insn 2156 1692 2157 (set (pc)
        (label_ref 2153)) -1 (nil)
    (nil))

(barrier 2157 2156 2158)

(note 2158 2157 2159 NOTE_INSN_LOOP_END 0)

(code_label 2159 2158 2161 426 "" "" [0 uses])

(jump_insn 2161 2159 2162 (set (pc)
        (label_ref 2173)) -1 (nil)
    (nil))

(barrier 2162 2161 2163)

(code_label 2163 2162 2167 424 "" "" [0 uses])

(insn 2167 2163 2169 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 2169 2167 2170 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC71"))) -1 (nil)
    (nil))

(call_insn 2170 2169 2172 (call (mem:QI (symbol_ref:SI ("mexErrMsgTxt")) 0)
        (const_int 16 [0x10])) -1 (nil)
    (nil)
    (nil))

(insn 2172 2170 2173 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(code_label 2173 2172 2174 459 "" "" [0 uses])

(code_label 2174 2173 2175 400 "" "" [0 uses])

(code_label 2175 2174 2178 375 "" "" [0 uses])

(insn 2178 2175 2180 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -12 [0xfffffff4])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 2180 2178 2181 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:SI 67)) -1 (nil)
    (nil))

(call_insn 2181 2180 2183 (call (mem:QI (symbol_ref:SI ("mxFree")) 0)
        (const_int 16 [0x10])) -1 (nil)
    (nil)
    (nil))

(note 2183 2181 2184 0x4039ecc0 NOTE_INSN_BLOCK_END 0)

(note 2184 2183 2186 NOTE_INSN_FUNCTION_END 0)

(code_label 2186 2184 0 322 "" "" [0 uses])
