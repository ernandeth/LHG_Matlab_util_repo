% This is called by rdsClientRecon during Real Time ASL FMRI
% the data, and the reconstruction params have already been loaded
% into the workspace.  This script gets called once per slice
%
% This file exists because it's easier to write out a separate
% file for matlab code than to make engEvalStrings
% within C programs using the Matlab Engine and recompile every time.

DEBUG = 1;
SMOOTHFLAG=1;

begin = (slicenum -1)* xres *xres +1;
finish = (slicenum)* xres *xres;

if DEBUG
    %fprintf('\n   Running in DEBUG mode... getting data from a variable named _raw_ ');
    %fprintf('\n   Make sure you set DEBUG=0 to operate in Real Time with the scanner');
    slice = raw(vnum,begin:finish);  % for testing!!
else
    % this is where the recon happens:
    % plot(abs(mxReconBuffer2)); title(['slice ' num2str(slicenum)]);drawnow
    slice = rt_sprec1(dat, args, scaninfo, kinfo);
    %fprintf('Reconned data! \n');
end

if SMOOTHFLAG
    % fast in-plane smoothing kernel using one neighbor on each side 
    slice = reshape(slice, xres, xres);
    slice = slicesmooth(slice, 0.5);
    slice = reshape(slice, 1, xres*xres);
end

volumes(vnum,  begin:finish ) = slice(:)';
%fprintf('\n %d   %d ', vnum, slicenum);


if (slicenum==Nslices)

    subplot (221)
    lightbox(reshape(volumes(vnum,:),xres,xres,Nslices) );
    title(['raw data volume:' num2str(vnum)]);

    %  save workspace;     %DEBUGGING ONLY!!!
    
    
    if (vnum==1)
        % masking by signal intensity and by the variance map
        slmask=volumes(1,:)>3*median(volumes(1,:));
        slmask = slmask .* varMask;
    end;


    if (vnum>2 && vnum<Nframes)
        % surround subtraction kernel: [1 -2 1]
        asl = volumes(vnum,:) - 2*volumes(vnum-1,:) + volumes(vnum-2,:) ;
        asl = asl*0.5*(-1)^vnum;
        asl = asl.*slmask;

        allASL(vnum-2,:) = asl;
        mean_asl_course (vnum-2) = mean(asl(find(asl)));

        subplot(222)
        lightbox(reshape(asl, xres, xres, Nslices),[-200 200],[]);
        title(['RT Surround Subtr ... (single avg)' num2str(vnum)]);

        if DEBUG, pause(0.1), end
        drawnow
    end

    if ~mod(vnum-3,6) & vnum>8

        cumasl = sum(allASL(vnum-5:vnum,:),1)/6;
        %cumasl = sum(allASL,1);

        subplot(223)
        lightbox(reshape(cumasl, xres, xres, Nslices));
        title(['Cummulative ASL ...(six avgs)' num2str(vnum)]);

        subplot(224)
        plot(mean_asl_course(1:vnum-2));
        title('the mean ASL time course so far ...');
        drawnow


    end
    vnum = vnum+1
    slicenum = 0;

end

slicenum = slicenum +1;

if vnum==(Nframes+1) && slicenum==1
    title(sprintf('\n %d frames acquired.  saving RTdata.mat file \n', Nframes));
    %save RTdata dat volumes allASL
    
    if ~exist('varMask.mat')
        varmap = var(allASL,[],1);
        varmap(find(varmap));
        varMask( varmap > 2*std(varmap))=0;
        varMask( varmap <= 2*std(varmap))=1;
        save varMask.mat varMask
    end
    figure
    lightbox(reshape(varMask, xres, xres, Nslices));
    title('Variance mask');
    
end
